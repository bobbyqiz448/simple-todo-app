["^ ","~:output",["^ ","~:js","goog.provide('devtools.formatters.markup');\ndevtools.formatters.markup.print_with = (function devtools$formatters$markup$print_with(var_args){\nvar args__5775__auto__ = [];\nvar len__5769__auto___15344 = arguments.length;\nvar i__5770__auto___15345 = (0);\nwhile(true){\nif((i__5770__auto___15345 < len__5769__auto___15344)){\nargs__5775__auto__.push((arguments[i__5770__auto___15345]));\n\nvar G__15346 = (i__5770__auto___15345 + (1));\ni__5770__auto___15345 = G__15346;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5776__auto__ = ((((3) < args__5775__auto__.length))?(new cljs.core.IndexedSeq(args__5775__auto__.slice((3)),(0),null)):null);\nreturn devtools.formatters.markup.print_with.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),argseq__5776__auto__);\n});\n\n(devtools.formatters.markup.print_with.cljs$core$IFn$_invoke$arity$variadic = (function (method,value,tag,p__15233){\nvar vec__15234 = p__15233;\nvar max_level = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15234,(0),null);\nvar job_fn = (function (){\nvar G__15237 = value;\nvar G__15238 = tag;\nvar G__15239 = (devtools.formatters.markup.get_markup_db.cljs$core$IFn$_invoke$arity$0 ? devtools.formatters.markup.get_markup_db.cljs$core$IFn$_invoke$arity$0() : devtools.formatters.markup.get_markup_db.call(null));\nreturn (method.cljs$core$IFn$_invoke$arity$3 ? method.cljs$core$IFn$_invoke$arity$3(G__15237,G__15238,G__15239) : method.call(null,G__15237,G__15238,G__15239));\n});\nif((!((max_level == null)))){\nvar _STAR_print_level_STAR__orig_val__15240 = cljs.core._STAR_print_level_STAR_;\nvar _STAR_print_level_STAR__temp_val__15241 = (max_level + (1));\n(cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR__temp_val__15241);\n\ntry{return job_fn();\n}finally {(cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR__orig_val__15240);\n}} else {\nreturn job_fn();\n}\n}));\n\n(devtools.formatters.markup.print_with.cljs$lang$maxFixedArity = (3));\n\n/** @this {Function} */\n(devtools.formatters.markup.print_with.cljs$lang$applyTo = (function (seq15229){\nvar G__15230 = cljs.core.first(seq15229);\nvar seq15229__$1 = cljs.core.next(seq15229);\nvar G__15231 = cljs.core.first(seq15229__$1);\nvar seq15229__$2 = cljs.core.next(seq15229__$1);\nvar G__15232 = cljs.core.first(seq15229__$2);\nvar seq15229__$3 = cljs.core.next(seq15229__$2);\nvar self__5754__auto__ = this;\nreturn self__5754__auto__.cljs$core$IFn$_invoke$arity$variadic(G__15230,G__15231,G__15232,seq15229__$3);\n}));\n\ndevtools.formatters.markup.print_via_writer = (function devtools$formatters$markup$print_via_writer(var_args){\nvar args__5775__auto__ = [];\nvar len__5769__auto___15347 = arguments.length;\nvar i__5770__auto___15348 = (0);\nwhile(true){\nif((i__5770__auto___15348 < len__5769__auto___15347)){\nargs__5775__auto__.push((arguments[i__5770__auto___15348]));\n\nvar G__15349 = (i__5770__auto___15348 + (1));\ni__5770__auto___15348 = G__15349;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5776__auto__ = ((((2) < args__5775__auto__.length))?(new cljs.core.IndexedSeq(args__5775__auto__.slice((2)),(0),null)):null);\nreturn devtools.formatters.markup.print_via_writer.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__5776__auto__);\n});\n\n(devtools.formatters.markup.print_via_writer.cljs$core$IFn$_invoke$arity$variadic = (function (value,tag,p__15245){\nvar vec__15246 = p__15245;\nvar max_level = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15246,(0),null);\nreturn devtools.formatters.markup.print_with.cljs$core$IFn$_invoke$arity$variadic(devtools.formatters.printing.managed_print_via_writer,value,tag,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([max_level], 0));\n}));\n\n(devtools.formatters.markup.print_via_writer.cljs$lang$maxFixedArity = (2));\n\n/** @this {Function} */\n(devtools.formatters.markup.print_via_writer.cljs$lang$applyTo = (function (seq15242){\nvar G__15243 = cljs.core.first(seq15242);\nvar seq15242__$1 = cljs.core.next(seq15242);\nvar G__15244 = cljs.core.first(seq15242__$1);\nvar seq15242__$2 = cljs.core.next(seq15242__$1);\nvar self__5754__auto__ = this;\nreturn self__5754__auto__.cljs$core$IFn$_invoke$arity$variadic(G__15243,G__15244,seq15242__$2);\n}));\n\ndevtools.formatters.markup.print_via_protocol = (function devtools$formatters$markup$print_via_protocol(var_args){\nvar args__5775__auto__ = [];\nvar len__5769__auto___15350 = arguments.length;\nvar i__5770__auto___15351 = (0);\nwhile(true){\nif((i__5770__auto___15351 < len__5769__auto___15350)){\nargs__5775__auto__.push((arguments[i__5770__auto___15351]));\n\nvar G__15352 = (i__5770__auto___15351 + (1));\ni__5770__auto___15351 = G__15352;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5776__auto__ = ((((2) < args__5775__auto__.length))?(new cljs.core.IndexedSeq(args__5775__auto__.slice((2)),(0),null)):null);\nreturn devtools.formatters.markup.print_via_protocol.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__5776__auto__);\n});\n\n(devtools.formatters.markup.print_via_protocol.cljs$core$IFn$_invoke$arity$variadic = (function (value,tag,p__15252){\nvar vec__15253 = p__15252;\nvar max_level = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15253,(0),null);\nreturn devtools.formatters.markup.print_with.cljs$core$IFn$_invoke$arity$variadic(devtools.formatters.printing.managed_print_via_protocol,value,tag,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([max_level], 0));\n}));\n\n(devtools.formatters.markup.print_via_protocol.cljs$lang$maxFixedArity = (2));\n\n/** @this {Function} */\n(devtools.formatters.markup.print_via_protocol.cljs$lang$applyTo = (function (seq15249){\nvar G__15250 = cljs.core.first(seq15249);\nvar seq15249__$1 = cljs.core.next(seq15249);\nvar G__15251 = cljs.core.first(seq15249__$1);\nvar seq15249__$2 = cljs.core.next(seq15249__$1);\nvar self__5754__auto__ = this;\nreturn self__5754__auto__.cljs$core$IFn$_invoke$arity$variadic(G__15250,G__15251,seq15249__$2);\n}));\n\ndevtools.formatters.markup._LT_expandable_GT_ = (function devtools$formatters$markup$_LT_expandable_GT_(var_args){\nvar args__5775__auto__ = [];\nvar len__5769__auto___15353 = arguments.length;\nvar i__5770__auto___15354 = (0);\nwhile(true){\nif((i__5770__auto___15354 < len__5769__auto___15353)){\nargs__5775__auto__.push((arguments[i__5770__auto___15354]));\n\nvar G__15355 = (i__5770__auto___15354 + (1));\ni__5770__auto___15354 = G__15355;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5776__auto__ = ((((0) < args__5775__auto__.length))?(new cljs.core.IndexedSeq(args__5775__auto__.slice((0)),(0),null)):null);\nreturn devtools.formatters.markup._LT_expandable_GT_.cljs$core$IFn$_invoke$arity$variadic(argseq__5776__auto__);\n});\n\n(devtools.formatters.markup._LT_expandable_GT_.cljs$core$IFn$_invoke$arity$variadic = (function (children){\nvar inner_markup = cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"expandable-inner-tag\",\"expandable-inner-tag\",-799648560)], null),children);\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"expandable-tag\",\"expandable-tag\",151027578),new cljs.core.Keyword(null,\"expandable-symbol\",\"expandable-symbol\",1644611290),inner_markup], null);\n}));\n\n(devtools.formatters.markup._LT_expandable_GT_.cljs$lang$maxFixedArity = (0));\n\n/** @this {Function} */\n(devtools.formatters.markup._LT_expandable_GT_.cljs$lang$applyTo = (function (seq15256){\nvar self__5755__auto__ = this;\nreturn self__5755__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq15256));\n}));\n\ndevtools.formatters.markup._LT_raw_surrogate_GT_ = (function devtools$formatters$markup$_LT_raw_surrogate_GT_(var_args){\nvar args__5775__auto__ = [];\nvar len__5769__auto___15356 = arguments.length;\nvar i__5770__auto___15357 = (0);\nwhile(true){\nif((i__5770__auto___15357 < len__5769__auto___15356)){\nargs__5775__auto__.push((arguments[i__5770__auto___15357]));\n\nvar G__15358 = (i__5770__auto___15357 + (1));\ni__5770__auto___15357 = G__15358;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5776__auto__ = ((((0) < args__5775__auto__.length))?(new cljs.core.IndexedSeq(args__5775__auto__.slice((0)),(0),null)):null);\nreturn devtools.formatters.markup._LT_raw_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic(argseq__5776__auto__);\n});\n\n(devtools.formatters.markup._LT_raw_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic = (function (args){\nreturn cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"surrogate\"], null),args);\n}));\n\n(devtools.formatters.markup._LT_raw_surrogate_GT_.cljs$lang$maxFixedArity = (0));\n\n/** @this {Function} */\n(devtools.formatters.markup._LT_raw_surrogate_GT_.cljs$lang$applyTo = (function (seq15257){\nvar self__5755__auto__ = this;\nreturn self__5755__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq15257));\n}));\n\ndevtools.formatters.markup._LT_surrogate_GT_ = (function devtools$formatters$markup$_LT_surrogate_GT_(var_args){\nvar args__5775__auto__ = [];\nvar len__5769__auto___15359 = arguments.length;\nvar i__5770__auto___15360 = (0);\nwhile(true){\nif((i__5770__auto___15360 < len__5769__auto___15359)){\nargs__5775__auto__.push((arguments[i__5770__auto___15360]));\n\nvar G__15361 = (i__5770__auto___15360 + (1));\ni__5770__auto___15360 = G__15361;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5776__auto__ = ((((0) < args__5775__auto__.length))?(new cljs.core.IndexedSeq(args__5775__auto__.slice((0)),(0),null)):null);\nreturn devtools.formatters.markup._LT_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic(argseq__5776__auto__);\n});\n\n(devtools.formatters.markup._LT_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic = (function (p__15259){\nvar vec__15260 = p__15259;\nvar object = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15260,(0),null);\nvar header = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15260,(1),null);\nvar body = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15260,(2),null);\nvar start_index = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15260,(3),null);\nvar header__$1 = (((!((body == null))))?devtools.formatters.markup._LT_expandable_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([header], 0)):header);\nreturn devtools.formatters.markup._LT_raw_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([object,header__$1,body,start_index], 0));\n}));\n\n(devtools.formatters.markup._LT_surrogate_GT_.cljs$lang$maxFixedArity = (0));\n\n/** @this {Function} */\n(devtools.formatters.markup._LT_surrogate_GT_.cljs$lang$applyTo = (function (seq15258){\nvar self__5755__auto__ = this;\nreturn self__5755__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq15258));\n}));\n\ndevtools.formatters.markup._LT_reference_GT_ = (function devtools$formatters$markup$_LT_reference_GT_(var_args){\nvar args__5775__auto__ = [];\nvar len__5769__auto___15362 = arguments.length;\nvar i__5770__auto___15363 = (0);\nwhile(true){\nif((i__5770__auto___15363 < len__5769__auto___15362)){\nargs__5775__auto__.push((arguments[i__5770__auto___15363]));\n\nvar G__15364 = (i__5770__auto___15363 + (1));\ni__5770__auto___15363 = G__15364;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5776__auto__ = ((((0) < args__5775__auto__.length))?(new cljs.core.IndexedSeq(args__5775__auto__.slice((0)),(0),null)):null);\nreturn devtools.formatters.markup._LT_reference_GT_.cljs$core$IFn$_invoke$arity$variadic(argseq__5776__auto__);\n});\n\n(devtools.formatters.markup._LT_reference_GT_.cljs$core$IFn$_invoke$arity$variadic = (function (args){\nreturn cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"reference\"], null),args);\n}));\n\n(devtools.formatters.markup._LT_reference_GT_.cljs$lang$maxFixedArity = (0));\n\n/** @this {Function} */\n(devtools.formatters.markup._LT_reference_GT_.cljs$lang$applyTo = (function (seq15263){\nvar self__5755__auto__ = this;\nreturn self__5755__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq15263));\n}));\n\ndevtools.formatters.markup._LT_reference_surrogate_GT_ = (function devtools$formatters$markup$_LT_reference_surrogate_GT_(var_args){\nvar args__5775__auto__ = [];\nvar len__5769__auto___15366 = arguments.length;\nvar i__5770__auto___15367 = (0);\nwhile(true){\nif((i__5770__auto___15367 < len__5769__auto___15366)){\nargs__5775__auto__.push((arguments[i__5770__auto___15367]));\n\nvar G__15368 = (i__5770__auto___15367 + (1));\ni__5770__auto___15367 = G__15368;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5776__auto__ = ((((0) < args__5775__auto__.length))?(new cljs.core.IndexedSeq(args__5775__auto__.slice((0)),(0),null)):null);\nreturn devtools.formatters.markup._LT_reference_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic(argseq__5776__auto__);\n});\n\n(devtools.formatters.markup._LT_reference_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic = (function (args){\nreturn devtools.formatters.markup._LT_reference_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.apply.cljs$core$IFn$_invoke$arity$2(devtools.formatters.markup._LT_surrogate_GT_,args)], 0));\n}));\n\n(devtools.formatters.markup._LT_reference_surrogate_GT_.cljs$lang$maxFixedArity = (0));\n\n/** @this {Function} */\n(devtools.formatters.markup._LT_reference_surrogate_GT_.cljs$lang$applyTo = (function (seq15264){\nvar self__5755__auto__ = this;\nreturn self__5755__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq15264));\n}));\n\ndevtools.formatters.markup._LT_circular_reference_GT_ = (function devtools$formatters$markup$_LT_circular_reference_GT_(var_args){\nvar args__5775__auto__ = [];\nvar len__5769__auto___15369 = arguments.length;\nvar i__5770__auto___15370 = (0);\nwhile(true){\nif((i__5770__auto___15370 < len__5769__auto___15369)){\nargs__5775__auto__.push((arguments[i__5770__auto___15370]));\n\nvar G__15371 = (i__5770__auto___15370 + (1));\ni__5770__auto___15370 = G__15371;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5776__auto__ = ((((0) < args__5775__auto__.length))?(new cljs.core.IndexedSeq(args__5775__auto__.slice((0)),(0),null)):null);\nreturn devtools.formatters.markup._LT_circular_reference_GT_.cljs$core$IFn$_invoke$arity$variadic(argseq__5776__auto__);\n});\n\n(devtools.formatters.markup._LT_circular_reference_GT_.cljs$core$IFn$_invoke$arity$variadic = (function (children){\nreturn devtools.formatters.markup._LT_reference_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([null,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"circular-reference-tag\",\"circular-reference-tag\",858973471),new cljs.core.Keyword(null,\"circular-ref-icon\",\"circular-ref-icon\",-2087682919)], null),cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"circular-reference-body-tag\",\"circular-reference-body-tag\",-1301830023)], null),children)], 0));\n}));\n\n(devtools.formatters.markup._LT_circular_reference_GT_.cljs$lang$maxFixedArity = (0));\n\n/** @this {Function} */\n(devtools.formatters.markup._LT_circular_reference_GT_.cljs$lang$applyTo = (function (seq15265){\nvar self__5755__auto__ = this;\nreturn self__5755__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq15265));\n}));\n\ndevtools.formatters.markup._LT_native_reference_GT_ = (function devtools$formatters$markup$_LT_native_reference_GT_(object){\nvar reference = devtools.formatters.markup._LT_reference_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([object,(function (p1__15266_SHARP_){\nreturn devtools.formatters.state.set_prevent_recursion(p1__15266_SHARP_,true);\n})], 0));\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"native-reference-wrapper-tag\",\"native-reference-wrapper-tag\",2047690940),new cljs.core.Keyword(null,\"native-reference-background\",\"native-reference-background\",-286129550),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"native-reference-tag\",\"native-reference-tag\",-1516119079),reference], null)], null);\n});\ndevtools.formatters.markup._LT_header_expander_GT_ = (function devtools$formatters$markup$_LT_header_expander_GT_(object){\nreturn devtools.formatters.markup._LT_reference_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([devtools.formatters.markup._LT_raw_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([object,new cljs.core.Keyword(null,\"header-expander-symbol\",\"header-expander-symbol\",907531743),new cljs.core.Keyword(null,\"target\",\"target\",253001721)], 0)),devtools.formatters.state.reset_depth_limits], 0));\n});\ndevtools.formatters.markup._LT_cljs_land_GT_ = (function devtools$formatters$markup$_LT_cljs_land_GT_(var_args){\nvar args__5775__auto__ = [];\nvar len__5769__auto___15376 = arguments.length;\nvar i__5770__auto___15377 = (0);\nwhile(true){\nif((i__5770__auto___15377 < len__5769__auto___15376)){\nargs__5775__auto__.push((arguments[i__5770__auto___15377]));\n\nvar G__15378 = (i__5770__auto___15377 + (1));\ni__5770__auto___15377 = G__15378;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5776__auto__ = ((((0) < args__5775__auto__.length))?(new cljs.core.IndexedSeq(args__5775__auto__.slice((0)),(0),null)):null);\nreturn devtools.formatters.markup._LT_cljs_land_GT_.cljs$core$IFn$_invoke$arity$variadic(argseq__5776__auto__);\n});\n\n(devtools.formatters.markup._LT_cljs_land_GT_.cljs$core$IFn$_invoke$arity$variadic = (function (children){\nreturn cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"cljs-land-tag\",\"cljs-land-tag\",-7524377)], null),children);\n}));\n\n(devtools.formatters.markup._LT_cljs_land_GT_.cljs$lang$maxFixedArity = (0));\n\n/** @this {Function} */\n(devtools.formatters.markup._LT_cljs_land_GT_.cljs$lang$applyTo = (function (seq15267){\nvar self__5755__auto__ = this;\nreturn self__5755__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq15267));\n}));\n\ndevtools.formatters.markup._LT_nil_GT_ = (function devtools$formatters$markup$_LT_nil_GT_(){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"nil-tag\",\"nil-tag\",-1587449115),new cljs.core.Keyword(null,\"nil-label\",\"nil-label\",-587789203)], null);\n});\ndevtools.formatters.markup._LT_bool_GT_ = (function devtools$formatters$markup$_LT_bool_GT_(bool){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"bool-tag\",\"bool-tag\",-10409808),cljs.core.str.cljs$core$IFn$_invoke$arity$1(bool)], null);\n});\ndevtools.formatters.markup._LT_keyword_GT_ = (function devtools$formatters$markup$_LT_keyword_GT_(keyword){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"keyword-tag\",\"keyword-tag\",1587228387),cljs.core.str.cljs$core$IFn$_invoke$arity$1(keyword)], null);\n});\ndevtools.formatters.markup._LT_symbol_GT_ = (function devtools$formatters$markup$_LT_symbol_GT_(symbol){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"symbol-tag\",\"symbol-tag\",-100807517),cljs.core.str.cljs$core$IFn$_invoke$arity$1(symbol)], null);\n});\ndevtools.formatters.markup._LT_number_GT_ = (function devtools$formatters$markup$_LT_number_GT_(number){\nif(cljs.core.truth_(isFinite(number))){\nif(cljs.core.integer_QMARK_(number)){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"integer-tag\",\"integer-tag\",698000472),number], null);\n} else {\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"float-tag\",\"float-tag\",-390834106),number], null);\n}\n} else {\nif(cljs.core.truth_(isNaN(number))){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"float-nan-tag\",\"float-nan-tag\",557403379),cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([number], 0))], null);\n} else {\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"float-infinity-tag\",\"float-infinity-tag\",-289254297),cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([number], 0))], null);\n}\n}\n});\ndevtools.formatters.markup._LT_string_GT_ = (function devtools$formatters$markup$_LT_string_GT_(string){\nvar dq = devtools.formatters.helpers.pref(new cljs.core.Keyword(null,\"dq\",\"dq\",-1690275860));\nvar re_nl = (new RegExp(\"\\n\",\"g\"));\nvar nl_marker = devtools.formatters.helpers.pref(new cljs.core.Keyword(null,\"new-line-string-replacer\",\"new-line-string-replacer\",-753206206));\nvar inline_string = string.replace(re_nl,nl_marker);\nvar max_inline_string_size = (devtools.formatters.helpers.pref(new cljs.core.Keyword(null,\"string-prefix-limit\",\"string-prefix-limit\",1256106332)) + devtools.formatters.helpers.pref(new cljs.core.Keyword(null,\"string-postfix-limit\",\"string-postfix-limit\",-1282205963)));\nvar quote_string = (function (s){\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1(dq),cljs.core.str.cljs$core$IFn$_invoke$arity$1(s),cljs.core.str.cljs$core$IFn$_invoke$arity$1(dq)].join('');\n});\nvar should_abbreviate_QMARK_ = (cljs.core.count(inline_string) > max_inline_string_size);\nif(should_abbreviate_QMARK_){\nvar abbreviated_string = devtools.formatters.helpers.abbreviate_long_string(inline_string,devtools.formatters.helpers.pref(new cljs.core.Keyword(null,\"string-abbreviation-marker\",\"string-abbreviation-marker\",-347785112)),devtools.formatters.helpers.pref(new cljs.core.Keyword(null,\"string-prefix-limit\",\"string-prefix-limit\",1256106332)),devtools.formatters.helpers.pref(new cljs.core.Keyword(null,\"string-postfix-limit\",\"string-postfix-limit\",-1282205963)));\nvar abbreviated_string_markup = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"string-tag\",\"string-tag\",1639024494),quote_string(abbreviated_string)], null);\nvar string_with_nl_markers = string.replace(re_nl,[cljs.core.str.cljs$core$IFn$_invoke$arity$1(nl_marker),\"\\n\"].join(''));\nvar details_markup = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"expanded-string-tag\",\"expanded-string-tag\",-2125162127),string_with_nl_markers], null);\nreturn devtools.formatters.markup._LT_reference_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([string,abbreviated_string_markup,details_markup], 0));\n} else {\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"string-tag\",\"string-tag\",1639024494),quote_string(inline_string)], null);\n}\n});\ndevtools.formatters.markup._LT_preview_GT_ = (function devtools$formatters$markup$_LT_preview_GT_(value){\nreturn devtools.formatters.markup.print_via_writer.cljs$core$IFn$_invoke$arity$variadic(value,new cljs.core.Keyword(null,\"header-tag\",\"header-tag\",1594852433),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([devtools.formatters.helpers.pref(new cljs.core.Keyword(null,\"max-print-level\",\"max-print-level\",-462237413))], 0));\n});\ndevtools.formatters.markup._LT_body_GT_ = (function devtools$formatters$markup$_LT_body_GT_(markup){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"body-tag\",\"body-tag\",433527431),markup], null);\n});\ndevtools.formatters.markup._LT_aligned_body_GT_ = (function devtools$formatters$markup$_LT_aligned_body_GT_(markups_lists){\nvar prepend_li_tag = (function (line){\nif(cljs.core.truth_(line)){\nreturn cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"aligned-li-tag\",\"aligned-li-tag\",1727029722)], null),line);\n} else {\nreturn null;\n}\n});\nvar aligned_lines = cljs.core.keep.cljs$core$IFn$_invoke$arity$2(prepend_li_tag,markups_lists);\nreturn devtools.formatters.markup._LT_body_GT_(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"standard-ol-no-margin-tag\",\"standard-ol-no-margin-tag\",583023747)], null),aligned_lines));\n});\ndevtools.formatters.markup._LT_standard_body_GT_ = (function devtools$formatters$markup$_LT_standard_body_GT_(var_args){\nvar args__5775__auto__ = [];\nvar len__5769__auto___15379 = arguments.length;\nvar i__5770__auto___15380 = (0);\nwhile(true){\nif((i__5770__auto___15380 < len__5769__auto___15379)){\nargs__5775__auto__.push((arguments[i__5770__auto___15380]));\n\nvar G__15381 = (i__5770__auto___15380 + (1));\ni__5770__auto___15380 = G__15381;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5776__auto__ = ((((1) < args__5775__auto__.length))?(new cljs.core.IndexedSeq(args__5775__auto__.slice((1)),(0),null)):null);\nreturn devtools.formatters.markup._LT_standard_body_GT_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__5776__auto__);\n});\n\n(devtools.formatters.markup._LT_standard_body_GT_.cljs$core$IFn$_invoke$arity$variadic = (function (markups_lists,p__15270){\nvar vec__15271 = p__15270;\nvar no_margin_QMARK_ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15271,(0),null);\nvar ol_tag = (cljs.core.truth_(no_margin_QMARK_)?new cljs.core.Keyword(null,\"standard-ol-no-margin-tag\",\"standard-ol-no-margin-tag\",583023747):new cljs.core.Keyword(null,\"standard-ol-tag\",\"standard-ol-tag\",1120081433));\nvar li_tag = (cljs.core.truth_(no_margin_QMARK_)?new cljs.core.Keyword(null,\"standard-li-no-margin-tag\",\"standard-li-no-margin-tag\",-844555468):new cljs.core.Keyword(null,\"standard-li-tag\",\"standard-li-tag\",-932749876));\nvar prepend_li_tag = (function (line){\nif(cljs.core.truth_(line)){\nreturn cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [li_tag], null),line);\n} else {\nreturn null;\n}\n});\nvar lines_markups = cljs.core.keep.cljs$core$IFn$_invoke$arity$2(prepend_li_tag,markups_lists);\nreturn cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [ol_tag], null),lines_markups);\n}));\n\n(devtools.formatters.markup._LT_standard_body_GT_.cljs$lang$maxFixedArity = (1));\n\n/** @this {Function} */\n(devtools.formatters.markup._LT_standard_body_GT_.cljs$lang$applyTo = (function (seq15268){\nvar G__15269 = cljs.core.first(seq15268);\nvar seq15268__$1 = cljs.core.next(seq15268);\nvar self__5754__auto__ = this;\nreturn self__5754__auto__.cljs$core$IFn$_invoke$arity$variadic(G__15269,seq15268__$1);\n}));\n\ndevtools.formatters.markup._LT_standard_body_reference_GT_ = (function devtools$formatters$markup$_LT_standard_body_reference_GT_(o){\nreturn devtools.formatters.markup._LT_standard_body_GT_(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [devtools.formatters.markup._LT_reference_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([o], 0))], null)], null));\n});\ndevtools.formatters.markup._LT_index_GT_ = (function devtools$formatters$markup$_LT_index_GT_(value){\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"index-tag\",\"index-tag\",693492486),value,new cljs.core.Keyword(null,\"line-index-separator\",\"line-index-separator\",-1735989246)], null);\n});\ndevtools.formatters.markup.body_line = (function devtools$formatters$markup$body_line(index,value){\nvar index_markup = devtools.formatters.markup._LT_index_GT_(index);\nvar value_markup = devtools.formatters.markup.print_via_writer.cljs$core$IFn$_invoke$arity$variadic(value,new cljs.core.Keyword(null,\"item-tag\",\"item-tag\",-988763304),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([devtools.formatters.helpers.pref(new cljs.core.Keyword(null,\"body-line-max-print-level\",\"body-line-max-print-level\",571158623))], 0));\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [index_markup,value_markup], null);\n});\ndevtools.formatters.markup.prepare_body_lines = (function devtools$formatters$markup$prepare_body_lines(data,starting_index){\nvar work = data;\nvar index = starting_index;\nvar lines = cljs.core.PersistentVector.EMPTY;\nwhile(true){\nif(cljs.core.empty_QMARK_(work)){\nreturn lines;\n} else {\nvar G__15382 = cljs.core.rest(work);\nvar G__15383 = (index + (1));\nvar G__15384 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(lines,devtools.formatters.markup.body_line(index,cljs.core.first(work)));\nwork = G__15382;\nindex = G__15383;\nlines = G__15384;\ncontinue;\n}\nbreak;\n}\n});\ndevtools.formatters.markup.body_lines = (function devtools$formatters$markup$body_lines(value,starting_index){\nvar seq = cljs.core.seq(value);\nvar max_number_body_items = devtools.formatters.helpers.pref(new cljs.core.Keyword(null,\"max-number-body-items\",\"max-number-body-items\",299914624));\nvar chunk = cljs.core.take.cljs$core$IFn$_invoke$arity$2(max_number_body_items,seq);\nvar rest = cljs.core.drop.cljs$core$IFn$_invoke$arity$2(max_number_body_items,seq);\nvar lines = devtools.formatters.markup.prepare_body_lines(chunk,starting_index);\nvar continue_QMARK_ = (!(cljs.core.empty_QMARK_(cljs.core.take.cljs$core$IFn$_invoke$arity$2((1),rest))));\nif((!(continue_QMARK_))){\nreturn lines;\n} else {\nvar more_label_markup = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"body-items-more-tag\",\"body-items-more-tag\",867141569),new cljs.core.Keyword(null,\"body-items-more-label\",\"body-items-more-label\",-1561152123)], null);\nvar start_index = (starting_index + max_number_body_items);\nvar more_markup = devtools.formatters.markup._LT_reference_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([rest,more_label_markup,new cljs.core.Keyword(null,\"target\",\"target\",253001721),start_index], 0));\nreturn cljs.core.conj.cljs$core$IFn$_invoke$arity$2(lines,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [more_markup], null));\n}\n});\ndevtools.formatters.markup._LT_details_GT_ = (function devtools$formatters$markup$_LT_details_GT_(value,starting_index){\ndevtools.formatters.state.push_object_to_current_history_BANG_(cljs.core.with_meta(value,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"index\",\"index\",-1531685915),starting_index], null)));\n\nvar has_continuation_QMARK_ = (starting_index > (0));\nvar body_markup = devtools.formatters.markup._LT_standard_body_GT_.cljs$core$IFn$_invoke$arity$variadic(devtools.formatters.markup.body_lines(value,starting_index),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([has_continuation_QMARK_], 0));\nif(has_continuation_QMARK_){\nreturn body_markup;\n} else {\nreturn devtools.formatters.markup._LT_body_GT_(body_markup);\n}\n});\ndevtools.formatters.markup._LT_list_details_GT_ = (function devtools$formatters$markup$_LT_list_details_GT_(items,_opts){\nreturn devtools.formatters.markup._LT_aligned_body_GT_(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.list,items));\n});\ndevtools.formatters.markup._LT_list_GT_ = (function devtools$formatters$markup$_LT_list_GT_(var_args){\nvar args__5775__auto__ = [];\nvar len__5769__auto___15385 = arguments.length;\nvar i__5770__auto___15386 = (0);\nwhile(true){\nif((i__5770__auto___15386 < len__5769__auto___15385)){\nargs__5775__auto__.push((arguments[i__5770__auto___15386]));\n\nvar G__15387 = (i__5770__auto___15386 + (1));\ni__5770__auto___15386 = G__15387;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5776__auto__ = ((((2) < args__5775__auto__.length))?(new cljs.core.IndexedSeq(args__5775__auto__.slice((2)),(0),null)):null);\nreturn devtools.formatters.markup._LT_list_GT_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__5776__auto__);\n});\n\n(devtools.formatters.markup._LT_list_GT_.cljs$core$IFn$_invoke$arity$variadic = (function (items,max_count,p__15277){\nvar vec__15278 = p__15277;\nvar opts = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15278,(0),null);\nvar items_markups = cljs.core.take.cljs$core$IFn$_invoke$arity$2(max_count,items);\nvar more_count = (cljs.core.count(items) - max_count);\nvar more_QMARK_ = (more_count > (0));\nvar separator = (function (){var or__5045__auto__ = new cljs.core.Keyword(null,\"separator\",\"separator\",-1628749125).cljs$core$IFn$_invoke$arity$1(opts);\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nreturn new cljs.core.Keyword(null,\"list-separator\",\"list-separator\",900562185);\n}\n})();\nvar more_symbol = ((more_QMARK_)?(function (){var temp__5802__auto__ = new cljs.core.Keyword(null,\"more-symbol\",\"more-symbol\",-2139760242).cljs$core$IFn$_invoke$arity$1(opts);\nif(cljs.core.truth_(temp__5802__auto__)){\nvar more_symbol = temp__5802__auto__;\nif(cljs.core.fn_QMARK_(more_symbol)){\nreturn (more_symbol.cljs$core$IFn$_invoke$arity$1 ? more_symbol.cljs$core$IFn$_invoke$arity$1(more_count) : more_symbol.call(null,more_count));\n} else {\nreturn more_symbol;\n}\n} else {\nreturn devtools.formatters.helpers.get_more_marker(more_count);\n}\n})():null);\nvar preview_markup = cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var or__5045__auto__ = new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223).cljs$core$IFn$_invoke$arity$1(opts);\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nreturn new cljs.core.Keyword(null,\"list-tag\",\"list-tag\",1555796884);\n}\n})(),(function (){var or__5045__auto__ = new cljs.core.Keyword(null,\"open-symbol\",\"open-symbol\",674247825).cljs$core$IFn$_invoke$arity$1(opts);\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nreturn new cljs.core.Keyword(null,\"list-open-symbol\",\"list-open-symbol\",-1162287443);\n}\n})()], null),cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(separator,items_markups),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([((more_QMARK_)?new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [separator,more_symbol], null):null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var or__5045__auto__ = new cljs.core.Keyword(null,\"close-symbol\",\"close-symbol\",1051951165).cljs$core$IFn$_invoke$arity$1(opts);\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nreturn new cljs.core.Keyword(null,\"list-close-symbol\",\"list-close-symbol\",-1120016586);\n}\n})()], null)], 0));\nif(more_QMARK_){\nvar details_markup = new cljs.core.Keyword(null,\"details\",\"details\",1956795411).cljs$core$IFn$_invoke$arity$1(opts);\nvar default_details_fn = cljs.core.partial.cljs$core$IFn$_invoke$arity$3(devtools.formatters.markup._LT_list_details_GT_,items,opts);\nreturn devtools.formatters.markup._LT_reference_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([null,preview_markup,(function (){var or__5045__auto__ = details_markup;\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nreturn default_details_fn;\n}\n})()], 0));\n} else {\nreturn preview_markup;\n}\n}));\n\n(devtools.formatters.markup._LT_list_GT_.cljs$lang$maxFixedArity = (2));\n\n/** @this {Function} */\n(devtools.formatters.markup._LT_list_GT_.cljs$lang$applyTo = (function (seq15274){\nvar G__15275 = cljs.core.first(seq15274);\nvar seq15274__$1 = cljs.core.next(seq15274);\nvar G__15276 = cljs.core.first(seq15274__$1);\nvar seq15274__$2 = cljs.core.next(seq15274__$1);\nvar self__5754__auto__ = this;\nreturn self__5754__auto__.cljs$core$IFn$_invoke$arity$variadic(G__15275,G__15276,seq15274__$2);\n}));\n\ndevtools.formatters.markup._LT_meta_GT_ = (function devtools$formatters$markup$_LT_meta_GT_(metadata){\nvar body_fn = (function (){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"meta-body-tag\",\"meta-body-tag\",1689183121),devtools.formatters.markup._LT_preview_GT_(metadata)], null);\n});\nvar header = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"meta-header-tag\",\"meta-header-tag\",-1207812581),\"meta\"], null);\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"meta-reference-tag\",\"meta-reference-tag\",914791936),devtools.formatters.markup._LT_reference_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([metadata,header,body_fn], 0))], null);\n});\ndevtools.formatters.markup._LT_meta_wrapper_GT_ = (function devtools$formatters$markup$_LT_meta_wrapper_GT_(var_args){\nvar args__5775__auto__ = [];\nvar len__5769__auto___15388 = arguments.length;\nvar i__5770__auto___15389 = (0);\nwhile(true){\nif((i__5770__auto___15389 < len__5769__auto___15388)){\nargs__5775__auto__.push((arguments[i__5770__auto___15389]));\n\nvar G__15390 = (i__5770__auto___15389 + (1));\ni__5770__auto___15389 = G__15390;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5776__auto__ = ((((1) < args__5775__auto__.length))?(new cljs.core.IndexedSeq(args__5775__auto__.slice((1)),(0),null)):null);\nreturn devtools.formatters.markup._LT_meta_wrapper_GT_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__5776__auto__);\n});\n\n(devtools.formatters.markup._LT_meta_wrapper_GT_.cljs$core$IFn$_invoke$arity$variadic = (function (metadata,children){\nreturn cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"meta-wrapper-tag\",\"meta-wrapper-tag\",1927429038)], null),children,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [devtools.formatters.markup._LT_meta_GT_(metadata)], null)], 0));\n}));\n\n(devtools.formatters.markup._LT_meta_wrapper_GT_.cljs$lang$maxFixedArity = (1));\n\n/** @this {Function} */\n(devtools.formatters.markup._LT_meta_wrapper_GT_.cljs$lang$applyTo = (function (seq15281){\nvar G__15282 = cljs.core.first(seq15281);\nvar seq15281__$1 = cljs.core.next(seq15281);\nvar self__5754__auto__ = this;\nreturn self__5754__auto__.cljs$core$IFn$_invoke$arity$variadic(G__15282,seq15281__$1);\n}));\n\ndevtools.formatters.markup._LT_function_details_GT_ = (function devtools$formatters$markup$_LT_function_details_GT_(fn_obj,ns,_name,arities,prefix){\nif(cljs.core.fn_QMARK_(fn_obj)){\n} else {\nthrow (new Error(\"Assert failed: (fn? fn-obj)\"));\n}\n\nvar arities__$1 = cljs.core.map.cljs$core$IFn$_invoke$arity$2(devtools.formatters.helpers.wrap_arity,arities);\nvar make_arity_markup_list = (function (arity){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"fn-multi-arity-args-indent-tag\",\"fn-multi-arity-args-indent-tag\",-1931373734),prefix], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"fn-args-tag\",\"fn-args-tag\",549126831),arity], null)], null);\n});\nvar arities_markupts_lists = (((cljs.core.count(arities__$1) > (1)))?cljs.core.map.cljs$core$IFn$_invoke$arity$2(make_arity_markup_list,arities__$1):null);\nvar ns_markups_list = (((!(cljs.core.empty_QMARK_(ns))))?new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"ns-icon\",\"ns-icon\",725601214),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"fn-ns-name-tag\",\"fn-ns-name-tag\",-900073712),ns], null)], null):null);\nvar native_markups_list = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"native-icon\",\"native-icon\",-126040824),devtools.formatters.markup._LT_native_reference_GT_(fn_obj)], null);\nreturn devtools.formatters.markup._LT_aligned_body_GT_(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(arities_markupts_lists,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [ns_markups_list,native_markups_list], null)));\n});\ndevtools.formatters.markup._LT_arities_GT_ = (function devtools$formatters$markup$_LT_arities_GT_(arities){\nvar multi_arity_QMARK_ = (cljs.core.count(arities) > (1));\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"fn-args-tag\",\"fn-args-tag\",549126831),devtools.formatters.helpers.wrap_arity(((multi_arity_QMARK_)?devtools.formatters.helpers.pref(new cljs.core.Keyword(null,\"multi-arity-symbol\",\"multi-arity-symbol\",-420139653)):cljs.core.first(arities)))], null);\n});\ndevtools.formatters.markup._LT_function_GT_ = (function devtools$formatters$markup$_LT_function_GT_(fn_obj){\nif(cljs.core.fn_QMARK_(fn_obj)){\n} else {\nthrow (new Error(\"Assert failed: (fn? fn-obj)\"));\n}\n\nvar vec__15283 = devtools.munging.parse_fn_info(fn_obj);\nvar ns = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15283,(0),null);\nvar name = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15283,(1),null);\nvar lambda_QMARK_ = cljs.core.empty_QMARK_(name);\nvar spacer_symbol = devtools.formatters.helpers.pref(new cljs.core.Keyword(null,\"spacer\",\"spacer\",2067425139));\nvar rest_symbol = devtools.formatters.helpers.pref(new cljs.core.Keyword(null,\"rest-symbol\",\"rest-symbol\",1021371174));\nvar multi_arity_symbol = devtools.formatters.helpers.pref(new cljs.core.Keyword(null,\"multi-arity-symbol\",\"multi-arity-symbol\",-420139653));\nvar arities = devtools.munging.extract_arities(fn_obj,true,spacer_symbol,multi_arity_symbol,rest_symbol);\nvar arities_markup = devtools.formatters.markup._LT_arities_GT_(arities);\nvar name_markup = (((!(lambda_QMARK_)))?new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"fn-name-tag\",\"fn-name-tag\",555823755),name], null):null);\nvar icon_markup = ((lambda_QMARK_)?new cljs.core.Keyword(null,\"lambda-icon\",\"lambda-icon\",980753546):new cljs.core.Keyword(null,\"fn-icon\",\"fn-icon\",-1412665288));\nvar prefix_markup = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"fn-prefix-tag\",\"fn-prefix-tag\",1947411856),icon_markup,name_markup], null);\nvar preview_markup = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"fn-header-tag\",\"fn-header-tag\",-1262068349),prefix_markup,arities_markup], null);\nvar details_fn = cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic(devtools.formatters.markup._LT_function_details_GT_,fn_obj,ns,name,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([arities,prefix_markup], 0));\nreturn devtools.formatters.markup._LT_reference_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([fn_obj,preview_markup,details_fn], 0));\n});\ndevtools.formatters.markup._LT_type_basis_item_GT_ = (function devtools$formatters$markup$_LT_type_basis_item_GT_(basis_item){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"type-basis-item-tag\",\"type-basis-item-tag\",50612816),cljs.core.name(basis_item)], null);\n});\ndevtools.formatters.markup._LT_type_basis_GT_ = (function devtools$formatters$markup$_LT_type_basis_GT_(basis){\nvar item_markups = cljs.core.map.cljs$core$IFn$_invoke$arity$2(devtools.formatters.markup._LT_type_basis_item_GT_,basis);\nvar children_markups = cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"type-basis-item-separator\",\"type-basis-item-separator\",-2029193896),item_markups);\nreturn cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"type-basis-tag\",\"type-basis-tag\",-2122159204)], null),children_markups);\n});\ndevtools.formatters.markup._LT_type_details_GT_ = (function devtools$formatters$markup$_LT_type_details_GT_(constructor_fn,ns,_name,basis){\nvar ns_markup = (((!(cljs.core.empty_QMARK_(ns))))?new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"ns-icon\",\"ns-icon\",725601214),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"fn-ns-name-tag\",\"fn-ns-name-tag\",-900073712),ns], null)], null):null);\nvar basis_markup = ((cljs.core.empty_QMARK_(basis))?new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"empty-basis-symbol\",\"empty-basis-symbol\",-1971559593)], null):new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"basis-icon\",\"basis-icon\",1917779567),devtools.formatters.markup._LT_type_basis_GT_(basis)], null));\nvar native_markup = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"native-icon\",\"native-icon\",-126040824),devtools.formatters.markup._LT_native_reference_GT_(constructor_fn)], null);\nreturn devtools.formatters.markup._LT_aligned_body_GT_(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [basis_markup,ns_markup,native_markup], null));\n});\ndevtools.formatters.markup._LT_type_GT_ = (function devtools$formatters$markup$_LT_type_GT_(var_args){\nvar args__5775__auto__ = [];\nvar len__5769__auto___15391 = arguments.length;\nvar i__5770__auto___15392 = (0);\nwhile(true){\nif((i__5770__auto___15392 < len__5769__auto___15391)){\nargs__5775__auto__.push((arguments[i__5770__auto___15392]));\n\nvar G__15393 = (i__5770__auto___15392 + (1));\ni__5770__auto___15392 = G__15393;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5776__auto__ = ((((1) < args__5775__auto__.length))?(new cljs.core.IndexedSeq(args__5775__auto__.slice((1)),(0),null)):null);\nreturn devtools.formatters.markup._LT_type_GT_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__5776__auto__);\n});\n\n(devtools.formatters.markup._LT_type_GT_.cljs$core$IFn$_invoke$arity$variadic = (function (constructor_fn,p__15288){\nvar vec__15289 = p__15288;\nvar header_tag = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15289,(0),null);\nvar vec__15292 = devtools.munging.parse_constructor_info(constructor_fn);\nvar ns = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15292,(0),null);\nvar name = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15292,(1),null);\nvar basis = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15292,(2),null);\nvar name_markup = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"type-name-tag\",\"type-name-tag\",-1317275511),name], null);\nvar preview_markup = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var or__5045__auto__ = header_tag;\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nreturn new cljs.core.Keyword(null,\"type-header-tag\",\"type-header-tag\",1645372265);\n}\n})(),new cljs.core.Keyword(null,\"type-symbol\",\"type-symbol\",-941894755),name_markup], null);\nvar details_markup_fn = cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic(devtools.formatters.markup._LT_type_details_GT_,constructor_fn,ns,name,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([basis], 0));\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"type-wrapper-tag\",\"type-wrapper-tag\",-1732366004),new cljs.core.Keyword(null,\"type-header-background\",\"type-header-background\",-810861696),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"type-ref-tag\",\"type-ref-tag\",2126727355),devtools.formatters.markup._LT_reference_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([constructor_fn,preview_markup,details_markup_fn], 0))], null)], null);\n}));\n\n(devtools.formatters.markup._LT_type_GT_.cljs$lang$maxFixedArity = (1));\n\n/** @this {Function} */\n(devtools.formatters.markup._LT_type_GT_.cljs$lang$applyTo = (function (seq15286){\nvar G__15287 = cljs.core.first(seq15286);\nvar seq15286__$1 = cljs.core.next(seq15286);\nvar self__5754__auto__ = this;\nreturn self__5754__auto__.cljs$core$IFn$_invoke$arity$variadic(G__15287,seq15286__$1);\n}));\n\ndevtools.formatters.markup._LT_standalone_type_GT_ = (function devtools$formatters$markup$_LT_standalone_type_GT_(var_args){\nvar args__5775__auto__ = [];\nvar len__5769__auto___15394 = arguments.length;\nvar i__5770__auto___15395 = (0);\nwhile(true){\nif((i__5770__auto___15395 < len__5769__auto___15394)){\nargs__5775__auto__.push((arguments[i__5770__auto___15395]));\n\nvar G__15396 = (i__5770__auto___15395 + (1));\ni__5770__auto___15395 = G__15396;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5776__auto__ = ((((1) < args__5775__auto__.length))?(new cljs.core.IndexedSeq(args__5775__auto__.slice((1)),(0),null)):null);\nreturn devtools.formatters.markup._LT_standalone_type_GT_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__5776__auto__);\n});\n\n(devtools.formatters.markup._LT_standalone_type_GT_.cljs$core$IFn$_invoke$arity$variadic = (function (constructor_fn,p__15297){\nvar vec__15298 = p__15297;\nvar header_tag = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15298,(0),null);\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"standalone-type-tag\",\"standalone-type-tag\",-1677164791),devtools.formatters.markup._LT_type_GT_.cljs$core$IFn$_invoke$arity$variadic(constructor_fn,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([header_tag], 0))], null);\n}));\n\n(devtools.formatters.markup._LT_standalone_type_GT_.cljs$lang$maxFixedArity = (1));\n\n/** @this {Function} */\n(devtools.formatters.markup._LT_standalone_type_GT_.cljs$lang$applyTo = (function (seq15295){\nvar G__15296 = cljs.core.first(seq15295);\nvar seq15295__$1 = cljs.core.next(seq15295);\nvar self__5754__auto__ = this;\nreturn self__5754__auto__.cljs$core$IFn$_invoke$arity$variadic(G__15296,seq15295__$1);\n}));\n\ndevtools.formatters.markup._LT_protocol_method_arity_GT_ = (function devtools$formatters$markup$_LT_protocol_method_arity_GT_(arity_fn){\nreturn devtools.formatters.markup._LT_reference_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([arity_fn], 0));\n});\ndevtools.formatters.markup._LT_protocol_method_arities_details_GT_ = (function devtools$formatters$markup$_LT_protocol_method_arities_details_GT_(fns){\nreturn devtools.formatters.markup._LT_aligned_body_GT_(cljs.core.map.cljs$core$IFn$_invoke$arity$2(devtools.formatters.markup._LT_protocol_method_arity_GT_,fns));\n});\ndevtools.formatters.markup._LT_protocol_method_arities_GT_ = (function devtools$formatters$markup$_LT_protocol_method_arities_GT_(var_args){\nvar args__5775__auto__ = [];\nvar len__5769__auto___15397 = arguments.length;\nvar i__5770__auto___15398 = (0);\nwhile(true){\nif((i__5770__auto___15398 < len__5769__auto___15397)){\nargs__5775__auto__.push((arguments[i__5770__auto___15398]));\n\nvar G__15399 = (i__5770__auto___15398 + (1));\ni__5770__auto___15398 = G__15399;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5776__auto__ = ((((1) < args__5775__auto__.length))?(new cljs.core.IndexedSeq(args__5775__auto__.slice((1)),(0),null)):null);\nreturn devtools.formatters.markup._LT_protocol_method_arities_GT_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__5776__auto__);\n});\n\n(devtools.formatters.markup._LT_protocol_method_arities_GT_.cljs$core$IFn$_invoke$arity$variadic = (function (fns,p__15303){\nvar vec__15304 = p__15303;\nvar max_fns = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15304,(0),null);\nvar max_fns__$1 = (function (){var or__5045__auto__ = max_fns;\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nreturn devtools.formatters.helpers.pref(new cljs.core.Keyword(null,\"max-protocol-method-arities-list\",\"max-protocol-method-arities-list\",-45936465));\n}\n})();\nvar more_QMARK_ = (cljs.core.count(fns) > max_fns__$1);\nvar aritites_markups = cljs.core.map.cljs$core$IFn$_invoke$arity$2(devtools.formatters.markup._LT_protocol_method_arity_GT_,cljs.core.take.cljs$core$IFn$_invoke$arity$2(max_fns__$1,fns));\nvar preview_markup = cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"protocol-method-arities-header-tag\",\"protocol-method-arities-header-tag\",734407707),new cljs.core.Keyword(null,\"protocol-method-arities-header-open-symbol\",\"protocol-method-arities-header-open-symbol\",1704200465)], null),cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"protocol-method-arities-list-header-separator\",\"protocol-method-arities-list-header-separator\",-115158954),aritites_markups),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([((more_QMARK_)?new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"protocol-method-arities-more-symbol\",\"protocol-method-arities-more-symbol\",-477018522)], null):null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"protocol-method-arities-header-close-symbol\",\"protocol-method-arities-header-close-symbol\",-1375237120)], null)], 0));\nif(more_QMARK_){\nvar details_markup_fn = cljs.core.partial.cljs$core$IFn$_invoke$arity$2(devtools.formatters.markup._LT_protocol_method_arities_details_GT_,fns);\nreturn devtools.formatters.markup._LT_reference_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([null,preview_markup,details_markup_fn], 0));\n} else {\nreturn preview_markup;\n}\n}));\n\n(devtools.formatters.markup._LT_protocol_method_arities_GT_.cljs$lang$maxFixedArity = (1));\n\n/** @this {Function} */\n(devtools.formatters.markup._LT_protocol_method_arities_GT_.cljs$lang$applyTo = (function (seq15301){\nvar G__15302 = cljs.core.first(seq15301);\nvar seq15301__$1 = cljs.core.next(seq15301);\nvar self__5754__auto__ = this;\nreturn self__5754__auto__.cljs$core$IFn$_invoke$arity$variadic(G__15302,seq15301__$1);\n}));\n\ndevtools.formatters.markup._LT_protocol_method_GT_ = (function devtools$formatters$markup$_LT_protocol_method_GT_(name,arities){\nreturn new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"protocol-method-tag\",\"protocol-method-tag\",2032279830),new cljs.core.Keyword(null,\"method-icon\",\"method-icon\",-1678775281),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"protocol-method-name-tag\",\"protocol-method-name-tag\",-1030376744),name], null),devtools.formatters.markup._LT_protocol_method_arities_GT_(arities)], null);\n});\ndevtools.formatters.markup._LT_protocol_details_GT_ = (function devtools$formatters$markup$_LT_protocol_details_GT_(obj,ns,_name,selector,_fast_QMARK_){\nvar protocol_obj = devtools.munging.get_protocol_object(selector);\nvar ns_markups_list = (((!(cljs.core.empty_QMARK_(ns))))?new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"ns-icon\",\"ns-icon\",725601214),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"protocol-ns-name-tag\",\"protocol-ns-name-tag\",1832081510),ns], null)], null):null);\nvar native_markups_list = (((!((protocol_obj == null))))?new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"native-icon\",\"native-icon\",-126040824),devtools.formatters.markup._LT_native_reference_GT_(protocol_obj)], null):null);\nvar methods$ = devtools.munging.collect_protocol_methods(obj,selector);\nvar methods_markups = cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p__15307){\nvar vec__15308 = p__15307;\nvar name = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15308,(0),null);\nvar arities = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15308,(1),null);\nreturn devtools.formatters.markup._LT_protocol_method_GT_(name,arities);\n}),methods$);\nvar methods_markups_lists = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.list,methods_markups);\nreturn devtools.formatters.markup._LT_aligned_body_GT_(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(methods_markups_lists,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [ns_markups_list,native_markups_list], null)));\n});\ndevtools.formatters.markup._LT_protocol_GT_ = (function devtools$formatters$markup$_LT_protocol_GT_(var_args){\nvar args__5775__auto__ = [];\nvar len__5769__auto___15422 = arguments.length;\nvar i__5770__auto___15423 = (0);\nwhile(true){\nif((i__5770__auto___15423 < len__5769__auto___15422)){\nargs__5775__auto__.push((arguments[i__5770__auto___15423]));\n\nvar G__15424 = (i__5770__auto___15423 + (1));\ni__5770__auto___15423 = G__15424;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5776__auto__ = ((((2) < args__5775__auto__.length))?(new cljs.core.IndexedSeq(args__5775__auto__.slice((2)),(0),null)):null);\nreturn devtools.formatters.markup._LT_protocol_GT_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__5776__auto__);\n});\n\n(devtools.formatters.markup._LT_protocol_GT_.cljs$core$IFn$_invoke$arity$variadic = (function (obj,protocol,p__15314){\nvar vec__15315 = p__15314;\nvar tag = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15315,(0),null);\nvar map__15318 = protocol;\nvar map__15318__$1 = cljs.core.__destructure_map(map__15318);\nvar ns = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__15318__$1,new cljs.core.Keyword(null,\"ns\",\"ns\",441598760));\nvar name = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__15318__$1,new cljs.core.Keyword(null,\"name\",\"name\",1843675177));\nvar selector = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__15318__$1,new cljs.core.Keyword(null,\"selector\",\"selector\",762528866));\nvar fast_QMARK_ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__15318__$1,new cljs.core.Keyword(null,\"fast?\",\"fast?\",-1813307150));\nvar preview_markup = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var or__5045__auto__ = tag;\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nreturn new cljs.core.Keyword(null,\"protocol-name-tag\",\"protocol-name-tag\",1508238310);\n}\n})(),name], null);\nvar prefix_markup = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(cljs.core.truth_(fast_QMARK_)?new cljs.core.Keyword(null,\"fast-protocol-tag\",\"fast-protocol-tag\",2066025065):new cljs.core.Keyword(null,\"slow-protocol-tag\",\"slow-protocol-tag\",2061129467)),new cljs.core.Keyword(null,\"protocol-background\",\"protocol-background\",1111513794)], null);\nif((!((obj == null)))){\nvar details_markup_fn = cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic(devtools.formatters.markup._LT_protocol_details_GT_,obj,ns,name,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([selector,fast_QMARK_], 0));\nreturn cljs.core.conj.cljs$core$IFn$_invoke$arity$2(prefix_markup,devtools.formatters.markup._LT_reference_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([obj,preview_markup,details_markup_fn], 0)));\n} else {\nreturn cljs.core.conj.cljs$core$IFn$_invoke$arity$2(prefix_markup,preview_markup);\n}\n}));\n\n(devtools.formatters.markup._LT_protocol_GT_.cljs$lang$maxFixedArity = (2));\n\n/** @this {Function} */\n(devtools.formatters.markup._LT_protocol_GT_.cljs$lang$applyTo = (function (seq15311){\nvar G__15312 = cljs.core.first(seq15311);\nvar seq15311__$1 = cljs.core.next(seq15311);\nvar G__15313 = cljs.core.first(seq15311__$1);\nvar seq15311__$2 = cljs.core.next(seq15311__$1);\nvar self__5754__auto__ = this;\nreturn self__5754__auto__.cljs$core$IFn$_invoke$arity$variadic(G__15312,G__15313,seq15311__$2);\n}));\n\ndevtools.formatters.markup._LT_more_protocols_GT_ = (function devtools$formatters$markup$_LT_more_protocols_GT_(more_count){\nvar fake_protocol = new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),devtools.formatters.helpers.get_more_marker(more_count)], null);\nreturn devtools.formatters.markup._LT_protocol_GT_.cljs$core$IFn$_invoke$arity$variadic(null,fake_protocol,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"protocol-more-tag\",\"protocol-more-tag\",2098702865)], 0));\n});\ndevtools.formatters.markup._LT_protocols_list_GT_ = (function devtools$formatters$markup$_LT_protocols_list_GT_(var_args){\nvar args__5775__auto__ = [];\nvar len__5769__auto___15425 = arguments.length;\nvar i__5770__auto___15426 = (0);\nwhile(true){\nif((i__5770__auto___15426 < len__5769__auto___15425)){\nargs__5775__auto__.push((arguments[i__5770__auto___15426]));\n\nvar G__15427 = (i__5770__auto___15426 + (1));\ni__5770__auto___15426 = G__15427;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5776__auto__ = ((((2) < args__5775__auto__.length))?(new cljs.core.IndexedSeq(args__5775__auto__.slice((2)),(0),null)):null);\nreturn devtools.formatters.markup._LT_protocols_list_GT_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__5776__auto__);\n});\n\n(devtools.formatters.markup._LT_protocols_list_GT_.cljs$core$IFn$_invoke$arity$variadic = (function (obj,protocols,p__15322){\nvar vec__15323 = p__15322;\nvar max_protocols = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15323,(0),null);\nvar max_protocols__$1 = (function (){var or__5045__auto__ = max_protocols;\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nreturn devtools.formatters.helpers.pref(new cljs.core.Keyword(null,\"max-list-protocols\",\"max-list-protocols\",-537135129));\n}\n})();\nvar protocols_markups = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.partial.cljs$core$IFn$_invoke$arity$2(devtools.formatters.markup._LT_protocol_GT_,obj),protocols);\nreturn devtools.formatters.markup._LT_list_GT_.cljs$core$IFn$_invoke$arity$variadic(protocols_markups,max_protocols__$1,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),new cljs.core.Keyword(null,\"protocols-header-tag\",\"protocols-header-tag\",-734413384),new cljs.core.Keyword(null,\"open-symbol\",\"open-symbol\",674247825),new cljs.core.Keyword(null,\"protocols-list-open-symbol\",\"protocols-list-open-symbol\",-729713043),new cljs.core.Keyword(null,\"close-symbol\",\"close-symbol\",1051951165),new cljs.core.Keyword(null,\"protocols-list-close-symbol\",\"protocols-list-close-symbol\",652072902),new cljs.core.Keyword(null,\"separator\",\"separator\",-1628749125),new cljs.core.Keyword(null,\"header-protocol-separator\",\"header-protocol-separator\",445531439),new cljs.core.Keyword(null,\"more-symbol\",\"more-symbol\",-2139760242),devtools.formatters.markup._LT_more_protocols_GT_], null)], 0));\n}));\n\n(devtools.formatters.markup._LT_protocols_list_GT_.cljs$lang$maxFixedArity = (2));\n\n/** @this {Function} */\n(devtools.formatters.markup._LT_protocols_list_GT_.cljs$lang$applyTo = (function (seq15319){\nvar G__15320 = cljs.core.first(seq15319);\nvar seq15319__$1 = cljs.core.next(seq15319);\nvar G__15321 = cljs.core.first(seq15319__$1);\nvar seq15319__$2 = cljs.core.next(seq15319__$1);\nvar self__5754__auto__ = this;\nreturn self__5754__auto__.cljs$core$IFn$_invoke$arity$variadic(G__15320,G__15321,seq15319__$2);\n}));\n\ndevtools.formatters.markup._LT_field_GT_ = (function devtools$formatters$markup$_LT_field_GT_(name,value){\nreturn new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"header-field-tag\",\"header-field-tag\",-1403476101),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"header-field-name-tag\",\"header-field-name-tag\",82291956),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name)], null),new cljs.core.Keyword(null,\"header-field-value-spacer\",\"header-field-value-spacer\",-1210630679),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"header-field-value-tag\",\"header-field-value-tag\",-1708691701),devtools.formatters.markup._LT_reference_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([devtools.formatters.markup._LT_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([value], 0)),(function (p1__15326_SHARP_){\nreturn devtools.formatters.state.set_managed_print_level(p1__15326_SHARP_,(1));\n})], 0))], null),new cljs.core.Keyword(null,\"header-field-separator\",\"header-field-separator\",-774444018)], null);\n});\ndevtools.formatters.markup._LT_fields_details_row_GT_ = (function devtools$formatters$markup$_LT_fields_details_row_GT_(field){\nvar vec__15327 = field;\nvar name = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15327,(0),null);\nvar value = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15327,(1),null);\nreturn new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"body-field-tr-tag\",\"body-field-tr-tag\",37280691),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"body-field-td1-tag\",\"body-field-td1-tag\",256357429),new cljs.core.Keyword(null,\"body-field-symbol\",\"body-field-symbol\",256897537),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"body-field-name-tag\",\"body-field-name-tag\",917867601),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name)], null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"body-field-td2-tag\",\"body-field-td2-tag\",94501500),new cljs.core.Keyword(null,\"body-field-value-spacer\",\"body-field-value-spacer\",1279911362)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"body-field-td3-tag\",\"body-field-td3-tag\",-803119922),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"body-field-value-tag\",\"body-field-value-tag\",800789079),devtools.formatters.markup._LT_reference_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([value], 0))], null)], null)], null);\n});\ndevtools.formatters.markup._LT_fields_GT_ = (function devtools$formatters$markup$_LT_fields_GT_(var_args){\nvar args__5775__auto__ = [];\nvar len__5769__auto___15432 = arguments.length;\nvar i__5770__auto___15433 = (0);\nwhile(true){\nif((i__5770__auto___15433 < len__5769__auto___15432)){\nargs__5775__auto__.push((arguments[i__5770__auto___15433]));\n\nvar G__15434 = (i__5770__auto___15433 + (1));\ni__5770__auto___15433 = G__15434;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5776__auto__ = ((((1) < args__5775__auto__.length))?(new cljs.core.IndexedSeq(args__5775__auto__.slice((1)),(0),null)):null);\nreturn devtools.formatters.markup._LT_fields_GT_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__5776__auto__);\n});\n\n(devtools.formatters.markup._LT_fields_GT_.cljs$core$IFn$_invoke$arity$variadic = (function (fields,p__15332){\nvar vec__15333 = p__15332;\nvar max_fields = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15333,(0),null);\nif((cljs.core.count(fields) === (0))){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"fields-header-tag\",\"fields-header-tag\",1339134308),new cljs.core.Keyword(null,\"fields-header-no-fields-symbol\",\"fields-header-no-fields-symbol\",-1749204979)], null);\n} else {\nvar max_fields__$1 = (function (){var or__5045__auto__ = max_fields;\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nreturn devtools.formatters.helpers.pref(new cljs.core.Keyword(null,\"max-instance-header-fields\",\"max-instance-header-fields\",-126007269));\n}\n})();\nvar more_QMARK_ = (cljs.core.count(fields) > max_fields__$1);\nvar fields_markups = cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p__15336){\nvar vec__15337 = p__15336;\nvar name = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15337,(0),null);\nvar value = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15337,(1),null);\nreturn devtools.formatters.markup._LT_field_GT_(name,value);\n}),cljs.core.take.cljs$core$IFn$_invoke$arity$2(max_fields__$1,fields));\nreturn cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"fields-header-tag\",\"fields-header-tag\",1339134308),new cljs.core.Keyword(null,\"fields-header-open-symbol\",\"fields-header-open-symbol\",-26243798)], null),fields_markups,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [((more_QMARK_)?new cljs.core.Keyword(null,\"more-fields-symbol\",\"more-fields-symbol\",720022882):null),new cljs.core.Keyword(null,\"fields-header-close-symbol\",\"fields-header-close-symbol\",1615181116)], null)], 0));\n}\n}));\n\n(devtools.formatters.markup._LT_fields_GT_.cljs$lang$maxFixedArity = (1));\n\n/** @this {Function} */\n(devtools.formatters.markup._LT_fields_GT_.cljs$lang$applyTo = (function (seq15330){\nvar G__15331 = cljs.core.first(seq15330);\nvar seq15330__$1 = cljs.core.next(seq15330);\nvar self__5754__auto__ = this;\nreturn self__5754__auto__.cljs$core$IFn$_invoke$arity$variadic(G__15331,seq15330__$1);\n}));\n\ndevtools.formatters.markup._LT_fields_details_GT_ = (function devtools$formatters$markup$_LT_fields_details_GT_(fields,obj){\nvar protocols = devtools.munging.scan_protocols(obj);\nvar has_protocols_QMARK_ = (!(cljs.core.empty_QMARK_(protocols)));\nvar fields_markup = (((!((cljs.core.count(fields) === (0)))))?new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"fields-icon\",\"fields-icon\",-436030420),cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"instance-body-fields-table-tag\",\"instance-body-fields-table-tag\",1306340776)], null),cljs.core.map.cljs$core$IFn$_invoke$arity$2(devtools.formatters.markup._LT_fields_details_row_GT_,fields))], null):null);\nvar protocols_list_markup = ((has_protocols_QMARK_)?new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"protocols-icon\",\"protocols-icon\",-517302494),devtools.formatters.markup._LT_protocols_list_GT_(obj,protocols)], null):null);\nvar native_markup = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"native-icon\",\"native-icon\",-126040824),devtools.formatters.markup._LT_native_reference_GT_(obj)], null);\nreturn devtools.formatters.markup._LT_aligned_body_GT_(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [fields_markup,protocols_list_markup,native_markup], null));\n});\ndevtools.formatters.markup._LT_instance_GT_ = (function devtools$formatters$markup$_LT_instance_GT_(value){\nvar constructor_fn = devtools.formatters.helpers.get_constructor(value);\nvar vec__15340 = devtools.munging.parse_constructor_info(constructor_fn);\nvar _ns = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15340,(0),null);\nvar _name = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15340,(1),null);\nvar basis = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15340,(2),null);\nvar custom_printing_QMARK_ = (((!((value == null))))?(((((value.cljs$lang$protocol_mask$partition0$ & (2147483648))) || ((cljs.core.PROTOCOL_SENTINEL === value.cljs$core$IPrintWithWriter$))))?true:false):false);\nvar type_markup = devtools.formatters.markup._LT_type_GT_.cljs$core$IFn$_invoke$arity$variadic(constructor_fn,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"instance-type-header-tag\",\"instance-type-header-tag\",-1015702989)], 0));\nvar fields = devtools.formatters.helpers.fetch_fields_values(value,basis);\nvar fields_markup = devtools.formatters.markup._LT_fields_GT_.cljs$core$IFn$_invoke$arity$variadic(fields,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([((custom_printing_QMARK_)?(0):null)], 0));\nvar fields_details_markup_fn = (function (){\nreturn devtools.formatters.markup._LT_fields_details_GT_(fields,value);\n});\nvar fields_preview_markup = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"instance-value-tag\",\"instance-value-tag\",-1739593896),devtools.formatters.markup._LT_reference_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([value,fields_markup,fields_details_markup_fn], 0))], null);\nvar custom_printing_markup = ((custom_printing_QMARK_)?new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"instance-custom-printing-wrapper-tag\",\"instance-custom-printing-wrapper-tag\",1461890684),new cljs.core.Keyword(null,\"instance-custom-printing-background\",\"instance-custom-printing-background\",-248433646),devtools.formatters.markup.print_via_protocol(value,new cljs.core.Keyword(null,\"instance-custom-printing-tag\",\"instance-custom-printing-tag\",-67034432))], null):null);\nreturn new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"instance-header-tag\",\"instance-header-tag\",903623870),new cljs.core.Keyword(null,\"instance-header-background\",\"instance-header-background\",1510357287),fields_preview_markup,custom_printing_markup,type_markup], null);\n});\ndevtools.formatters.markup._LT_header_GT_ = (function devtools$formatters$markup$_LT_header_GT_(value){\nreturn devtools.formatters.markup._LT_cljs_land_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([devtools.formatters.markup._LT_preview_GT_(value)], 0));\n});\ndevtools.formatters.markup._LT_surrogate_header_GT_ = (function devtools$formatters$markup$_LT_surrogate_header_GT_(surrogate){\nvar or__5045__auto__ = devtools.formatters.templating.get_surrogate_header(surrogate);\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nreturn devtools.formatters.markup._LT_preview_GT_(devtools.formatters.templating.get_surrogate_target(surrogate));\n}\n});\ndevtools.formatters.markup._LT_surrogate_target_GT_ = (function devtools$formatters$markup$_LT_surrogate_target_GT_(surrogate){\nvar target = devtools.formatters.templating.get_surrogate_target(surrogate);\nif(cljs.core.seqable_QMARK_(target)){\nvar starting_index = devtools.formatters.templating.get_surrogate_start_index(surrogate);\nreturn devtools.formatters.markup._LT_details_GT_(target,starting_index);\n} else {\nreturn devtools.formatters.markup._LT_standard_body_reference_GT_(target);\n}\n});\ndevtools.formatters.markup._LT_surrogate_body_GT_ = (function devtools$formatters$markup$_LT_surrogate_body_GT_(surrogate){\nvar temp__5802__auto__ = devtools.formatters.templating.get_surrogate_body(surrogate);\nif(cljs.core.truth_(temp__5802__auto__)){\nvar body = temp__5802__auto__;\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"target\",\"target\",253001721),body)){\nreturn devtools.formatters.markup._LT_surrogate_target_GT_(surrogate);\n} else {\nreturn body;\n}\n} else {\nreturn null;\n}\n});\ndevtools.formatters.markup._LT_atomic_GT_ = (function devtools$formatters$markup$_LT_atomic_GT_(value){\nif(cljs.core.truth_(devtools.formatters.helpers.should_render_QMARK_(new cljs.core.Keyword(null,\"render-nils\",\"render-nils\",1360008699),value,cljs.core.nil_QMARK_))){\nreturn devtools.formatters.markup._LT_nil_GT_();\n} else {\nif(cljs.core.truth_(devtools.formatters.helpers.should_render_QMARK_(new cljs.core.Keyword(null,\"render-bools\",\"render-bools\",1793659724),value,devtools.formatters.helpers.bool_QMARK_))){\nreturn devtools.formatters.markup._LT_bool_GT_(value);\n} else {\nif(cljs.core.truth_(devtools.formatters.helpers.should_render_QMARK_(new cljs.core.Keyword(null,\"render-strings\",\"render-strings\",-1497177335),value,cljs.core.string_QMARK_))){\nreturn devtools.formatters.markup._LT_string_GT_(value);\n} else {\nif(cljs.core.truth_(devtools.formatters.helpers.should_render_QMARK_(new cljs.core.Keyword(null,\"render-numbers\",\"render-numbers\",-1385392009),value,cljs.core.number_QMARK_))){\nreturn devtools.formatters.markup._LT_number_GT_(value);\n} else {\nif(cljs.core.truth_(devtools.formatters.helpers.should_render_QMARK_(new cljs.core.Keyword(null,\"render-keywords\",\"render-keywords\",1200455875),value,cljs.core.keyword_QMARK_))){\nreturn devtools.formatters.markup._LT_keyword_GT_(value);\n} else {\nif(cljs.core.truth_(devtools.formatters.helpers.should_render_QMARK_(new cljs.core.Keyword(null,\"render-symbols\",\"render-symbols\",-887705016),value,cljs.core.symbol_QMARK_))){\nreturn devtools.formatters.markup._LT_symbol_GT_(value);\n} else {\nif(cljs.core.truth_(devtools.formatters.helpers.should_render_QMARK_(new cljs.core.Keyword(null,\"render-instances\",\"render-instances\",-1803579686),value,devtools.formatters.helpers.should_render_instance_QMARK_))){\nreturn devtools.formatters.markup._LT_instance_GT_(value);\n} else {\nif(cljs.core.truth_(devtools.formatters.helpers.should_render_QMARK_(new cljs.core.Keyword(null,\"render-types\",\"render-types\",-129927851),value,devtools.formatters.helpers.cljs_type_QMARK_))){\nreturn devtools.formatters.markup._LT_standalone_type_GT_(value);\n} else {\nif(cljs.core.truth_(devtools.formatters.helpers.should_render_QMARK_(new cljs.core.Keyword(null,\"render-functions\",\"render-functions\",1273333002),value,devtools.formatters.helpers.cljs_function_QMARK_))){\nreturn devtools.formatters.markup._LT_function_GT_(value);\n} else {\nreturn null;\n}\n}\n}\n}\n}\n}\n}\n}\n}\n});\ndevtools.formatters.markup.get_markup_db = (function devtools$formatters$markup$get_markup_db(){\nif((devtools.formatters.markup._STAR_markup_db_STAR_ == null)){\n(devtools.formatters.markup._STAR_markup_db_STAR_ = cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"aligned-body\",\"aligned-body\",-2124118747),new cljs.core.Keyword(null,\"native-reference\",\"native-reference\",-2013708658),new cljs.core.Keyword(null,\"reference-surrogate\",\"reference-surrogate\",274031791),new cljs.core.Keyword(null,\"keyword\",\"keyword\",811389747),new cljs.core.Keyword(null,\"protocol-method-arities\",\"protocol-method-arities\",-545542044),new cljs.core.Keyword(null,\"surrogate-header\",\"surrogate-header\",1705524526),new cljs.core.Keyword(null,\"details\",\"details\",1956795411),new cljs.core.Keyword(null,\"more-protocols\",\"more-protocols\",359555207),new cljs.core.Keyword(null,\"field\",\"field\",-1302436500),new cljs.core.Keyword(null,\"symbol\",\"symbol\",-1038572696),new cljs.core.Keyword(null,\"fields-details\",\"fields-details\",-269572714),new cljs.core.Keyword(null,\"atomic\",\"atomic\",-120459460),new cljs.core.Keyword(null,\"string\",\"string\",-1989541586),new cljs.core.Keyword(null,\"standard-body\",\"standard-body\",-1563020798),new cljs.core.Keyword(null,\"type-basis\",\"type-basis\",-1825246054),new cljs.core.Keyword(null,\"bool\",\"bool\",1444635321),new cljs.core.Keyword(null,\"standalone-type\",\"standalone-type\",-802565278),new cljs.core.Keyword(null,\"preview\",\"preview\",451279890),new cljs.core.Keyword(null,\"header\",\"header\",119441134),new cljs.core.Keyword(null,\"protocol-method\",\"protocol-method\",1794903206),new cljs.core.Keyword(null,\"cljs-land\",\"cljs-land\",1255896927),new cljs.core.Keyword(null,\"type-basis-item\",\"type-basis-item\",-1662150132),new cljs.core.Keyword(null,\"protocol-method-arities-details\",\"protocol-method-arities-details\",1944702118),new cljs.core.Keyword(null,\"fields-details-row\",\"fields-details-row\",2066344936),new cljs.core.Keyword(null,\"standard-body-reference\",\"standard-body-reference\",1513301561),new cljs.core.Keyword(null,\"surrogate-body\",\"surrogate-body\",-1618569585),new cljs.core.Keyword(null,\"expandable\",\"expandable\",-704609097),new cljs.core.Keyword(null,\"type\",\"type\",1174270348),new cljs.core.Keyword(null,\"protocol-method-arity\",\"protocol-method-arity\",-1861927833),new cljs.core.Keyword(null,\"raw-surrogate\",\"raw-surrogate\",904931181),new cljs.core.Keyword(null,\"type-details\",\"type-details\",477755178),new cljs.core.Keyword(null,\"list\",\"list\",765357683),new cljs.core.Keyword(null,\"meta-wrapper\",\"meta-wrapper\",-1989845587),new cljs.core.Keyword(null,\"protocol\",\"protocol\",652470118),new cljs.core.Keyword(null,\"index\",\"index\",-1531685915),new cljs.core.Keyword(null,\"surrogate\",\"surrogate\",2122284260),new cljs.core.Keyword(null,\"protocols-list\",\"protocols-list\",371434187),new cljs.core.Keyword(null,\"meta\",\"meta\",1499536964),new cljs.core.Keyword(null,\"instance\",\"instance\",-2121349050),new cljs.core.Keyword(null,\"reference\",\"reference\",-1711695023),new cljs.core.Keyword(null,\"function-details\",\"function-details\",1501147310),new cljs.core.Keyword(null,\"function\",\"function\",-2127255473),new cljs.core.Keyword(null,\"arities\",\"arities\",-1781122917),new cljs.core.Keyword(null,\"header-expander\",\"header-expander\",-1606368578),new cljs.core.Keyword(null,\"list-details\",\"list-details\",46031799),new cljs.core.Keyword(null,\"circular-reference\",\"circular-reference\",970308727),new cljs.core.Keyword(null,\"surrogate-target\",\"surrogate-target\",-1262730220),new cljs.core.Keyword(null,\"fields\",\"fields\",-1932066230),new cljs.core.Keyword(null,\"nil\",\"nil\",99600501),new cljs.core.Keyword(null,\"body\",\"body\",-2049205669),new cljs.core.Keyword(null,\"number\",\"number\",1570378438),new cljs.core.Keyword(null,\"protocol-details\",\"protocol-details\",-121549824)],[devtools.formatters.markup._LT_aligned_body_GT_,devtools.formatters.markup._LT_native_reference_GT_,devtools.formatters.markup._LT_reference_surrogate_GT_,devtools.formatters.markup._LT_keyword_GT_,devtools.formatters.markup._LT_protocol_method_arities_GT_,devtools.formatters.markup._LT_surrogate_header_GT_,devtools.formatters.markup._LT_details_GT_,devtools.formatters.markup._LT_more_protocols_GT_,devtools.formatters.markup._LT_field_GT_,devtools.formatters.markup._LT_symbol_GT_,devtools.formatters.markup._LT_fields_details_GT_,devtools.formatters.markup._LT_atomic_GT_,devtools.formatters.markup._LT_string_GT_,devtools.formatters.markup._LT_standard_body_GT_,devtools.formatters.markup._LT_type_basis_GT_,devtools.formatters.markup._LT_bool_GT_,devtools.formatters.markup._LT_standalone_type_GT_,devtools.formatters.markup._LT_preview_GT_,devtools.formatters.markup._LT_header_GT_,devtools.formatters.markup._LT_protocol_method_GT_,devtools.formatters.markup._LT_cljs_land_GT_,devtools.formatters.markup._LT_type_basis_item_GT_,devtools.formatters.markup._LT_protocol_method_arities_details_GT_,devtools.formatters.markup._LT_fields_details_row_GT_,devtools.formatters.markup._LT_standard_body_reference_GT_,devtools.formatters.markup._LT_surrogate_body_GT_,devtools.formatters.markup._LT_expandable_GT_,devtools.formatters.markup._LT_type_GT_,devtools.formatters.markup._LT_protocol_method_arity_GT_,devtools.formatters.markup._LT_raw_surrogate_GT_,devtools.formatters.markup._LT_type_details_GT_,devtools.formatters.markup._LT_list_GT_,devtools.formatters.markup._LT_meta_wrapper_GT_,devtools.formatters.markup._LT_protocol_GT_,devtools.formatters.markup._LT_index_GT_,devtools.formatters.markup._LT_surrogate_GT_,devtools.formatters.markup._LT_protocols_list_GT_,devtools.formatters.markup._LT_meta_GT_,devtools.formatters.markup._LT_instance_GT_,devtools.formatters.markup._LT_reference_GT_,devtools.formatters.markup._LT_function_details_GT_,devtools.formatters.markup._LT_function_GT_,devtools.formatters.markup._LT_arities_GT_,devtools.formatters.markup._LT_header_expander_GT_,devtools.formatters.markup._LT_list_details_GT_,devtools.formatters.markup._LT_circular_reference_GT_,devtools.formatters.markup._LT_surrogate_target_GT_,devtools.formatters.markup._LT_fields_GT_,devtools.formatters.markup._LT_nil_GT_,devtools.formatters.markup._LT_body_GT_,devtools.formatters.markup._LT_number_GT_,devtools.formatters.markup._LT_protocol_details_GT_]));\n} else {\n}\n\nreturn devtools.formatters.markup._STAR_markup_db_STAR_;\n});\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","devtools/formatters/markup.cljs","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",31],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$clojure.pprint","~$cljs.pprint","~$clojure.spec.alpha","~$cljs.spec.alpha","~$react","~$module$node_modules$react$index","~$react-dom","~$module$node_modules$react_dom$index"],"~:use-macros",["^ ","~$emit-markup-db","~$devtools.formatters.markup"],"~:excludes",["~#set",[]],"~:macros",["^ ","^G",["^ ","~:arglists",["~#list",[[]]],"^7",9,"^8",1,"^6","devtools/formatters/markup.clj","~:name","~$devtools.formatters.markup/emit-markup-db","~:ns","^H","~:macro",true]],"^N","^H","~:reader-aliases",["^ "],"~:op","^P","~:imports",null,"~:requires",["^ ","~$devtools.formatters.helpers","^V","~$devtools.formatters.printing","^W","~$devtools.formatters.state","^X","~$devtools.formatters.templating","^Y","~$devtools.munging","^Z","~$munging","^Z","~$cljs.core","^10","~$goog","^11"],"~:seen",["^J",["~:require","~:require-macros"]],"~:uses",["^ ","~$expandable?","^V","~$should-render?","^V","~$set-managed-print-level","^X","~$bool?","^V","~$cljs-instance?","^V","~$get-surrogate-body","^Y","~$get-constructor","^V","~$managed-print-via-writer","^W","~$pref","^V","~$wrap-arity","^V","~$cljs-function?","^V","~$get-more-marker","^V","~$fetch-fields-values","^V","~$managed-print-via-protocol","^W","~$abbreviated?","^V","~$get-surrogate-header","^Y","~$reset-depth-limits","^X","~$get-surrogate-target","^Y","~$set-prevent-recursion","^X","~$get-surrogate-start-index","^Y","~$abbreviate-long-string","^V","~$cljs-type?","^V","~$should-render-instance?","^V"],"^14",["^ ","^H","^H","^10","^10","^Z","^Z","^[","^Z"],"~:form",["^M",["~$ns","^H",["^M",["^14",["^H","~:refer",["^G"]]]],["^M",["^13",["^V","^1O",["^19","^1@","^1K","^1:","^1L","^16","^1D","^1J","^1<","^1>","^17","^1A","^1?","^1B"]],["^W","^1O",["^1=","^1C"]],["^X","^1O",["^1H","^18","^1F"]],["^Y","^1O",["^1;","^1G","^1I","^1E"]],["^Z","~:as","^["]]]]],"~:flags",["^ ","^14",["^J",[]],"^13",["^J",[]]],"~:js-deps",["^ "],"~:deps",["^11","^10","^V","^W","^X","^Y","^Z"]],"^P","^H","~:resource-id",["~:shadow.build.classpath/resource","devtools/formatters/markup.cljs"],"~:compiled-at",1704111246336,"^R",["^ ","^V","^V","^H","^H","^W","^W","^Y","^Y","^[","^Z","^X","^X","^10","^10","^11","^11","^Z","^Z"],"~:resource-name","devtools/formatters/markup.cljs","~:warnings",[],"~:source","(ns devtools.formatters.markup\n  (:require-macros [devtools.formatters.markup :refer [emit-markup-db]])\n  (:require [devtools.formatters.helpers :refer [bool? cljs-function? cljs-type? cljs-instance?\n                                                 should-render-instance? expandable? abbreviated?\n                                                 abbreviate-long-string get-constructor pref should-render?\n                                                 get-more-marker wrap-arity fetch-fields-values]]\n            [devtools.formatters.printing :refer [managed-print-via-writer managed-print-via-protocol]]\n            [devtools.formatters.state :refer [set-prevent-recursion set-managed-print-level reset-depth-limits]]\n            [devtools.formatters.templating :refer [get-surrogate-body\n                                                    get-surrogate-target\n                                                    get-surrogate-start-index\n                                                    get-surrogate-header]]\n            [devtools.munging :as munging]))\n\n; reusable hiccup-like templates\n\n(declare get-markup-db)\n\n; -- cljs printing  ---------------------------------------------------------------------------------------------------------\n\n(defn print-with [method value tag & [max-level]]\n  (let [job-fn #(method value tag (get-markup-db))]\n    (if (some? max-level)\n      (binding [*print-level* (inc max-level)]                                                                                ; when printing do at most print-level deep recursion\n        (job-fn))\n      (job-fn))))\n\n(defn print-via-writer [value tag & [max-level]]\n  (print-with managed-print-via-writer value tag max-level))\n\n(defn print-via-protocol [value tag & [max-level]]\n  (print-with managed-print-via-protocol value tag max-level))\n\n; -- references -------------------------------------------------------------------------------------------------------------\n\n(defn <expandable> [& children]\n  (let [inner-markup (concat [:expandable-inner-tag] children)]\n    [:expandable-tag :expandable-symbol inner-markup]))\n\n(defn <raw-surrogate> [& args]\n  (concat [\"surrogate\"] args))\n\n(defn <surrogate> [& [object header body start-index]]\n  (let [header (if (some? body) (<expandable> header) header)]\n    (<raw-surrogate> object header body start-index)))\n\n(defn <reference> [& args]\n  (concat [\"reference\"] args))\n\n(defn <reference-surrogate> [& args]\n  (<reference> (apply <surrogate> args)))\n\n(defn <circular-reference> [& children]\n  (<reference-surrogate> nil [:circular-reference-tag :circular-ref-icon] (concat [:circular-reference-body-tag] children)))\n\n(defn <native-reference> [object]\n  (let [reference (<reference> object #(set-prevent-recursion % true))]\n    [:native-reference-wrapper-tag :native-reference-background [:native-reference-tag reference]]))\n\n(defn <header-expander> [object]\n  (<reference> (<raw-surrogate> object :header-expander-symbol :target) reset-depth-limits))\n\n; -- simple markup ----------------------------------------------------------------------------------------------------------\n\n(defn <cljs-land> [& children]\n  (concat [:cljs-land-tag] children))\n\n(defn <nil> []\n  ; this code is duplicated in templating.cljs, see make-reference\n  [:nil-tag :nil-label])\n\n(defn <bool> [bool]\n  [:bool-tag (str bool)])\n\n(defn <keyword> [keyword]\n  [:keyword-tag (str keyword)])\n\n(defn <symbol> [symbol]\n  [:symbol-tag (str symbol)])\n\n(defn <number> [number]\n  (if (js/isFinite number)\n    (if (integer? number)\n      [:integer-tag number]\n      [:float-tag number])\n    (if (js/isNaN number)\n      [:float-nan-tag (pr-str number)]\n      [:float-infinity-tag (pr-str number)])))\n\n; -- string markup ----------------------------------------------------------------------------------------------------------\n\n(defn <string> [string]\n  (let [dq (pref :dq)\n        re-nl (js/RegExp. \"\\n\" \"g\")\n        nl-marker (pref :new-line-string-replacer)\n        inline-string (.replace string re-nl nl-marker)\n        max-inline-string-size (+ (pref :string-prefix-limit) (pref :string-postfix-limit))\n        quote-string (fn [s] (str dq s dq))\n        should-abbreviate? (> (count inline-string) max-inline-string-size)]\n    (if should-abbreviate?\n      (let [abbreviated-string (abbreviate-long-string inline-string\n                                                       (pref :string-abbreviation-marker)\n                                                       (pref :string-prefix-limit)\n                                                       (pref :string-postfix-limit))\n            abbreviated-string-markup [:string-tag (quote-string abbreviated-string)]\n            string-with-nl-markers (.replace string re-nl (str nl-marker \"\\n\"))\n            details-markup [:expanded-string-tag string-with-nl-markers]]\n        (<reference-surrogate> string abbreviated-string-markup details-markup))\n      [:string-tag (quote-string inline-string)])))\n\n; -- generic preview markup -------------------------------------------------------------------------------------------------\n\n(defn <preview> [value]\n  (print-via-writer value :header-tag (pref :max-print-level)))\n\n; -- body-related templates -------------------------------------------------------------------------------------------------\n\n(defn <body> [markup]\n  [:body-tag markup])\n\n(defn <aligned-body> [markups-lists]\n  (let [prepend-li-tag (fn [line]\n                         (if line\n                           (concat [:aligned-li-tag] line)))\n        aligned-lines (keep prepend-li-tag markups-lists)]\n    (<body> (concat [:standard-ol-no-margin-tag] aligned-lines))))\n\n(defn <standard-body> [markups-lists & [no-margin?]]\n  (let [ol-tag (if no-margin? :standard-ol-no-margin-tag :standard-ol-tag)\n        li-tag (if no-margin? :standard-li-no-margin-tag :standard-li-tag)\n        prepend-li-tag (fn [line]\n                         (if line\n                           (concat [li-tag] line)))\n        lines-markups (keep prepend-li-tag markups-lists)]\n    (concat [ol-tag] lines-markups)))\n\n(defn <standard-body-reference> [o]\n  (<standard-body> [[(<reference> o)]]))\n\n; -- generic details markup -------------------------------------------------------------------------------------------------\n\n(defn <index> [value]\n  [:index-tag value :line-index-separator])\n\n(defn- body-line [index value]\n  (let [index-markup (<index> index)\n        value-markup (print-via-writer value :item-tag (pref :body-line-max-print-level))]\n    [index-markup value-markup]))\n\n; TODO: this fn is screaming for rewrite\n(defn- prepare-body-lines [data starting-index]\n  (loop [work data\n         index starting-index\n         lines []]\n    (if (empty? work)\n      lines\n      (recur (rest work) (inc index) (conj lines (body-line index (first work)))))))\n\n(defn- body-lines [value starting-index]\n  (let [seq (seq value)\n        max-number-body-items (pref :max-number-body-items)\n        chunk (take max-number-body-items seq)\n        rest (drop max-number-body-items seq)\n        lines (prepare-body-lines chunk starting-index)\n        continue? (not (empty? (take 1 rest)))]\n    (if-not continue?\n      lines\n      (let [more-label-markup [:body-items-more-tag :body-items-more-label]\n            start-index (+ starting-index max-number-body-items)\n            more-markup (<reference-surrogate> rest more-label-markup :target start-index)]\n        (conj lines [more-markup])))))\n\n(defn <details> [value starting-index]\n  ;; This is very important when the value is a map\n  ;; we need to push the object to history so that we can be able to get the paths (i.e keys)\n  ;; the other option to this is ignoring this and then when generating paths, assume that all\n  ;; vectors that have two children which are\n  ;; a keyword as the first item and\n  ;; a sequence or map as the second item when the path info is not nil.\n  ;; are all just seq'd maps and that the first item in the vector is a key in the map.\n  ;; The seq'd map is a result of `(seq value)` done in `body-lines` above\n  (devtools.formatters.state/push-object-to-current-history! (with-meta value {:index starting-index}))\n  (let [has-continuation? (pos? starting-index)\n        body-markup (<standard-body> (body-lines value starting-index) has-continuation?)]\n    (if has-continuation?\n      body-markup\n      (<body> body-markup))))\n\n; -- generic list template --------------------------------------------------------------------------------------------------\n\n(defn <list-details> [items _opts]\n  (<aligned-body> (map list items)))\n\n(defn <list> [items max-count & [opts]]\n  (let [items-markups (take max-count items)\n        more-count (- (count items) max-count)\n        more? (pos? more-count)\n        separator (or (:separator opts) :list-separator)\n        more-symbol (if more?\n                      (if-let [more-symbol (:more-symbol opts)]\n                        (if (fn? more-symbol)\n                          (more-symbol more-count)\n                          more-symbol)\n                        (get-more-marker more-count)))\n        preview-markup (concat [(or (:tag opts) :list-tag)\n                                (or (:open-symbol opts) :list-open-symbol)]\n                               (interpose separator items-markups)\n                               (if more? [separator more-symbol])\n                               [(or (:close-symbol opts) :list-close-symbol)])]\n    (if more?\n      (let [details-markup (:details opts)\n            default-details-fn (partial <list-details> items opts)]\n        (<reference-surrogate> nil preview-markup (or details-markup default-details-fn)))\n      preview-markup)))\n\n; -- mete-related markup ----------------------------------------------------------------------------------------------------\n\n(defn <meta> [metadata]\n  (let [body-fn (fn [] [:meta-body-tag (<preview> metadata)])\n        header [:meta-header-tag \"meta\"]]\n    [:meta-reference-tag (<reference-surrogate> metadata header body-fn)]))                                                   ; body must be lazy, see #35\n\n(defn <meta-wrapper> [metadata & children]\n  (concat [:meta-wrapper-tag] children [(<meta> metadata)]))\n\n; -- function markup --------------------------------------------------------------------------------------------------------\n\n(defn <function-details> [fn-obj ns _name arities prefix]\n  {:pre [(fn? fn-obj)]}\n  (let [arities (map wrap-arity arities)\n        make-arity-markup-list (fn [arity]\n                                 [[:fn-multi-arity-args-indent-tag prefix]\n                                  [:fn-args-tag arity]])\n        arities-markupts-lists (if (> (count arities) 1) (map make-arity-markup-list arities))\n        ns-markups-list (if-not (empty? ns) [:ns-icon [:fn-ns-name-tag ns]])\n        native-markups-list [:native-icon (<native-reference> fn-obj)]]\n    (<aligned-body> (concat arities-markupts-lists [ns-markups-list native-markups-list]))))\n\n(defn <arities> [arities]\n  (let [multi-arity? (> (count arities) 1)]\n    [:fn-args-tag (wrap-arity (if multi-arity?\n                                (pref :multi-arity-symbol)\n                                (first arities)))]))\n\n(defn <function> [fn-obj]\n  {:pre [(fn? fn-obj)]}\n  (let [[ns name] (munging/parse-fn-info fn-obj)\n        lambda? (empty? name)\n        spacer-symbol (pref :spacer)\n        rest-symbol (pref :rest-symbol)\n        multi-arity-symbol (pref :multi-arity-symbol)\n        arities (munging/extract-arities fn-obj true spacer-symbol multi-arity-symbol rest-symbol)\n        arities-markup (<arities> arities)\n        name-markup (if-not lambda? [:fn-name-tag name])\n        icon-markup (if lambda? :lambda-icon :fn-icon)\n        prefix-markup [:fn-prefix-tag icon-markup name-markup]\n        preview-markup [:fn-header-tag prefix-markup arities-markup]\n        details-fn (partial <function-details> fn-obj ns name arities prefix-markup)]\n    (<reference-surrogate> fn-obj preview-markup details-fn)))\n\n; -- type markup ------------------------------------------------------------------------------------------------------------\n\n(defn <type-basis-item> [basis-item]\n  [:type-basis-item-tag (name basis-item)])\n\n(defn <type-basis> [basis]\n  (let [item-markups (map <type-basis-item> basis)\n        children-markups (interpose :type-basis-item-separator item-markups)]\n    (concat [:type-basis-tag] children-markups)))\n\n(defn <type-details> [constructor-fn ns _name basis]\n  (let [ns-markup (if-not (empty? ns) [:ns-icon [:fn-ns-name-tag ns]])\n        basis-markup (if (empty? basis)\n                       [:empty-basis-symbol]\n                       [:basis-icon (<type-basis> basis)])\n        native-markup [:native-icon (<native-reference> constructor-fn)]]\n    (<aligned-body> [basis-markup ns-markup native-markup])))\n\n(defn <type> [constructor-fn & [header-tag]]\n  (let [[ns name basis] (munging/parse-constructor-info constructor-fn)\n        name-markup [:type-name-tag name]\n        preview-markup [(or header-tag :type-header-tag) :type-symbol name-markup]\n        details-markup-fn (partial <type-details> constructor-fn ns name basis)]\n    [:type-wrapper-tag\n     :type-header-background\n     [:type-ref-tag (<reference-surrogate> constructor-fn preview-markup details-markup-fn)]]))\n\n(defn <standalone-type> [constructor-fn & [header-tag]]\n  [:standalone-type-tag (<type> constructor-fn header-tag)])\n\n; -- protocols markup -------------------------------------------------------------------------------------------------------\n\n(defn <protocol-method-arity> [arity-fn]\n  (<reference> arity-fn))\n\n(defn <protocol-method-arities-details> [fns]\n  (<aligned-body> (map <protocol-method-arity> fns)))\n\n(defn <protocol-method-arities> [fns & [max-fns]]\n  (let [max-fns (or max-fns (pref :max-protocol-method-arities-list))\n        more? (> (count fns) max-fns)\n        aritites-markups (map <protocol-method-arity> (take max-fns fns))\n        preview-markup (concat [:protocol-method-arities-header-tag :protocol-method-arities-header-open-symbol]\n                               (interpose :protocol-method-arities-list-header-separator aritites-markups)\n                               (if more? [:protocol-method-arities-more-symbol])\n                               [:protocol-method-arities-header-close-symbol])]\n    (if more?\n      (let [details-markup-fn (partial <protocol-method-arities-details> fns)]\n        (<reference-surrogate> nil preview-markup details-markup-fn))\n      preview-markup)))\n\n(defn <protocol-method> [name arities]\n  [:protocol-method-tag\n   :method-icon\n   [:protocol-method-name-tag name]\n   (<protocol-method-arities> arities)])\n\n(defn <protocol-details> [obj ns _name selector _fast?]\n  (let [protocol-obj (munging/get-protocol-object selector)\n        ns-markups-list (if-not (empty? ns) [:ns-icon [:protocol-ns-name-tag ns]])\n        native-markups-list (if (some? protocol-obj) [:native-icon (<native-reference> protocol-obj)])\n        methods (munging/collect-protocol-methods obj selector)\n        methods-markups (map (fn [[name arities]] (<protocol-method> name arities)) methods)\n        methods-markups-lists (map list methods-markups)]\n    (<aligned-body> (concat methods-markups-lists [ns-markups-list native-markups-list]))))\n\n(defn <protocol> [obj protocol & [tag]]\n  (let [{:keys [ns name selector fast?]} protocol\n        preview-markup [(or tag :protocol-name-tag) name]\n        prefix-markup [(if fast? :fast-protocol-tag :slow-protocol-tag) :protocol-background]]\n    (if (some? obj)\n      (let [details-markup-fn (partial <protocol-details> obj ns name selector fast?)]\n        (conj prefix-markup (<reference-surrogate> obj preview-markup details-markup-fn)))\n      (conj prefix-markup preview-markup))))\n\n(defn <more-protocols> [more-count]\n  (let [fake-protocol {:name (get-more-marker more-count)}]\n    (<protocol> nil fake-protocol :protocol-more-tag)))\n\n(defn <protocols-list> [obj protocols & [max-protocols]]\n  (let [max-protocols (or max-protocols (pref :max-list-protocols))\n        protocols-markups (map (partial <protocol> obj) protocols)]\n    (<list> protocols-markups max-protocols {:tag          :protocols-header-tag\n                                             :open-symbol  :protocols-list-open-symbol\n                                             :close-symbol :protocols-list-close-symbol\n                                             :separator    :header-protocol-separator\n                                             :more-symbol  <more-protocols>})))\n\n; -- instance fields markup -------------------------------------------------------------------------------------------------\n\n(defn <field> [name value]\n  [:header-field-tag\n   [:header-field-name-tag (str name)]\n   :header-field-value-spacer\n   [:header-field-value-tag (<reference> (<surrogate> value) #(set-managed-print-level % 1))]\n   :header-field-separator])\n\n(defn <fields-details-row> [field]\n  (let [[name value] field]\n    [:body-field-tr-tag\n     [:body-field-td1-tag\n      :body-field-symbol\n      [:body-field-name-tag (str name)]]\n     [:body-field-td2-tag\n      :body-field-value-spacer]\n     [:body-field-td3-tag\n      [:body-field-value-tag (<reference-surrogate> value)]]]))\n\n(defn <fields> [fields & [max-fields]]\n  (if (zero? (count fields))\n    [:fields-header-tag :fields-header-no-fields-symbol]\n    (let [max-fields (or max-fields (pref :max-instance-header-fields))\n          more? (> (count fields) max-fields)\n          fields-markups (map (fn [[name value]] (<field> name value)) (take max-fields fields))]\n      (concat [:fields-header-tag\n               :fields-header-open-symbol]\n              fields-markups\n              [(if more? :more-fields-symbol)\n               :fields-header-close-symbol]))))\n\n(defn <fields-details> [fields obj]\n  (let [protocols (munging/scan-protocols obj)\n        has-protocols? (not (empty? protocols))\n        fields-markup (if-not (zero? (count fields))\n                        [:fields-icon (concat [:instance-body-fields-table-tag] (map <fields-details-row> fields))])\n        protocols-list-markup (if has-protocols? [:protocols-icon (<protocols-list> obj protocols)])\n        native-markup [:native-icon (<native-reference> obj)]]\n    (<aligned-body> [fields-markup protocols-list-markup native-markup])))\n\n; -- type/record instance markup --------------------------------------------------------------------------------------------\n\n(defn <instance> [value]\n  (let [constructor-fn (get-constructor value)\n        [_ns _name basis] (munging/parse-constructor-info constructor-fn)\n        custom-printing? (implements? IPrintWithWriter value)\n        type-markup (<type> constructor-fn :instance-type-header-tag)\n        fields (fetch-fields-values value basis)\n        fields-markup (<fields> fields (if custom-printing? 0))\n        fields-details-markup-fn #(<fields-details> fields value)\n        fields-preview-markup [:instance-value-tag (<reference-surrogate> value fields-markup fields-details-markup-fn)]\n        custom-printing-markup (if custom-printing?\n                                 [:instance-custom-printing-wrapper-tag\n                                  :instance-custom-printing-background\n                                  (print-via-protocol value :instance-custom-printing-tag)])]\n    [:instance-header-tag\n     :instance-header-background\n     fields-preview-markup\n     custom-printing-markup\n     type-markup]))\n\n; ---------------------------------------------------------------------------------------------------------------------------\n\n(defn <header> [value]\n  (<cljs-land> (<preview> value)))\n\n(defn <surrogate-header> [surrogate]\n  (or (get-surrogate-header surrogate)\n      (<preview> (get-surrogate-target surrogate))))\n\n(defn <surrogate-target> [surrogate]\n  (let [target (get-surrogate-target surrogate)]\n    (if (seqable? target)\n      (let [starting-index (get-surrogate-start-index surrogate)]\n        (<details> target starting-index))\n      (<standard-body-reference> target))))\n\n(defn <surrogate-body> [surrogate]\n  (if-let [body (get-surrogate-body surrogate)]\n    (if (= :target body)\n      (<surrogate-target> surrogate)\n      body)))\n\n; ---------------------------------------------------------------------------------------------------------------------------\n\n(defn <atomic> [value]\n  (cond\n    (should-render? :render-nils value nil?) (<nil>)\n    (should-render? :render-bools value bool?) (<bool> value)\n    (should-render? :render-strings value string?) (<string> value)\n    (should-render? :render-numbers value number?) (<number> value)\n    (should-render? :render-keywords value keyword?) (<keyword> value)\n    (should-render? :render-symbols value symbol?) (<symbol> value)\n    (should-render? :render-instances value should-render-instance?) (<instance> value)\n    (should-render? :render-types value cljs-type?) (<standalone-type> value)\n    (should-render? :render-functions value cljs-function?) (<function> value)))\n\n; ---------------------------------------------------------------------------------------------------------------------------\n\n(def ^:dynamic *markup-db*)\n\n; emit-markup-db macro will generate a map of all markup <functions> in this namespace:\n;\n;    {:atomic              <atomic>\n;     :reference           <reference>\n;     :native-reference    <native-reference>\n;     ...}\n;\n; we generate it only on first call and cache it in *markup-db*\n; emitting markup db statically into def would prevent dead-code elimination\n;\n(defn get-markup-db []\n  (if (nil? *markup-db*)\n    (set! *markup-db* (emit-markup-db)))\n  *markup-db*)\n","~:reader-features",["^J",["~:cljs"]],"~:cljc",false,"~:source-map-compact",["^ ","mappings","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","names",["var_args","args__5775__auto__","len__5769__auto__","i__5770__auto__","argseq__5776__auto__","cljs.core/IndexedSeq","devtools.formatters.markup/print-with","p__15233","vec__15234","cljs.core.nth","seq15229","G__15230","cljs.core/first","cljs.core/next","G__15231","G__15232","self__5754__auto__","method","value","tag","max-level","job-fn","G__15237","G__15238","G__15239","devtools.formatters.markup/get-markup-db","*print-level*-orig-val__15240","*print-level*-temp-val__15241","cljs.core/*print-level*","devtools.formatters.markup/print-via-writer","p__15245","vec__15246","seq15242","G__15243","G__15244","devtools.formatters.markup.print_with","devtools.formatters.printing/managed-print-via-writer","devtools.formatters.markup/print-via-protocol","p__15252","vec__15253","seq15249","G__15250","G__15251","devtools.formatters.printing/managed-print-via-protocol","devtools.formatters.markup/<expandable>","seq15256","self__5755__auto__","cljs.core/seq","children","inner-markup","cljs.core.concat","devtools.formatters.markup/<raw-surrogate>","seq15257","args","devtools.formatters.markup/<surrogate>","p__15259","vec__15260","seq15258","object","header","body","start-index","devtools.formatters.markup._LT_expandable_GT_","devtools.formatters.markup._LT_raw_surrogate_GT_","devtools.formatters.markup/<reference>","seq15263","devtools.formatters.markup/<reference-surrogate>","seq15264","devtools.formatters.markup._LT_reference_GT_","cljs.core.apply","devtools.formatters.markup/<circular-reference>","seq15265","devtools.formatters.markup._LT_reference_surrogate_GT_","devtools.formatters.markup/<native-reference>","reference","p1__15266#","devtools.formatters.state/set-prevent-recursion","devtools.formatters.markup/<header-expander>","devtools.formatters.state/reset-depth-limits","devtools.formatters.markup/<cljs-land>","seq15267","devtools.formatters.markup/<nil>","devtools.formatters.markup/<bool>","bool","devtools.formatters.markup/<keyword>","keyword","devtools.formatters.markup/<symbol>","symbol","devtools.formatters.markup/<number>","number","js/isFinite","cljs.core/integer?","js/isNaN","cljs.core.pr_str","devtools.formatters.markup/<string>","string","dq","devtools.formatters.helpers/pref","re-nl","js/RegExp","nl-marker","inline-string","max-inline-string-size","quote-string","s","should-abbreviate?","cljs.core/count","abbreviated-string","devtools.formatters.helpers/abbreviate-long-string","abbreviated-string-markup","string-with-nl-markers","details-markup","devtools.formatters.markup/<preview>","devtools.formatters.markup.print_via_writer","devtools.formatters.markup/<body>","markup","devtools.formatters.markup/<aligned-body>","markups-lists","prepend-li-tag","line","aligned-lines","cljs.core.keep","devtools.formatters.markup/<standard-body>","p__15270","vec__15271","seq15268","G__15269","no-margin?","ol-tag","li-tag","lines-markups","devtools.formatters.markup/<standard-body-reference>","o","devtools.formatters.markup/<index>","devtools.formatters.markup/body-line","index","index-markup","value-markup","devtools.formatters.markup/prepare-body-lines","data","starting-index","work","lines","cljs.core/empty?","cljs.core/rest","cljs.core.conj","devtools.formatters.markup/body-lines","seq","max-number-body-items","chunk","cljs.core.take","rest","cljs.core.drop","continue?","more-label-markup","more-markup","devtools.formatters.markup/<details>","devtools.formatters.state/push-object-to-current-history!","cljs.core/with-meta","has-continuation?","body-markup","devtools.formatters.markup._LT_standard_body_GT_","devtools.formatters.markup/<list-details>","items","_opts","cljs.core.map","cljs.core/list","devtools.formatters.markup/<list>","p__15277","vec__15278","seq15274","G__15275","G__15276","max-count","opts","items-markups","more-count","more?","separator","or__5045__auto__","more-symbol","temp__5802__auto__","cljs.core/fn?","devtools.formatters.helpers/get-more-marker","preview-markup","cljs.core.interpose","default-details-fn","cljs.core.partial","devtools.formatters.markup/<meta>","metadata","body-fn","devtools.formatters.markup/<meta-wrapper>","seq15281","G__15282","js/Error","devtools.formatters.markup/<function-details>","fn-obj","ns","_name","arities","prefix","devtools.formatters.helpers/wrap-arity","make-arity-markup-list","arity","arities-markupts-lists","ns-markups-list","native-markups-list","devtools.formatters.markup/<arities>","multi-arity?","devtools.formatters.markup/<function>","vec__15283","name","devtools.munging/parse-fn-info","lambda?","spacer-symbol","rest-symbol","multi-arity-symbol","devtools.munging/extract-arities","arities-markup","name-markup","icon-markup","prefix-markup","details-fn","devtools.formatters.markup/<type-basis-item>","basis-item","cljs.core/name","devtools.formatters.markup/<type-basis>","basis","item-markups","children-markups","devtools.formatters.markup/<type-details>","constructor-fn","ns-markup","basis-markup","native-markup","devtools.formatters.markup/<type>","p__15288","vec__15289","seq15286","G__15287","header-tag","vec__15292","devtools.munging/parse-constructor-info","details-markup-fn","devtools.formatters.markup/<standalone-type>","p__15297","vec__15298","seq15295","G__15296","devtools.formatters.markup._LT_type_GT_","devtools.formatters.markup/<protocol-method-arity>","arity-fn","devtools.formatters.markup/<protocol-method-arities-details>","fns","devtools.formatters.markup/<protocol-method-arities>","p__15303","vec__15304","seq15301","G__15302","max-fns","aritites-markups","devtools.formatters.markup/<protocol-method>","devtools.formatters.markup/<protocol-details>","obj","selector","_fast?","protocol-obj","devtools.munging/get-protocol-object","methods","devtools.munging/collect-protocol-methods","methods-markups","p__15307","vec__15308","methods-markups-lists","devtools.formatters.markup/<protocol>","p__15314","vec__15315","seq15311","G__15312","G__15313","protocol","map__15318","cljs.core/--destructure-map","cljs.core.get","fast?","devtools.formatters.markup/<more-protocols>","fake-protocol","devtools.formatters.markup._LT_protocol_GT_","devtools.formatters.markup/<protocols-list>","p__15322","vec__15323","seq15319","G__15320","G__15321","protocols","max-protocols","protocols-markups","devtools.formatters.markup._LT_list_GT_","devtools.formatters.markup/<field>","p1__15326#","devtools.formatters.markup._LT_surrogate_GT_","devtools.formatters.state/set-managed-print-level","devtools.formatters.markup/<fields-details-row>","field","vec__15327","devtools.formatters.markup/<fields>","p__15332","vec__15333","seq15330","G__15331","fields","max-fields","fields-markups","p__15336","vec__15337","devtools.formatters.markup/<fields-details>","devtools.munging/scan-protocols","has-protocols?","fields-markup","protocols-list-markup","devtools.formatters.markup/<instance>","vec__15340","devtools.formatters.helpers/get-constructor","_ns","custom-printing?","cljs.core/PROTOCOL_SENTINEL","type-markup","devtools.formatters.helpers/fetch-fields-values","devtools.formatters.markup._LT_fields_GT_","fields-details-markup-fn","fields-preview-markup","custom-printing-markup","devtools.formatters.markup/<header>","devtools.formatters.markup._LT_cljs_land_GT_","devtools.formatters.markup/<surrogate-header>","surrogate","devtools.formatters.templating/get-surrogate-header","devtools.formatters.templating/get-surrogate-target","devtools.formatters.markup/<surrogate-target>","target","cljs.core/seqable?","devtools.formatters.templating/get-surrogate-start-index","devtools.formatters.markup/<surrogate-body>","devtools.formatters.templating/get-surrogate-body","cljs.core._EQ_","devtools.formatters.markup/<atomic>","devtools.formatters.helpers/should-render?","cljs.core/nil?","devtools.formatters.helpers/bool?","cljs.core/string?","cljs.core/number?","cljs.core/keyword?","cljs.core/symbol?","devtools.formatters.helpers/should-render-instance?","devtools.formatters.helpers/cljs-type?","devtools.formatters.helpers/cljs-function?","devtools.formatters.markup/*markup-db*","cljs.core/PersistentHashMap"]],"~:used-vars",["^J",["~$cljs.core/--destructure-map","~$cljs.core/keep","~$devtools.formatters.markup/<type-basis-item>","~$devtools.formatters.markup/<cljs-land>","~$devtools.formatters.printing/managed-print-via-protocol","~$cljs.core/PROTOCOL_SENTINEL","~$cljs.core/rest","~$cljs.core/PersistentHashMap","~$devtools.formatters.markup/<standalone-type>","~$cljs.core/*print-level*","~$js/RegExp","~$cljs.core/keyword?","~$devtools.formatters.markup/<string>","~$devtools.formatters.markup/body-lines","~$devtools.formatters.markup/<atomic>","~$devtools.formatters.markup/body-line","~$devtools.formatters.markup/<fields-details>","~$devtools.formatters.markup/<surrogate-body>","~$devtools.formatters.markup/<header-expander>","~$cljs.core/=","~$devtools.formatters.printing/managed-print-via-writer","~$devtools.formatters.markup/<type-basis>","~$devtools.formatters.markup/<fields-details-row>","~$devtools.formatters.markup/<standard-body>","~$cljs.core/partial","~$devtools.formatters.markup/<arities>","~$devtools.formatters.helpers/abbreviate-long-string","~$devtools.formatters.helpers/should-render-instance?","~$cljs.core/IndexedSeq","~$devtools.munging/get-protocol-object","~$devtools.formatters.helpers/cljs-type?","~$cljs.core/count","~$cljs.core/seq","~$cljs.core/apply","~$devtools.formatters.markup/<preview>","~$cljs.core/take","~$devtools.formatters.templating/get-surrogate-start-index","~$devtools.formatters.helpers/cljs-function?","~$devtools.formatters.markup/<surrogate>","~$cljs.core/string?","~$js/isFinite","~$devtools.formatters.markup/get-markup-db","~$cljs.core/concat","~$cljs.core/pr-str","~$devtools.formatters.markup/<symbol>","~$devtools.formatters.markup/<protocol-method-arities-details>","~$devtools.formatters.markup/<standard-body-reference>","~$devtools.formatters.markup/<type-details>","~$devtools.formatters.markup/<protocol-method-arity>","~$devtools.formatters.markup/<type>","~$devtools.formatters.markup/<surrogate-header>","~$cljs.core/empty?","~$devtools.munging/parse-constructor-info","~$devtools.formatters.state/reset-depth-limits","~$cljs.core/conj","~$devtools.munging/parse-fn-info","~$devtools.formatters.markup/<more-protocols>","~$cljs.core/with-meta","~$devtools.formatters.markup/*markup-db*","~$devtools.formatters.markup/<protocols-list>","~$cljs.core/map","~$devtools.formatters.markup/<index>","~$cljs.core/fn?","~$devtools.formatters.markup/<protocol>","~$devtools.formatters.templating/get-surrogate-target","~$devtools.formatters.markup/<instance>","~$devtools.formatters.helpers/bool?","~$devtools.formatters.state/set-prevent-recursion","~$devtools.formatters.markup/<meta>","~$cljs.core/number?","~$devtools.munging/extract-arities","~$devtools.formatters.helpers/get-constructor","~$cljs.core/get","~$cljs.core/integer?","~$devtools.formatters.state/push-object-to-current-history!","~$devtools.formatters.markup/<reference>","~$devtools.formatters.helpers/pref","~$devtools.formatters.markup/<function-details>","~$js/isNaN","~$devtools.formatters.markup/<bool>","~$devtools.formatters.markup/print-with","~$devtools.formatters.helpers/wrap-arity","~$devtools.formatters.markup/print-via-protocol","~$cljs.core/nil?","~$devtools.formatters.markup/<function>","~$cljs.core/nth","~$devtools.munging/scan-protocols","~$devtools.formatters.markup/<nil>","~$devtools.formatters.markup/<circular-reference>","~$devtools.formatters.markup/<header>","~$devtools.formatters.markup/<protocol-method>","~$devtools.formatters.markup/<expandable>","~$cljs.core/next","~$devtools.formatters.markup/<body>","~$devtools.formatters.markup/<fields>","~$cljs.core/not","~$devtools.formatters.helpers/get-more-marker","~$devtools.formatters.markup/<surrogate-target>","~$cljs.core/interpose","~$devtools.formatters.templating/get-surrogate-header","~$devtools.formatters.markup/prepare-body-lines","~$cljs.core/seqable?","~$cljs.core/symbol?","~$devtools.formatters.helpers/fetch-fields-values","~$devtools.formatters.markup/<protocol-details>","~$devtools.formatters.markup/<native-reference>","~$devtools.formatters.state/set-managed-print-level","~$devtools.formatters.markup/<number>","~$devtools.formatters.markup/<reference-surrogate>","~$devtools.formatters.markup/<keyword>","~$devtools.formatters.markup/<list>","~$devtools.formatters.markup/<meta-wrapper>","~$cljs.core/first","~$devtools.formatters.markup/<protocol-method-arities>","~$devtools.formatters.markup/<raw-surrogate>","~$devtools.formatters.markup/<list-details>","~$devtools.formatters.templating/get-surrogate-body","~$cljs.core/list","~$devtools.formatters.markup/print-via-writer","~$devtools.formatters.markup/<aligned-body>","~$cljs.core/name","~$devtools.munging/collect-protocol-methods","~$js/Error","~$devtools.formatters.helpers/should-render?","~$cljs.core/drop","~$devtools.formatters.markup/<details>","~$devtools.formatters.markup/<field>"]]],"~:cache-keys",["~#cmap",[["^1U","goog/dom/tagname.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^J",[]],"~:deps-syms",["^11","~$goog.dom.HtmlElement"]]],["^1U","devtools/formatters/printing.cljs"],["66c848ad784f330b7f254fed393f670fa430a7ac","^52",["^ ","^53",null,"^54",["^J",[]],"^55",["^11","^10","~$devtools.prefs","~$devtools.format","~$devtools.protocols","^X","^V"]]],["^1U","goog/labs/useragent/platform.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^52",["^ ","^53",null,"^54",["^J",[]],"^55",["^11","~$goog.string.internal","~$goog.labs.userAgent.util","~$goog.labs.userAgent.highEntropy.highEntropyValue","~$goog.labs.userAgent.highEntropy.highEntropyData","~$goog.labs.userAgent"]]],["^1U","devtools/formatters/markup.cljs"],["66c848ad784f330b7f254fed393f670fa430a7ac","^52",["^ ","^53",null,"^54",["^J",[]],"^55",["^11","^10","^V","^W","^X","^Y","^Z"]]],["^1U","devtools/formatters/helpers.cljs"],["66c848ad784f330b7f254fed393f670fa430a7ac","^52",["^ ","^53",null,"^54",["^J",[]],"^55",["^11","^10","^57","^Z","^58","^59"]]],["^1U","goog/html/trustedtypes.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^52",["^ ","^53",null,"^54",["^J",[]],"^55",["^11"]]],["^1U","goog/labs/useragent/browser.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^52",["^ ","^53",null,"^54",["^J",[]],"^55",["^11","^5;","^5<","~$goog.asserts","^5:","^5=","^5>"]]],["^1U","goog/html/safeurl.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^52",["^ ","^53",null,"^54",["^J",[]],"^55",["^11","^5?","~$goog.fs.url","~$goog.html.TrustedResourceUrl","~$goog.string.Const","~$goog.string.TypedString","^5:"]]],["^1U","goog/array/array.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^52",["^ ","^53",null,"^54",["^J",[]],"^55",["^11","^5?"]]],["^1U","goog/useragent/useragent.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^52",["^ ","^53",null,"^54",["^J",[]],"^55",["^11","~$goog.labs.userAgent.browser","~$goog.labs.userAgent.engine","~$goog.labs.userAgent.platform","^5;","~$goog.reflect","^5:"]]],["^1U","devtools/formatters/templating.cljs"],["66c848ad784f330b7f254fed393f670fa430a7ac","^52",["^ ","^53",null,"^54",["^J",[]],"^55",["^11","^10","~$clojure.walk","~$devtools.util","^59","^V","^X","~$clojure.string"]]],["^1U","goog/debug/error.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^52",["^ ","^53",null,"^54",["^J",[]],"^55",["^11"]]],["^1U","goog/flags/flags.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^52",["^ ","^53",null,"^54",["^J",[]],"^55",["^11"]]],["^1U","goog/dom/nodetype.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^52",["^ ","^53",null,"^54",["^J",[]],"^55",["^11"]]],["^1U","goog/labs/useragent/highentropy/highentropyvalue.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^52",["^ ","^53",null,"^54",["^J",[]],"^55",["^11","^5;","^5:"]]],["^1U","cljs/pprint.cljs"],["bc14df6666853ed869d7b88aaa864111c65d0c7f","^52",["^ ","^53",null,"^54",["^J",[]],"^55",["^11","^10","^5J","~$goog.string","~$goog.string.StringBuffer"]]],["^1U","goog/string/typedstring.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^52",["^ ","^53",null,"^54",["^J",[]],"^55",["^11"]]],["^1U","goog/object/object.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^52",["^ ","^53",null,"^54",["^J",[]],"^55",["^11"]]],["^1U","goog/dom/asserts.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^52",["^ ","^53",null,"^54",["^J",[]],"^55",["^11","^5?"]]],"~:SHADOW-TIMESTAMP",[1704111184000,1704111184000,1699451468000],["^1U","goog/math/long.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^52",["^ ","^53",null,"^54",["^J",[]],"^55",["^11","^5?","^5G"]]],["^1U","goog/html/trustedresourceurl.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^52",["^ ","^53",null,"^54",["^J",[]],"^55",["^11","^5?","~$goog.fs.blob","^5@","~$goog.html.SafeScript","~$goog.html.trustedtypes","^5B","^5C"]]],["^1U","devtools/version.cljs"],["66c848ad784f330b7f254fed393f670fa430a7ac","^52",["^ ","^53",null,"^54",["^J",[]],"^55",["^11","^10"]]],["^1U","goog/string/internal.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^52",["^ ","^53",null,"^54",["^J",[]],"^55",["^11"]]],["^1U","goog/functions/functions.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^52",["^ ","^53",null,"^54",["^J",[]],"^55",["^11"]]],["^1U","goog/html/safestyle.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^52",["^ ","^53",null,"^54",["^J",[]],"^55",["^11","^5B","~$goog.html.SafeUrl","^5C","^5?","^5:"]]],["^1U","goog/dom/safe.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^52",["^ ","^53",null,"^54",["^J",[]],"^55",["^11","^5?","~$goog.asserts.dom","~$goog.dom.asserts","~$goog.functions","~$goog.html.SafeHtml","^5O","~$goog.html.SafeStyle","^5Q","^5A","~$goog.html.uncheckedconversions","^5B","^5:"]]],["^1U","devtools/prefs.cljs"],["66c848ad784f330b7f254fed393f670fa430a7ac","^52",["^ ","^53",null,"^54",["^J",[]],"^55",["^11","^10","~$devtools.defaults"]]],["^1U","goog/asserts/dom.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^52",["^ ","^53",null,"^54",["^J",[]],"^55",["^11","~$goog.dom.TagName","^5?","~$goog.dom.element"]]],["^1U","clojure/walk.cljs"],["bc14df6666853ed869d7b88aaa864111c65d0c7f","^52",["^ ","^53",null,"^54",["^J",[]],"^55",["^11","^10"]]],["^1U","goog/html/safehtml.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^52",["^ ","^53",null,"^54",["^J",[]],"^55",["^11","^5B","^5O","^5V","~$goog.html.SafeStyleSheet","^5Q","^5Y","^5A","^5C","^5?","^5D","~$goog.array","~$goog.object","^5:","~$goog.dom.tags","^5P"]]],["^1U","goog/dom/tags.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^52",["^ ","^53",null,"^54",["^J",[]],"^55",["^11","^61"]]],["^1U","devtools/munging.cljs"],["66c848ad784f330b7f254fed393f670fa430a7ac","^52",["^ ","^53",null,"^54",["^J",[]],"^55",["^11","^10","^5J","~$devtools.context","^61","^5L"]]],["^1U","goog/labs/useragent/engine.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^52",["^ ","^53",null,"^54",["^J",[]],"^55",["^11","^60","^5:","^5;"]]],["^1U","goog/fs/blob.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^52",["^ ","^53",null,"^54",["^J",[]],"^55",["^11"]]],["^1U","goog/asserts/asserts.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^52",["^ ","^53",null,"^54",["^J",[]],"^55",["^11","~$goog.debug.Error","~$goog.dom.NodeType"]]],["^1U","goog/uri/uri.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^52",["^ ","^53",null,"^54",["^J",[]],"^55",["^11","^60","^5?","~$goog.collections.maps","^5K","~$goog.structs","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^1U","goog/labs/useragent/highentropy/highentropydata.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^52",["^ ","^53",null,"^54",["^J",[]],"^55",["^11","^5<"]]],["^1U","goog/collections/maps.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^52",["^ ","^53",null,"^54",["^J",[]],"^55",["^11"]]],["^1U","goog/fs/url.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^52",["^ ","^53",null,"^54",["^J",[]],"^55",["^11"]]],["^1U","goog/base.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^52",["^ ","^53",null,"^54",["^J",[]],"^55",[]]],["^1U","goog/structs/structs.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^52",["^ ","^53",null,"^54",["^J",[]],"^55",["^11","^60","^61"]]],["^1U","clojure/string.cljs"],["bc14df6666853ed869d7b88aaa864111c65d0c7f","^52",["^ ","^53",null,"^54",["^J",[]],"^55",["^11","^10","^5K","^5L"]]],["^1U","devtools/formatters/state.cljs"],["66c848ad784f330b7f254fed393f670fa430a7ac","^52",["^ ","^53",null,"^54",["^J",[]],"^55",["^11","^10"]]],["^1U","goog/string/string.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^52",["^ ","^53",null,"^54",["^J",[]],"^55",["^11","~$goog.dom.safe","^5W","^5B","^5:"]]],["^1U","clojure/data.cljs"],["bc14df6666853ed869d7b88aaa864111c65d0c7f","^52",["^ ","^53",null,"^54",["^J",[]],"^55",["^11","^10","~$clojure.set"]]],["^1U","goog/reflect/reflect.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^52",["^ ","^53",null,"^54",["^J",[]],"^55",["^11"]]],["^1U","goog/labs/useragent/util.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^52",["^ ","^53",null,"^54",["^J",[]],"^55",["^11","^5:","^5>"]]],["^1U","goog/string/stringbuffer.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^52",["^ ","^53",null,"^54",["^J",[]],"^55",["^11"]]],["^1U","goog/labs/useragent/useragent.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^52",["^ ","^53",null,"^54",["^J",[]],"^55",["^11","~$goog.flags"]]],["^1U","goog/dom/element.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^52",["^ ","^53",null,"^54",["^J",[]],"^55",["^11","^65","^5Y"]]],["^1U","goog/html/uncheckedconversions.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^52",["^ ","^53",null,"^54",["^J",[]],"^55",["^11","^5?","^5U","^5O","^5V","^5[","^5Q","^5A","^5B","^5:"]]],["^1U","devtools/defaults.cljs"],["66c848ad784f330b7f254fed393f670fa430a7ac","^52",["^ ","^53",null,"^54",["^J",[]],"^55",["^11","^10"]]],["^1U","goog/dom/htmlelement.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^52",["^ ","^53",null,"^54",["^J",[]],"^55",["^11"]]],["^1U","cljs/core.cljs"],["bc14df6666853ed869d7b88aaa864111c65d0c7f","^52",["^ ","^53",null,"^54",["^J",[]],"^55",["^11","~$goog.math.Long","~$goog.math.Integer","^5K","^61","^60","~$goog.Uri","^5L"]]],["^1U","goog/html/safescript.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^52",["^ ","^53",null,"^54",["^J",[]],"^55",["^11","^5B","^5C","^5P","^5?"]]],["^1U","devtools/context.cljs"],["66c848ad784f330b7f254fed393f670fa430a7ac","^52",["^ ","^53",null,"^54",["^J",[]],"^55",["^11","^10"]]],["^1U","goog/html/safestylesheet.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^52",["^ ","^53",null,"^54",["^J",[]],"^55",["^11","^5B","^5V","^5C","^61","^5?","^5:"]]],["^1U","goog/math/integer.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^52",["^ ","^53",null,"^54",["^J",[]],"^55",["^11","^5G"]]],["^1U","devtools/format.cljs"],["66c848ad784f330b7f254fed393f670fa430a7ac","^52",["^ ","^53",null,"^54",["^J",[]],"^55",["^11","^10","^63"]]],["^1U","clojure/set.cljs"],["bc14df6666853ed869d7b88aaa864111c65d0c7f","^52",["^ ","^53",null,"^54",["^J",[]],"^55",["^11","^10"]]],["^1U","goog/uri/utils.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^52",["^ ","^53",null,"^54",["^J",[]],"^55",["^11","^5?","^5K"]]],["^1U","goog/string/const.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^52",["^ ","^53",null,"^54",["^J",[]],"^55",["^11","^5?","^5C"]]],["^1U","devtools/protocols.cljs"],["66c848ad784f330b7f254fed393f670fa430a7ac","^52",["^ ","^53",null,"^54",["^J",[]],"^55",["^11","^10"]]],["^1U","devtools/util.cljs"],["66c848ad784f330b7f254fed393f670fa430a7ac","^52",["^ ","^53",null,"^54",["^J",[]],"^55",["^11","^10","~$goog.userAgent","~$clojure.data","~$devtools.version","^63","^?","^57"]]]]],"~:clj-info",["^ ","jar:file:/home/onake/.m2/repository/binaryage/devtools/1.0.6/devtools-1.0.6.jar!/devtools/formatters/markup.clj",1699451512000,"jar:file:/home/onake/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/analyzer/passes/and_or.cljc",1699451468000,"jar:file:/home/onake/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/analyzer.cljc",1699451468000,"jar:file:/home/onake/.m2/repository/binaryage/devtools/1.0.6/devtools-1.0.6.jar!/devtools/oops.clj",1699451512000,"jar:file:/home/onake/.m2/repository/binaryage/devtools/1.0.6/devtools-1.0.6.jar!/devtools/prefs.clj",1699451512000,"jar:file:/home/onake/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/js_deps.cljc",1699451468000,"jar:file:/home/onake/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/core.cljc",1699451468000,"jar:file:/home/onake/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/analyzer/impl.cljc",1699451468000,"jar:file:/home/onake/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/source_map.clj",1699451468000,"jar:file:/home/onake/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/vendor/clojure/tools/reader/default_data_readers.clj",1699451468000,"jar:file:/home/onake/.m2/repository/binaryage/devtools/1.0.6/devtools-1.0.6.jar!/devtools/munging.clj",1699451512000,"jar:file:/home/onake/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/vendor/clojure/tools/reader.clj",1699451468000,"jar:file:/home/onake/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/tagged_literals.cljc",1699451468000,"jar:file:/home/onake/.m2/repository/binaryage/devtools/1.0.6/devtools-1.0.6.jar!/devtools/defaults.clj",1699451512000,"jar:file:/home/onake/.m2/repository/binaryage/devtools/1.0.6/devtools-1.0.6.jar!/devtools/compiler.clj",1699451512000,"jar:file:/home/onake/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/java/io.clj",1699446688000,"jar:file:/home/onake/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/vendor/clojure/data/json.clj",1699451468000,"jar:file:/home/onake/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/walk.clj",1699446688000,"jar:file:/home/onake/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/edn.clj",1699446688000,"jar:file:/home/onake/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/source_map/base64_vlq.clj",1699451468000,"jar:file:/home/onake/.m2/repository/binaryage/devtools/1.0.6/devtools-1.0.6.jar!/devtools/version.clj",1699451512000,"jar:file:/home/onake/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/env.cljc",1699451468000,"jar:file:/home/onake/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/compiler.cljc",1699451468000,"jar:file:/home/onake/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/analyzer/passes.cljc",1699451468000,"jar:file:/home/onake/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/vendor/clojure/tools/reader/reader_types.clj",1699451468000,"jar:file:/home/onake/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/string.clj",1699446688000,"jar:file:/home/onake/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/externs.clj",1699451468000,"jar:file:/home/onake/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/instant.clj",1699451468000,"jar:file:/home/onake/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/instant.clj",1699446688000,"jar:file:/home/onake/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/vendor/clojure/tools/reader/impl/inspect.clj",1699451468000,"jar:file:/home/onake/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/vendor/clojure/tools/reader/impl/errors.clj",1699451468000,"jar:file:/home/onake/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/analyzer/impl/namespaces.cljc",1699451468000,"jar:file:/home/onake/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/util.cljc",1699451468000,"jar:file:/home/onake/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/pprint.cljc",1699451468000,"jar:file:/home/onake/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/set.clj",1699446688000,"jar:file:/home/onake/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/source_map/base64.clj",1699451468000,"jar:file:/home/onake/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/core.clj",1699446688000,"jar:file:/home/onake/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/pprint.clj",1699446688000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",1,"^8",5,"^9",1,"^:",31],"^;",["^ ","^<","^=","^>","^?","^@","^A","^B","^C","^D","^E"],"^F",["^ ","^G","^H"],"^I",["^J",[]],"^K",["^ ","^G",["^ ","^L",["^M",[[]]],"^7",9,"^8",1,"^6","devtools/formatters/markup.clj","^N","^O","^P","^H","^Q",true]],"^N","^H","^R",["^ "],"^T",null,"^U",["^ ","^V","^V","^W","^W","^X","^X","^Y","^Y","^Z","^Z","^[","^Z","^10","^10","^11","^11"],"^12",["^J",["^13","^14"]],"~:shadow/js-access-global",["^J",["isNaN","RegExp","isFinite","Error"]],"^15",["^ ","^16","^V","^17","^V","^18","^X","^19","^V","^1:","^V","^1;","^Y","^1<","^V","^1=","^W","^1>","^V","^1?","^V","^1@","^V","^1A","^V","^1B","^V","^1C","^W","^1D","^V","^1E","^Y","^1F","^X","^1G","^Y","^1H","^X","^1I","^Y","^1J","^V","^1K","^V","^1L","^V"],"~:defs",["^ ","~$<aligned-body>",["^ ","~:protocol-inline",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",121,"^8",7,"^9",121,"^:",21,"^L",["^M",["~$quote",["^M",[["~$markups-lists"]]]]]],"^N","^4T","^6","devtools/formatters/markup.cljs","^:",21,"~:method-params",["^M",[["^7E"]]],"~:protocol-impl",null,"~:arglists-meta",["^M",[null,null]],"^8",1,"~:root-source-info",["^ ","~:source-type","~:fragment","~:source-form",["^M",["~$defn","^7B",["^7E"],["^M",["~$let",["~$prepend-li-tag",["^M",["~$fn",["~$line"],["^M",["~$if","^7Q",["^M",["~$concat",["~:aligned-li-tag"],"^7Q"]]]]]],"~$aligned-lines",["^M",["~$keep","^7O","^7E"]]],["^M",["~$<body>",["^M",["^7S",["~:standard-ol-no-margin-tag"],"^7U"]]]]]]]]],"~:variadic?",false,"^7",121,"~:ret-tag","~$cljs.core/IVector","^9",121,"~:max-fixed-arity",1,"~:fn-var",true,"^L",["^M",["^7D",["^M",[["^7E"]]]]]],"~$<native-reference>",["^ ","^7C",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",56,"^8",7,"^9",56,"^:",25,"^L",["^M",["^7D",["^M",[["~$object"]]]]]],"^N","^4F","^6","devtools/formatters/markup.cljs","^:",25,"^7F",["^M",[["^83"]]],"^7G",null,"^7H",["^M",[null,null]],"^8",1,"^7I",["^ ","^7J","^7K","^7L",["^M",["^7M","^82",["^83"],["^M",["^7N",["~$reference",["^M",["~$<reference>","^83",["^M",["~$fn*",["~$p1__15266#"],["^M",["^1H","^87",true]]]]]]],["~:native-reference-wrapper-tag","~:native-reference-background",["~:native-reference-tag","^84"]]]]]]],"^7Y",false,"^7",56,"^7Z","^7[","^9",56,"^80",1,"^81",true,"^L",["^M",["^7D",["^M",[["^83"]]]]]],"~$<reference-surrogate>",["^ ","^7C",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",50,"^8",7,"^9",50,"^:",28,"^L",["^M",["^7D",["^M",[["~$&","~$args"]]]]],"~:top-fn",["^ ","^7Y",true,"~:fixed-arity",0,"^80",0,"^7F",[["^M",["^8<"]]],"^L",["^M",[["~$&","^8<"]]],"^7H",["^M",[null]]]],"^N","^4I","^6","devtools/formatters/markup.cljs","^:",28,"^8=",["^ ","^7Y",true,"^8>",0,"^80",0,"^7F",[["^M",["^8<"]]],"^L",["^M",[["~$&","^8<"]]],"^7H",["^M",[null]]],"^7F",[["^M",["^8<"]]],"^7G",null,"^8>",0,"^7H",["^M",[null]],"^8",1,"^7I",["^ ","^7J","^7K","^7L",["^M",["^7M","^8;",["~$&","^8<"],["^M",["^85",["^M",["~$apply","~$<surrogate>","^8<"]]]]]]],"^7Y",true,"~:methods",[["^ ","^8>",0,"^7Y",true,"~:tag","~$cljs.core/LazySeq"]],"^7",50,"^7Z","~$any","^9",50,"^80",0,"^81",true,"^L",["^M",[["~$&","^8<"]]]],"~$<keyword>",["^ ","^7C",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",75,"^8",7,"^9",75,"^:",16,"^L",["^M",["^7D",["^M",[["~$keyword"]]]]]],"^N","^4J","^6","devtools/formatters/markup.cljs","^:",16,"^7F",["^M",[["^8F"]]],"^7G",null,"^7H",["^M",[null,null]],"^8",1,"^7I",["^ ","^7J","^7K","^7L",["^M",["^7M","^8E",["^8F"],["~:keyword-tag",["^M",["~$str","^8F"]]]]]],"^7Y",false,"^7",75,"^7Z","^7[","^9",75,"^80",1,"^81",true,"^L",["^M",["^7D",["^M",[["^8F"]]]]]],"~$print-via-writer",["^ ","^7C",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",28,"^8",7,"^9",28,"^:",23,"^L",["^M",["^7D",["^M",[["~$value","~$tag","~$&",["~$max-level"]]]]]],"^8=",["^ ","^7Y",true,"^8>",2,"^80",2,"^7F",[["^M",["^8J","^8K",["^8L"]]]],"^L",["^M",[["^8J","^8K","~$&",["^8L"]]]],"^7H",["^M",[null]]]],"^N","^4S","^6","devtools/formatters/markup.cljs","^:",23,"^8=",["^ ","^7Y",true,"^8>",2,"^80",2,"^7F",[["^M",["^8J","^8K",["^8L"]]]],"^L",["^M",[["^8J","^8K","~$&",["^8L"]]]],"^7H",["^M",[null]]],"^7F",[["^M",["^8J","^8K",["^8L"]]]],"^7G",null,"^8>",2,"^7H",["^M",[null]],"^8",1,"^7I",["^ ","^7J","^7K","^7L",["^M",["^7M","^8I",["^8J","^8K","~$&",["^8L"]],["^M",["~$print-with","^1=","^8J","^8K","^8L"]]]]],"^7Y",true,"^8A",[["^ ","^8>",2,"^7Y",true,"^8B",["^J",[null,"^8D"]]]],"^7",28,"^7Z","^8D","^9",28,"^80",2,"^81",true,"^L",["^M",[["^8J","^8K","~$&",["^8L"]]]]],"~$<protocol-method-arities>",["^ ","^7C",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",299,"^8",7,"^9",299,"^:",32,"^L",["^M",["^7D",["^M",[["~$fns","~$&",["~$max-fns"]]]]]],"^8=",["^ ","^7Y",true,"^8>",1,"^80",1,"^7F",[["^M",["^8O",["^8P"]]]],"^L",["^M",[["^8O","~$&",["^8P"]]]],"^7H",["^M",[null]]]],"^N","^4N","^6","devtools/formatters/markup.cljs","^:",32,"^8=",["^ ","^7Y",true,"^8>",1,"^80",1,"^7F",[["^M",["^8O",["^8P"]]]],"^L",["^M",[["^8O","~$&",["^8P"]]]],"^7H",["^M",[null]]],"^7F",[["^M",["^8O",["^8P"]]]],"^7G",null,"^8>",1,"^7H",["^M",[null]],"^8",1,"^7I",["^ ","^7J","^7K","^7L",["^M",["^7M","^8N",["^8O","~$&",["^8P"]],["^M",["^7N",["^8P",["^M",["~$or","^8P",["^M",["^1>","~:max-protocol-method-arities-list"]]]],"~$more?",["^M",["~$>",["^M",["~$count","^8O"]],"^8P"]],"~$aritites-markups",["^M",["~$map","~$<protocol-method-arity>",["^M",["~$take","^8P","^8O"]]]],"~$preview-markup",["^M",["^7S",["~:protocol-method-arities-header-tag","~:protocol-method-arities-header-open-symbol"],["^M",["~$interpose","~:protocol-method-arities-list-header-separator","^8U"]],["^M",["^7R","^8S",["~:protocol-method-arities-more-symbol"]]],["~:protocol-method-arities-header-close-symbol"]]]],["^M",["^7R","^8S",["^M",["^7N",["~$details-markup-fn",["^M",["~$partial","~$<protocol-method-arities-details>","^8O"]]],["^M",["^8;",null,"^8Y","^94"]]]],"^8Y"]]]]]]],"^7Y",true,"^8A",[["^ ","^8>",1,"^7Y",true,"^8B","^8C"]],"^7",299,"^7Z","^8D","^9",299,"^80",1,"^81",true,"^L",["^M",[["^8O","~$&",["^8P"]]]]],"~$<surrogate-header>",["^ ","^7C",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",416,"^8",7,"^9",416,"^:",25,"^L",["^M",["^7D",["^M",[["~$surrogate"]]]]]],"^N","^3;","^6","devtools/formatters/markup.cljs","^:",25,"^7F",["^M",[["^98"]]],"^7G",null,"^7H",["^M",[null,null]],"^8",1,"^7I",["^ ","^7J","^7K","^7L",["^M",["^7M","^97",["^98"],["^M",["^8Q",["^M",["^1E","^98"]],["^M",["~$<preview>",["^M",["^1G","^98"]]]]]]]]],"^7Y",false,"^7",416,"^7Z",["^J",[null,"^8D"]],"^9",416,"^80",1,"^81",true,"^L",["^M",["^7D",["^M",[["^98"]]]]]],"~$<details>",["^ ","^7C",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",173,"^8",7,"^9",173,"^:",16,"^L",["^M",["^7D",["^M",[["^8J","~$starting-index"]]]]]],"^N","^4Z","^6","devtools/formatters/markup.cljs","^:",16,"^7F",["^M",[["^8J","^9;"]]],"^7G",null,"^7H",["^M",[null,null]],"^8",1,"^7I",["^ ","^7J","^7K","^7L",["^M",["^7M","^9:",["^8J","^9;"],["^M",["^3S",["^M",["~$with-meta","^8J",["^ ","~:index","^9;"]]]]],["^M",["^7N",["~$has-continuation?",["^M",["~$pos?","^9;"]],"~$body-markup",["^M",["~$<standard-body>",["^M",["~$body-lines","^8J","^9;"]],"^9>"]]],["^M",["^7R","^9>","^9@",["^M",["^7W","^9@"]]]]]]]]],"^7Y",false,"^7",173,"^7Z","~$clj","^9",173,"^80",2,"^81",true,"^L",["^M",["^7D",["^M",[["^8J","^9;"]]]]]],"~$<more-protocols>",["^ ","^7C",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",336,"^8",7,"^9",336,"^:",23,"^L",["^M",["^7D",["^M",[["~$more-count"]]]]]],"^N","^3A","^6","devtools/formatters/markup.cljs","^:",23,"^7F",["^M",[["^9E"]]],"^7G",null,"^7H",["^M",[null,null]],"^8",1,"^7I",["^ ","^7J","^7K","^7L",["^M",["^7M","^9D",["^9E"],["^M",["^7N",["~$fake-protocol",["^ ","^N",["^M",["^1A","^9E"]]]],["^M",["~$<protocol>",null,"^9F","~:protocol-more-tag"]]]]]]],"^7Y",false,"^7",336,"^7Z","^9C","^9",336,"^80",1,"^81",true,"^L",["^M",["^7D",["^M",[["^9E"]]]]]],"~$<field>",["^ ","^7C",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",351,"^8",7,"^9",351,"^:",14,"^L",["^M",["^7D",["^M",[["~$name","^8J"]]]]]],"^N","^4[","^6","devtools/formatters/markup.cljs","^:",14,"^7F",["^M",[["^9J","^8J"]]],"^7G",null,"^7H",["^M",[null,null]],"^8",1,"^7I",["^ ","^7J","^7K","^7L",["^M",["^7M","^9I",["^9J","^8J"],["~:header-field-tag",["~:header-field-name-tag",["^M",["^8H","^9J"]]],"~:header-field-value-spacer",["~:header-field-value-tag",["^M",["^85",["^M",["^8@","^8J"]],["^M",["^86",["~$p1__15326#"],["^M",["^18","^9O",1]]]]]]],"~:header-field-separator"]]]],"^7Y",false,"^7",351,"^7Z","^7[","^9",351,"^80",2,"^81",true,"^L",["^M",["^7D",["^M",[["^9J","^8J"]]]]]],"~$<symbol>",["^ ","^7C",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",78,"^8",7,"^9",78,"^:",15,"^L",["^M",["^7D",["^M",[["~$symbol"]]]]]],"^N","^35","^6","devtools/formatters/markup.cljs","^:",15,"^7F",["^M",[["^9R"]]],"^7G",null,"^7H",["^M",[null,null]],"^8",1,"^7I",["^ ","^7J","^7K","^7L",["^M",["^7M","^9Q",["^9R"],["~:symbol-tag",["^M",["^8H","^9R"]]]]]],"^7Y",false,"^7",78,"^7Z","^7[","^9",78,"^80",1,"^81",true,"^L",["^M",["^7D",["^M",[["^9R"]]]]]],"~$<fields-details>",["^ ","^7C",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",381,"^8",7,"^9",381,"^:",23,"^L",["^M",["^7D",["^M",[["~$fields","~$obj"]]]]]],"^N","^2E","^6","devtools/formatters/markup.cljs","^:",23,"^7F",["^M",[["^9U","^9V"]]],"^7G",null,"^7H",["^M",[null,null]],"^8",1,"^7I",["^ ","^7J","^7K","^7L",["^M",["^7M","^9T",["^9U","^9V"],["^M",["^7N",["~$protocols",["^M",["~$munging/scan-protocols","^9V"]],"~$has-protocols?",["^M",["~$not",["^M",["~$empty?","^9W"]]]],"~$fields-markup",["^M",["~$if-not",["^M",["~$zero?",["^M",["^8T","^9U"]]]],["~:fields-icon",["^M",["^7S",["~:instance-body-fields-table-tag"],["^M",["^8V","~$<fields-details-row>","^9U"]]]]]]],"~$protocols-list-markup",["^M",["^7R","^9Y",["~:protocols-icon",["^M",["~$<protocols-list>","^9V","^9W"]]]]],"~$native-markup",["~:native-icon",["^M",["^82","^9V"]]]],["^M",["^7B",["^:0","^:6","^:9"]]]]]]]],"^7Y",false,"^7",381,"^7Z","^7[","^9",381,"^80",2,"^81",true,"^L",["^M",["^7D",["^M",[["^9U","^9V"]]]]]],"~$<atomic>",["^ ","^7C",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",435,"^8",7,"^9",435,"^:",15,"^L",["^M",["^7D",["^M",[["^8J"]]]]]],"^N","^2C","^6","devtools/formatters/markup.cljs","^:",15,"^7F",["^M",[["^8J"]]],"^7G",null,"^7H",["^M",[null,null]],"^8",1,"^7I",["^ ","^7J","^7K","^7L",["^M",["^7M","^:;",["^8J"],["^M",["~$cond",["^M",["^17","~:render-nils","^8J","~$nil?"]],["^M",["~$<nil>"]],["^M",["^17","~:render-bools","^8J","^19"]],["^M",["~$<bool>","^8J"]],["^M",["^17","~:render-strings","^8J","~$string?"]],["^M",["~$<string>","^8J"]],["^M",["^17","~:render-numbers","^8J","~$number?"]],["^M",["~$<number>","^8J"]],["^M",["^17","~:render-keywords","^8J","~$keyword?"]],["^M",["^8E","^8J"]],["^M",["^17","~:render-symbols","^8J","~$symbol?"]],["^M",["^9Q","^8J"]],["^M",["^17","~:render-instances","^8J","^1L"]],["^M",["~$<instance>","^8J"]],["^M",["^17","~:render-types","^8J","^1K"]],["^M",["~$<standalone-type>","^8J"]],["^M",["^17","~:render-functions","^8J","^1@"]],["^M",["~$<function>","^8J"]]]]]]],"^7Y",false,"^7",435,"^7Z",["^J",["^9C","^7[","^8C","~$clj-nil"]],"^9",435,"^80",1,"^81",true,"^L",["^M",["^7D",["^M",[["^8J"]]]]]],"^:D",["^ ","^7C",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",92,"^8",7,"^9",92,"^:",15,"^L",["^M",["^7D",["^M",[["~$string"]]]]]],"^N","^2A","^6","devtools/formatters/markup.cljs","^:",15,"^7F",["^M",[["^:S"]]],"^7G",null,"^7H",["^M",[null,null]],"^8",1,"^7I",["^ ","^7J","^7K","^7L",["^M",["^7M","^:D",["^:S"],["^M",["^7N",["~$dq",["^M",["^1>","~:dq"]],"~$re-nl",["^M",["~$js/RegExp.","\n","g"]],"~$nl-marker",["^M",["^1>","~:new-line-string-replacer"]],"~$inline-string",["^M",["~$.replace","^:S","^:V","^:X"]],"~$max-inline-string-size",["^M",["~$+",["^M",["^1>","~:string-prefix-limit"]],["^M",["^1>","~:string-postfix-limit"]]]],"~$quote-string",["^M",["^7P",["~$s"],["^M",["^8H","^:T","~$s","^:T"]]]],"~$should-abbreviate?",["^M",["~$>",["^M",["^8T","^:Z"]],"^;0"]]],["^M",["^7R","^;4",["^M",["^7N",["~$abbreviated-string",["^M",["^1J","^:Z",["^M",["^1>","~:string-abbreviation-marker"]],["^M",["^1>","^;1"]],["^M",["^1>","^;2"]]]],"~$abbreviated-string-markup",["~:string-tag",["^M",["^;3","^;5"]]],"~$string-with-nl-markers",["^M",["^:[","^:S","^:V",["^M",["^8H","^:X","\n"]]]],"~$details-markup",["~:expanded-string-tag","^;9"]],["^M",["^8;","^:S","^;7","^;:"]]]],["^;8",["^M",["^;3","^:Z"]]]]]]]]]],"^7Y",false,"^7",92,"^7Z","^9C","^9",92,"^80",1,"^81",true,"^L",["^M",["^7D",["^M",[["^:S"]]]]]],"^9A",["^ ","^7C",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",128,"^8",7,"^9",128,"^:",22,"^L",["^M",["^7D",["^M",[["^7E","~$&",["~$no-margin?"]]]]]],"^8=",["^ ","^7Y",true,"^8>",1,"^80",1,"^7F",[["^M",["^7E",["^;<"]]]],"^L",["^M",[["^7E","~$&",["^;<"]]]],"^7H",["^M",[null]]]],"^N","^2L","^6","devtools/formatters/markup.cljs","^:",22,"^8=",["^ ","^7Y",true,"^8>",1,"^80",1,"^7F",[["^M",["^7E",["^;<"]]]],"^L",["^M",[["^7E","~$&",["^;<"]]]],"^7H",["^M",[null]]],"^7F",[["^M",["^7E",["^;<"]]]],"^7G",null,"^8>",1,"^7H",["^M",[null]],"^8",1,"^7I",["^ ","^7J","^7K","^7L",["^M",["^7M","^9A",["^7E","~$&",["^;<"]],["^M",["^7N",["~$ol-tag",["^M",["^7R","^;<","^7X","~:standard-ol-tag"]],"~$li-tag",["^M",["^7R","^;<","~:standard-li-no-margin-tag","~:standard-li-tag"]],"^7O",["^M",["^7P",["^7Q"],["^M",["^7R","^7Q",["^M",["^7S",["^;?"],"^7Q"]]]]]],"~$lines-markups",["^M",["^7V","^7O","^7E"]]],["^M",["^7S",["^;="],"^;B"]]]]]]],"^7Y",true,"^8A",[["^ ","^8>",1,"^7Y",true,"^8B","^8C"]],"^7",128,"^7Z","^8D","^9",128,"^80",1,"^81",true,"^L",["^M",[["^7E","~$&",["^;<"]]]]],"~$<type-basis>",["^ ","^7C",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",266,"^8",7,"^9",266,"^:",19,"^L",["^M",["^7D",["^M",[["~$basis"]]]]]],"^N","^2J","^6","devtools/formatters/markup.cljs","^:",19,"^7F",["^M",[["^;D"]]],"^7G",null,"^7H",["^M",[null,null]],"^8",1,"^7I",["^ ","^7J","^7K","^7L",["^M",["^7M","^;C",["^;D"],["^M",["^7N",["~$item-markups",["^M",["^8V","~$<type-basis-item>","^;D"]],"~$children-markups",["^M",["^90","~:type-basis-item-separator","^;E"]]],["^M",["^7S",["~:type-basis-tag"],"^;G"]]]]]]],"^7Y",false,"^7",266,"^7Z","^8C","^9",266,"^80",1,"^81",true,"^L",["^M",["^7D",["^M",[["^;D"]]]]]],"~$*markup-db*",["^ ","^5",["^ ","^6","devtools/formatters/markup.cljs","^7",449,"^8",16,"^9",449,"^:",27,"~:dynamic",true],"^N","^3C","^6","devtools/formatters/markup.cljs","^:",27,"^8",1,"^7I",["^ ","^7J","^7K","^7L",["^M",["~$def","^;J"]]],"^;K",true,"^7",449,"^9",449,"^8B","^8D"],"~$print-via-protocol",["^ ","^7C",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",31,"^8",7,"^9",31,"^:",25,"^L",["^M",["^7D",["^M",[["^8J","^8K","~$&",["^8L"]]]]]],"^8=",["^ ","^7Y",true,"^8>",2,"^80",2,"^7F",[["^M",["^8J","^8K",["^8L"]]]],"^L",["^M",[["^8J","^8K","~$&",["^8L"]]]],"^7H",["^M",[null]]]],"^N","^3[","^6","devtools/formatters/markup.cljs","^:",25,"^8=",["^ ","^7Y",true,"^8>",2,"^80",2,"^7F",[["^M",["^8J","^8K",["^8L"]]]],"^L",["^M",[["^8J","^8K","~$&",["^8L"]]]],"^7H",["^M",[null]]],"^7F",[["^M",["^8J","^8K",["^8L"]]]],"^7G",null,"^8>",2,"^7H",["^M",[null]],"^8",1,"^7I",["^ ","^7J","^7K","^7L",["^M",["^7M","^;M",["^8J","^8K","~$&",["^8L"]],["^M",["^8M","^1C","^8J","^8K","^8L"]]]]],"^7Y",true,"^8A",[["^ ","^8>",2,"^7Y",true,"^8B",["^J",[null,"^8D"]]]],"^7",31,"^7Z","^8D","^9",31,"^80",2,"^81",true,"^L",["^M",[["^8J","^8K","~$&",["^8L"]]]]],"^8M",["^ ","^7C",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",21,"^8",7,"^9",21,"^:",17,"^L",["^M",["^7D",["^M",[["~$method","^8J","^8K","~$&",["^8L"]]]]]],"^8=",["^ ","^7Y",true,"^8>",3,"^80",3,"^7F",[["^M",["^;N","^8J","^8K",["^8L"]]]],"^L",["^M",[["^;N","^8J","^8K","~$&",["^8L"]]]],"^7H",["^M",[null]]]],"^N","^3Y","^6","devtools/formatters/markup.cljs","^:",17,"^8=",["^ ","^7Y",true,"^8>",3,"^80",3,"^7F",[["^M",["^;N","^8J","^8K",["^8L"]]]],"^L",["^M",[["^;N","^8J","^8K","~$&",["^8L"]]]],"^7H",["^M",[null]]],"^7F",[["^M",["^;N","^8J","^8K",["^8L"]]]],"^7G",null,"^8>",3,"^7H",["^M",[null]],"^8",1,"^7I",["^ ","^7J","^7K","^7L",["^M",["^7M","^8M",["^;N","^8J","^8K","~$&",["^8L"]],["^M",["^7N",["~$job-fn",["^M",["^86",[],["^M",["^;N","^8J","^8K",["^M",["~$get-markup-db"]]]]]]],["^M",["^7R",["^M",["~$some?","^8L"]],["^M",["~$binding",["~$*print-level*",["^M",["~$inc","^8L"]]],["^M",["^;O"]]]],["^M",["^;O"]]]]]]]]],"^7Y",true,"^8A",[["^ ","^8>",3,"^7Y",true,"^8B",["^J",[null,"^8D"]]]],"^7",21,"^7Z","^8D","^9",21,"^80",3,"^81",true,"^L",["^M",[["^;N","^8J","^8K","~$&",["^8L"]]]]],"^:A",["^ ","^7C",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",72,"^8",7,"^9",72,"^:",13,"^L",["^M",["^7D",["^M",[["~$bool"]]]]]],"^N","^3X","^6","devtools/formatters/markup.cljs","^:",13,"^7F",["^M",[["^;U"]]],"^7G",null,"^7H",["^M",[null,null]],"^8",1,"^7I",["^ ","^7J","^7K","^7L",["^M",["^7M","^:A",["^;U"],["~:bool-tag",["^M",["^8H","^;U"]]]]]],"^7Y",false,"^7",72,"^7Z","^7[","^9",72,"^80",1,"^81",true,"^L",["^M",["^7D",["^M",[["^;U"]]]]]],"^:O",["^ ","^7C",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",288,"^8",7,"^9",288,"^:",24,"^L",["^M",["^7D",["^M",[["~$constructor-fn","~$&",["~$header-tag"]]]]]],"^8=",["^ ","^7Y",true,"^8>",1,"^80",1,"^7F",[["^M",["^;W",["^;X"]]]],"^L",["^M",[["^;W","~$&",["^;X"]]]],"^7H",["^M",[null]]]],"^N","^2=","^6","devtools/formatters/markup.cljs","^:",24,"^8=",["^ ","^7Y",true,"^8>",1,"^80",1,"^7F",[["^M",["^;W",["^;X"]]]],"^L",["^M",[["^;W","~$&",["^;X"]]]],"^7H",["^M",[null]]],"^7F",[["^M",["^;W",["^;X"]]]],"^7G",null,"^8>",1,"^7H",["^M",[null]],"^8",1,"^7I",["^ ","^7J","^7K","^7L",["^M",["^7M","^:O",["^;W","~$&",["^;X"]],["~:standalone-type-tag",["^M",["~$<type>","^;W","^;X"]]]]]],"^7Y",true,"^8A",[["^ ","^8>",1,"^7Y",true,"^8B","^7["]],"^7",288,"^7Z","^8D","^9",288,"^80",1,"^81",true,"^L",["^M",[["^;W","~$&",["^;X"]]]]],"^99",["^ ","^7C",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",113,"^8",7,"^9",113,"^:",16,"^L",["^M",["^7D",["^M",[["^8J"]]]]]],"^N","^2W","^6","devtools/formatters/markup.cljs","^:",16,"^7F",["^M",[["^8J"]]],"^7G",null,"^7H",["^M",[null,null]],"^8",1,"^7I",["^ ","^7J","^7K","^7L",["^M",["^7M","^99",["^8J"],["^M",["^8I","^8J","~:header-tag",["^M",["^1>","~:max-print-level"]]]]]]],"^7Y",false,"^7",113,"^7Z",["^J",[null,"^8D"]],"^9",113,"^80",1,"^81",true,"^L",["^M",["^7D",["^M",[["^8J"]]]]]],"~$<header>",["^ ","^7C",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",413,"^8",7,"^9",413,"^:",15,"^L",["^M",["^7D",["^M",[["^8J"]]]]]],"^N","^46","^6","devtools/formatters/markup.cljs","^:",15,"^7F",["^M",[["^8J"]]],"^7G",null,"^7H",["^M",[null,null]],"^8",1,"^7I",["^ ","^7J","^7K","^7L",["^M",["^7M","^<1",["^8J"],["^M",["~$<cljs-land>",["^M",["^99","^8J"]]]]]]],"^7Y",false,"^7",413,"^7Z","^8C","^9",413,"^80",1,"^81",true,"^L",["^M",["^7D",["^M",[["^8J"]]]]]],"~$<protocol-method>",["^ ","^7C",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",312,"^8",7,"^9",312,"^:",24,"^L",["^M",["^7D",["^M",[["^9J","~$arities"]]]]]],"^N","^47","^6","devtools/formatters/markup.cljs","^:",24,"^7F",["^M",[["^9J","^<4"]]],"^7G",null,"^7H",["^M",[null,null]],"^8",1,"^7I",["^ ","^7J","^7K","^7L",["^M",["^7M","^<3",["^9J","^<4"],["~:protocol-method-tag","~:method-icon",["~:protocol-method-name-tag","^9J"],["^M",["^8N","^<4"]]]]]],"^7Y",false,"^7",312,"^7Z","^7[","^9",312,"^80",2,"^81",true,"^L",["^M",["^7D",["^M",[["^9J","^<4"]]]]]],"^<2",["^ ","^7C",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",65,"^8",7,"^9",65,"^:",18,"^L",["^M",["^7D",["^M",[["~$&","~$children"]]]]],"^8=",["^ ","^7Y",true,"^8>",0,"^80",0,"^7F",[["^M",["^<8"]]],"^L",["^M",[["~$&","^<8"]]],"^7H",["^M",[null]]]],"^N","^28","^6","devtools/formatters/markup.cljs","^:",18,"^8=",["^ ","^7Y",true,"^8>",0,"^80",0,"^7F",[["^M",["^<8"]]],"^L",["^M",[["~$&","^<8"]]],"^7H",["^M",[null]]],"^7F",[["^M",["^<8"]]],"^7G",null,"^8>",0,"^7H",["^M",[null]],"^8",1,"^7I",["^ ","^7J","^7K","^7L",["^M",["^7M","^<2",["~$&","^<8"],["^M",["^7S",["~:cljs-land-tag"],"^<8"]]]]],"^7Y",true,"^8A",[["^ ","^8>",0,"^7Y",true,"^8B","^8C"]],"^7",65,"^7Z","^8D","^9",65,"^80",0,"^81",true,"^L",["^M",[["~$&","^<8"]]]],"^;F",["^ ","^7C",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",263,"^8",7,"^9",263,"^:",24,"^L",["^M",["^7D",["^M",[["~$basis-item"]]]]]],"^N","^27","^6","devtools/formatters/markup.cljs","^:",24,"^7F",["^M",[["^<:"]]],"^7G",null,"^7H",["^M",[null,null]],"^8",1,"^7I",["^ ","^7J","^7K","^7L",["^M",["^7M","^;F",["^<:"],["~:type-basis-item-tag",["^M",["^9J","^<:"]]]]]],"^7Y",false,"^7",263,"^7Z","^7[","^9",263,"^80",1,"^81",true,"^L",["^M",["^7D",["^M",[["^<:"]]]]]],"^96",["^ ","^7C",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",296,"^8",7,"^9",296,"^:",40,"^L",["^M",["^7D",["^M",[["^8O"]]]]]],"^N","^36","^6","devtools/formatters/markup.cljs","^:",40,"^7F",["^M",[["^8O"]]],"^7G",null,"^7H",["^M",[null,null]],"^8",1,"^7I",["^ ","^7J","^7K","^7L",["^M",["^7M","^96",["^8O"],["^M",["^7B",["^M",["^8V","^8W","^8O"]]]]]]],"^7Y",false,"^7",296,"^7Z","^7[","^9",296,"^80",1,"^81",true,"^L",["^M",["^7D",["^M",[["^8O"]]]]]],"^:5",["^ ","^7C",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",358,"^8",7,"^9",358,"^:",27,"^L",["^M",["^7D",["^M",[["~$field"]]]]]],"^N","^2K","^6","devtools/formatters/markup.cljs","^:",27,"^7F",["^M",[["^<<"]]],"^7G",null,"^7H",["^M",[null,null]],"^8",1,"^7I",["^ ","^7J","^7K","^7L",["^M",["^7M","^:5",["^<<"],["^M",["^7N",[["^9J","^8J"],"^<<"],["~:body-field-tr-tag",["~:body-field-td1-tag","~:body-field-symbol",["~:body-field-name-tag",["^M",["^8H","^9J"]]]],["~:body-field-td2-tag","~:body-field-value-spacer"],["~:body-field-td3-tag",["~:body-field-value-tag",["^M",["^8;","^8J"]]]]]]]]]],"^7Y",false,"^7",358,"^7Z","^7[","^9",358,"^80",1,"^81",true,"^L",["^M",["^7D",["^M",[["^<<"]]]]]],"~$<standard-body-reference>",["^ ","^7C",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",137,"^8",7,"^9",137,"^:",32,"^L",["^M",["^7D",["^M",[["~$o"]]]]]],"^N","^37","^6","devtools/formatters/markup.cljs","^:",32,"^7F",["^M",[["~$o"]]],"^7G",null,"^7H",["^M",[null,null]],"^8",1,"^7I",["^ ","^7J","^7K","^7L",["^M",["^7M","^<E",["~$o"],["^M",["^9A",[[["^M",["^85","~$o"]]]]]]]]],"^7Y",false,"^7",137,"^7Z","^8C","^9",137,"^80",1,"^81",true,"^L",["^M",["^7D",["^M",[["~$o"]]]]]],"~$<surrogate-body>",["^ ","^7C",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",427,"^8",7,"^9",427,"^:",23,"^L",["^M",["^7D",["^M",[["^98"]]]]]],"^N","^2F","^6","devtools/formatters/markup.cljs","^:",23,"^7F",["^M",[["^98"]]],"^7G",null,"^7H",["^M",[null,null]],"^8",1,"^7I",["^ ","^7J","^7K","^7L",["^M",["^7M","^<F",["^98"],["^M",["~$if-let",["~$body",["^M",["^1;","^98"]]],["^M",["^7R",["^M",["~$=","~:target","^<H"]],["^M",["~$<surrogate-target>","^98"]],"^<H"]]]]]]],"^7Y",false,"^7",427,"^7Z",["^J",["^9C","^8D","^:R"]],"^9",427,"^80",1,"^81",true,"^L",["^M",["^7D",["^M",[["^98"]]]]]],"^;P",["^ ","^7C",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",461,"^8",7,"^9",461,"^:",20,"^L",["^M",["^7D",["^M",[[]]]]]],"^N","^32","^6","devtools/formatters/markup.cljs","^:",20,"^7F",["^M",[[]]],"^7G",null,"^7H",["^M",[null,null]],"^8",1,"^7I",["^ ","^7J","^7K","^7L",["^M",["^7M","^;P",[],["^M",["^7R",["^M",["^:>","^;J"]],["^M",["~$set!","^;J",["^M",["^G"]]]]]],"^;J"]]],"^7Y",false,"^7",461,"^7Z","^8D","^9",461,"^80",0,"^81",true,"^L",["^M",["^7D",["^M",[[]]]]]],"~$<expandable>",["^ ","^7C",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",36,"^8",7,"^9",36,"^:",19,"^L",["^M",["^7D",["^M",[["~$&","^<8"]]]]],"^8=",["^ ","^7Y",true,"^8>",0,"^80",0,"^7F",[["^M",["^<8"]]],"^L",["^M",[["~$&","^<8"]]],"^7H",["^M",[null]]]],"^N","^48","^6","devtools/formatters/markup.cljs","^:",19,"^8=",["^ ","^7Y",true,"^8>",0,"^80",0,"^7F",[["^M",["^<8"]]],"^L",["^M",[["~$&","^<8"]]],"^7H",["^M",[null]]],"^7F",[["^M",["^<8"]]],"^7G",null,"^8>",0,"^7H",["^M",[null]],"^8",1,"^7I",["^ ","^7J","^7K","^7L",["^M",["^7M","^<L",["~$&","^<8"],["^M",["^7N",["~$inner-markup",["^M",["^7S",["~:expandable-inner-tag"],"^<8"]]],["~:expandable-tag","~:expandable-symbol","^<M"]]]]]],"^7Y",true,"^8A",[["^ ","^8>",0,"^7Y",true,"^8B","^7["]],"^7",36,"^7Z","^8D","^9",36,"^80",0,"^81",true,"^L",["^M",[["~$&","^<8"]]]],"^;Z",["^ ","^7C",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",279,"^8",7,"^9",279,"^:",13,"^L",["^M",["^7D",["^M",[["^;W","~$&",["^;X"]]]]]],"^8=",["^ ","^7Y",true,"^8>",1,"^80",1,"^7F",[["^M",["^;W",["^;X"]]]],"^L",["^M",[["^;W","~$&",["^;X"]]]],"^7H",["^M",[null]]]],"^N","^3:","^6","devtools/formatters/markup.cljs","^:",13,"^8=",["^ ","^7Y",true,"^8>",1,"^80",1,"^7F",[["^M",["^;W",["^;X"]]]],"^L",["^M",[["^;W","~$&",["^;X"]]]],"^7H",["^M",[null]]],"^7F",[["^M",["^;W",["^;X"]]]],"^7G",null,"^8>",1,"^7H",["^M",[null]],"^8",1,"^7I",["^ ","^7J","^7K","^7L",["^M",["^7M","^;Z",["^;W","~$&",["^;X"]],["^M",["^7N",[["^1N","^9J","^;D"],["^M",["~$munging/parse-constructor-info","^;W"]],"~$name-markup",["~:type-name-tag","^9J"],"^8Y",[["^M",["^8Q","^;X","~:type-header-tag"]],"~:type-symbol","^<R"],"^94",["^M",["^95","~$<type-details>","^;W","^1N","^9J","^;D"]]],["~:type-wrapper-tag","~:type-header-background",["~:type-ref-tag",["^M",["^8;","^;W","^8Y","^94"]]]]]]]]],"^7Y",true,"^8A",[["^ ","^8>",1,"^7Y",true,"^8B","^7["]],"^7",279,"^7Z","^8D","^9",279,"^80",1,"^81",true,"^L",["^M",[["^;W","~$&",["^;X"]]]]],"^8W",["^ ","^7C",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",293,"^8",7,"^9",293,"^:",30,"^L",["^M",["^7D",["^M",[["~$arity-fn"]]]]]],"^N","^39","^6","devtools/formatters/markup.cljs","^:",30,"^7F",["^M",[["^<Z"]]],"^7G",null,"^7H",["^M",[null,null]],"^8",1,"^7I",["^ ","^7J","^7K","^7L",["^M",["^7M","^8W",["^<Z"],["^M",["^85","^<Z"]]]]],"^7Y",false,"^7",293,"^7Z","^8C","^9",293,"^80",1,"^81",true,"^L",["^M",["^7D",["^M",[["^<Z"]]]]]],"~$<raw-surrogate>",["^ ","^7C",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",40,"^8",7,"^9",40,"^:",22,"^L",["^M",["^7D",["^M",[["~$&","^8<"]]]]],"^8=",["^ ","^7Y",true,"^8>",0,"^80",0,"^7F",[["^M",["^8<"]]],"^L",["^M",[["~$&","^8<"]]],"^7H",["^M",[null]]]],"^N","^4O","^6","devtools/formatters/markup.cljs","^:",22,"^8=",["^ ","^7Y",true,"^8>",0,"^80",0,"^7F",[["^M",["^8<"]]],"^L",["^M",[["~$&","^8<"]]],"^7H",["^M",[null]]],"^7F",[["^M",["^8<"]]],"^7G",null,"^8>",0,"^7H",["^M",[null]],"^8",1,"^7I",["^ ","^7J","^7K","^7L",["^M",["^7M","^<[",["~$&","^8<"],["^M",["^7S",["surrogate"],"^8<"]]]]],"^7Y",true,"^8A",[["^ ","^8>",0,"^7Y",true,"^8B","^8C"]],"^7",40,"^7Z","^8D","^9",40,"^80",0,"^81",true,"^L",["^M",[["~$&","^8<"]]]],"^<V",["^ ","^7C",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",271,"^8",7,"^9",271,"^:",21,"^L",["^M",["^7D",["^M",[["^;W","^1N","~$_name","^;D"]]]]]],"^N","^38","^6","devtools/formatters/markup.cljs","^:",21,"^7F",["^M",[["^;W","^1N","^=0","^;D"]]],"^7G",null,"^7H",["^M",[null,null]],"^8",1,"^7I",["^ ","^7J","^7K","^7L",["^M",["^7M","^<V",["^;W","^1N","^=0","^;D"],["^M",["^7N",["~$ns-markup",["^M",["^:1",["^M",["^9[","^1N"]],["~:ns-icon",["~:fn-ns-name-tag","^1N"]]]],"~$basis-markup",["^M",["^7R",["^M",["^9[","^;D"]],["~:empty-basis-symbol"],["~:basis-icon",["^M",["^;C","^;D"]]]]],"^:9",["^::",["^M",["^82","^;W"]]]],["^M",["^7B",["^=4","^=1","^:9"]]]]]]]],"^7Y",false,"^7",271,"^7Z","^7[","^9",271,"^80",4,"^81",true,"^L",["^M",["^7D",["^M",[["^;W","^1N","^=0","^;D"]]]]]],"~$<list>",["^ ","^7C",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",194,"^8",7,"^9",194,"^:",13,"^L",["^M",["^7D",["^M",[["~$items","~$max-count","~$&",["~$opts"]]]]]],"^8=",["^ ","^7Y",true,"^8>",2,"^80",2,"^7F",[["^M",["^=8","^=9",["^=:"]]]],"^L",["^M",[["^=8","^=9","~$&",["^=:"]]]],"^7H",["^M",[null]]]],"^N","^4K","^6","devtools/formatters/markup.cljs","^:",13,"^8=",["^ ","^7Y",true,"^8>",2,"^80",2,"^7F",[["^M",["^=8","^=9",["^=:"]]]],"^L",["^M",[["^=8","^=9","~$&",["^=:"]]]],"^7H",["^M",[null]]],"^7F",[["^M",["^=8","^=9",["^=:"]]]],"^7G",null,"^8>",2,"^7H",["^M",[null]],"^8",1,"^7I",["^ ","^7J","^7K","^7L",["^M",["^7M","^=7",["^=8","^=9","~$&",["^=:"]],["^M",["^7N",["~$items-markups",["^M",["^8X","^=9","^=8"]],"^9E",["^M",["~$-",["^M",["^8T","^=8"]],"^=9"]],"^8S",["^M",["^9?","^9E"]],"~$separator",["^M",["^8Q",["^M",["~:separator","^=:"]],"~:list-separator"]],"~$more-symbol",["^M",["^7R","^8S",["^M",["^<G",["^=?",["^M",["~:more-symbol","^=:"]]],["^M",["^7R",["^M",["~$fn?","^=?"]],["^M",["^=?","^9E"]],"^=?"]],["^M",["^1A","^9E"]]]]]],"^8Y",["^M",["^7S",[["^M",["^8Q",["^M",["^8B","^=:"]],"~:list-tag"]],["^M",["^8Q",["^M",["~:open-symbol","^=:"]],"~:list-open-symbol"]]],["^M",["^90","^=<","^=;"]],["^M",["^7R","^8S",["^=<","^=?"]]],[["^M",["^8Q",["^M",["~:close-symbol","^=:"]],"~:list-close-symbol"]]]]]],["^M",["^7R","^8S",["^M",["^7N",["^;:",["^M",["~:details","^=:"]],"~$default-details-fn",["^M",["^95","~$<list-details>","^=8","^=:"]]],["^M",["^8;",null,"^8Y",["^M",["^8Q","^;:","^=H"]]]]]],"^8Y"]]]]]]],"^7Y",true,"^8A",[["^ ","^8>",2,"^7Y",true,"^8B","^8C"]],"^7",194,"^7Z","^8D","^9",194,"^80",2,"^81",true,"^L",["^M",[["^=8","^=9","~$&",["^=:"]]]]],"~$<meta-wrapper>",["^ ","^7C",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",223,"^8",7,"^9",223,"^:",21,"^L",["^M",["^7D",["^M",[["~$metadata","~$&","^<8"]]]]],"^8=",["^ ","^7Y",true,"^8>",1,"^80",1,"^7F",[["^M",["^=K","^<8"]]],"^L",["^M",[["^=K","~$&","^<8"]]],"^7H",["^M",[null]]]],"^N","^4L","^6","devtools/formatters/markup.cljs","^:",21,"^8=",["^ ","^7Y",true,"^8>",1,"^80",1,"^7F",[["^M",["^=K","^<8"]]],"^L",["^M",[["^=K","~$&","^<8"]]],"^7H",["^M",[null]]],"^7F",[["^M",["^=K","^<8"]]],"^7G",null,"^8>",1,"^7H",["^M",[null]],"^8",1,"^7I",["^ ","^7J","^7K","^7L",["^M",["^7M","^=J",["^=K","~$&","^<8"],["^M",["^7S",["~:meta-wrapper-tag"],"^<8",[["^M",["~$<meta>","^=K"]]]]]]]],"^7Y",true,"^8A",[["^ ","^8>",1,"^7Y",true,"^8B","^8C"]],"^7",223,"^7Z","^8D","^9",223,"^80",1,"^81",true,"^L",["^M",[["^=K","~$&","^<8"]]]],"^9G",["^ ","^7C",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",327,"^8",7,"^9",327,"^:",17,"^L",["^M",["^7D",["^M",[["^9V","~$protocol","~$&",["^8K"]]]]]],"^8=",["^ ","^7Y",true,"^8>",2,"^80",2,"^7F",[["^M",["^9V","^=N",["^8K"]]]],"^L",["^M",[["^9V","^=N","~$&",["^8K"]]]],"^7H",["^M",[null]]]],"^N","^3H","^6","devtools/formatters/markup.cljs","^:",17,"^8=",["^ ","^7Y",true,"^8>",2,"^80",2,"^7F",[["^M",["^9V","^=N",["^8K"]]]],"^L",["^M",[["^9V","^=N","~$&",["^8K"]]]],"^7H",["^M",[null]]],"^7F",[["^M",["^9V","^=N",["^8K"]]]],"^7G",null,"^8>",2,"^7H",["^M",[null]],"^8",1,"^7I",["^ ","^7J","^7K","^7L",["^M",["^7M","^9G",["^9V","^=N","~$&",["^8K"]],["^M",["^7N",[["^ ","~:keys",["^1N","^9J","~$selector","~$fast?"]],"^=N","^8Y",[["^M",["^8Q","^8K","~:protocol-name-tag"]],"^9J"],"~$prefix-markup",[["^M",["^7R","^=Q","~:fast-protocol-tag","~:slow-protocol-tag"]],"~:protocol-background"]],["^M",["^7R",["^M",["^;Q","^9V"]],["^M",["^7N",["^94",["^M",["^95","~$<protocol-details>","^9V","^1N","^9J","^=P","^=Q"]]],["^M",["~$conj","^=S",["^M",["^8;","^9V","^8Y","^94"]]]]]],["^M",["^=X","^=S","^8Y"]]]]]]]]],"^7Y",true,"^8A",[["^ ","^8>",2,"^7Y",true,"^8B","^9C"]],"^7",327,"^7Z","^8D","^9",327,"^80",2,"^81",true,"^L",["^M",[["^9V","^=N","~$&",["^8K"]]]]],"~$<index>",["^ ","^7C",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",142,"^8",7,"^9",142,"^:",14,"^L",["^M",["^7D",["^M",[["^8J"]]]]]],"^N","^3F","^6","devtools/formatters/markup.cljs","^:",14,"^7F",["^M",[["^8J"]]],"^7G",null,"^7H",["^M",[null,null]],"^8",1,"^7I",["^ ","^7J","^7K","^7L",["^M",["^7M","^=Y",["^8J"],["~:index-tag","^8J","~:line-index-separator"]]]],"^7Y",false,"^7",142,"^7Z","^7[","^9",142,"^80",1,"^81",true,"^L",["^M",["^7D",["^M",[["^8J"]]]]]],"^8@",["^ ","^7C",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",43,"^8",7,"^9",43,"^:",18,"^L",["^M",["^7D",["^M",[["~$&",["^83","~$header","^<H","~$start-index"]]]]]],"^8=",["^ ","^7Y",true,"^8>",0,"^80",0,"^7F",[["^M",[["^83","^>0","^<H","^>1"]]]],"^L",["^M",[["~$&",["^83","^>0","^<H","^>1"]]]],"^7H",["^M",[null]]]],"^N","^2[","^6","devtools/formatters/markup.cljs","^:",18,"^8=",["^ ","^7Y",true,"^8>",0,"^80",0,"^7F",[["^M",[["^83","^>0","^<H","^>1"]]]],"^L",["^M",[["~$&",["^83","^>0","^<H","^>1"]]]],"^7H",["^M",[null]]],"^7F",[["^M",[["^83","^>0","^<H","^>1"]]]],"^7G",null,"^8>",0,"^7H",["^M",[null]],"^8",1,"^7I",["^ ","^7J","^7K","^7L",["^M",["^7M","^8@",["~$&",["^83","^>0","^<H","^>1"]],["^M",["^7N",["^>0",["^M",["^7R",["^M",["^;Q","^<H"]],["^M",["^<L","^>0"]],"^>0"]]],["^M",["^<[","^83","^>0","^<H","^>1"]]]]]]],"^7Y",true,"^8A",[["^ ","^8>",0,"^7Y",true,"^8B","^8C"]],"^7",43,"^7Z","^8D","^9",43,"^80",0,"^81",true,"^L",["^M",[["~$&",["^83","^>0","^<H","^>1"]]]]],"^:8",["^ ","^7C",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",340,"^8",7,"^9",340,"^:",23,"^L",["^M",["^7D",["^M",[["^9V","^9W","~$&",["~$max-protocols"]]]]]],"^8=",["^ ","^7Y",true,"^8>",2,"^80",2,"^7F",[["^M",["^9V","^9W",["^>2"]]]],"^L",["^M",[["^9V","^9W","~$&",["^>2"]]]],"^7H",["^M",[null]]]],"^N","^3D","^6","devtools/formatters/markup.cljs","^:",23,"^8=",["^ ","^7Y",true,"^8>",2,"^80",2,"^7F",[["^M",["^9V","^9W",["^>2"]]]],"^L",["^M",[["^9V","^9W","~$&",["^>2"]]]],"^7H",["^M",[null]]],"^7F",[["^M",["^9V","^9W",["^>2"]]]],"^7G",null,"^8>",2,"^7H",["^M",[null]],"^8",1,"^7I",["^ ","^7J","^7K","^7L",["^M",["^7M","^:8",["^9V","^9W","~$&",["^>2"]],["^M",["^7N",["^>2",["^M",["^8Q","^>2",["^M",["^1>","~:max-list-protocols"]]]],"~$protocols-markups",["^M",["^8V",["^M",["^95","^9G","^9V"]],"^9W"]]],["^M",["^=7","^>4","^>2",["^ ","^8B","~:protocols-header-tag","^=C","~:protocols-list-open-symbol","^=E","~:protocols-list-close-symbol","^==","~:header-protocol-separator","^=@","^9D"]]]]]]]],"^7Y",true,"^8A",[["^ ","^8>",2,"^7Y",true,"^8B","^8C"]],"^7",340,"^7Z","^8D","^9",340,"^80",2,"^81",true,"^L",["^M",[["^9V","^9W","~$&",["^>2"]]]]],"^=M",["^ ","^7C",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",218,"^8",7,"^9",218,"^:",13,"^L",["^M",["^7D",["^M",[["^=K"]]]]]],"^N","^3M","^6","devtools/formatters/markup.cljs","^:",13,"^7F",["^M",[["^=K"]]],"^7G",null,"^7H",["^M",[null,null]],"^8",1,"^7I",["^ ","^7J","^7K","^7L",["^M",["^7M","^=M",["^=K"],["^M",["^7N",["~$body-fn",["^M",["^7P",[],["~:meta-body-tag",["^M",["^99","^=K"]]]]],"^>0",["~:meta-header-tag","meta"]],["~:meta-reference-tag",["^M",["^8;","^=K","^>0","^>9"]]]]]]]],"^7Y",false,"^7",218,"^7Z","^7[","^9",218,"^80",1,"^81",true,"^L",["^M",["^7D",["^M",[["^=K"]]]]]],"^:M",["^ ","^7C",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",392,"^8",7,"^9",392,"^:",17,"^L",["^M",["^7D",["^M",[["^8J"]]]]]],"^N","^3J","^6","devtools/formatters/markup.cljs","^:",17,"^7F",["^M",[["^8J"]]],"^7G",null,"^7H",["^M",[null,null]],"^8",1,"^7I",["^ ","^7J","^7K","^7L",["^M",["^7M","^:M",["^8J"],["^M",["^7N",["^;W",["^M",["^1<","^8J"]],["~$_ns","^=0","^;D"],["^M",["^<Q","^;W"]],"~$custom-printing?",["^M",["~$implements?","~$IPrintWithWriter","^8J"]],"~$type-markup",["^M",["^;Z","^;W","~:instance-type-header-tag"]],"^9U",["^M",["^1B","^8J","^;D"]],"^:0",["^M",["~$<fields>","^9U",["^M",["^7R","^>>",0]]]],"~$fields-details-markup-fn",["^M",["^86",[],["^M",["^9T","^9U","^8J"]]]],"~$fields-preview-markup",["~:instance-value-tag",["^M",["^8;","^8J","^:0","^>D"]]],"~$custom-printing-markup",["^M",["^7R","^>>",["~:instance-custom-printing-wrapper-tag","~:instance-custom-printing-background",["^M",["^;M","^8J","~:instance-custom-printing-tag"]]]]]],["~:instance-header-tag","~:instance-header-background","^>E","^>G","^>A"]]]]]],"^7Y",false,"^7",392,"^7Z","^7[","^9",392,"^80",1,"^81",true,"^L",["^M",["^7D",["^M",[["^8J"]]]]]],"^85",["^ ","^7C",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",47,"^8",7,"^9",47,"^:",18,"^L",["^M",["^7D",["^M",[["~$&","^8<"]]]]],"^8=",["^ ","^7Y",true,"^8>",0,"^80",0,"^7F",[["^M",["^8<"]]],"^L",["^M",[["~$&","^8<"]]],"^7H",["^M",[null]]]],"^N","^3T","^6","devtools/formatters/markup.cljs","^:",18,"^8=",["^ ","^7Y",true,"^8>",0,"^80",0,"^7F",[["^M",["^8<"]]],"^L",["^M",[["~$&","^8<"]]],"^7H",["^M",[null]]],"^7F",[["^M",["^8<"]]],"^7G",null,"^8>",0,"^7H",["^M",[null]],"^8",1,"^7I",["^ ","^7J","^7K","^7L",["^M",["^7M","^85",["~$&","^8<"],["^M",["^7S",["reference"],"^8<"]]]]],"^7Y",true,"^8A",[["^ ","^8>",0,"^7Y",true,"^8B","^8C"]],"^7",47,"^7Z","^8D","^9",47,"^80",0,"^81",true,"^L",["^M",[["~$&","^8<"]]]],"~$<function-details>",["^ ","^7C",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",228,"^8",7,"^9",228,"^:",25,"^L",["^M",["^7D",["^M",[["~$fn-obj","^1N","^=0","^<4","~$prefix"]]]]]],"^N","^3V","^6","devtools/formatters/markup.cljs","^:",25,"^7F",["^M",[["^>N","^1N","^=0","^<4","^>O"]]],"^7G",null,"^7H",["^M",[null,null]],"^8",1,"^7I",["^ ","^7J","^7K","^7L",["^M",["^7M","^>M",["^>N","^1N","^=0","^<4","^>O"],["^ ","~:pre",[["^M",["^=A","^>N"]]]],["^M",["^7N",["^<4",["^M",["^8V","^1?","^<4"]],"~$make-arity-markup-list",["^M",["^7P",["~$arity"],[["~:fn-multi-arity-args-indent-tag","^>O"],["~:fn-args-tag","^>R"]]]],"~$arities-markupts-lists",["^M",["^7R",["^M",["~$>",["^M",["^8T","^<4"]],1]],["^M",["^8V","^>Q","^<4"]]]],"~$ns-markups-list",["^M",["^:1",["^M",["^9[","^1N"]],["^=2",["^=3","^1N"]]]],"~$native-markups-list",["^::",["^M",["^82","^>N"]]]],["^M",["^7B",["^M",["^7S","^>U",["^>V","^>W"]]]]]]]]]],"^7Y",false,"^7",228,"^7Z","^7[","^9",228,"^80",5,"^81",true,"^L",["^M",["^7D",["^M",[["^>N","^1N","^=0","^<4","^>O"]]]]]],"^:Q",["^ ","^7C",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",245,"^8",7,"^9",245,"^:",17,"^L",["^M",["^7D",["^M",[["^>N"]]]]]],"^N","^41","^6","devtools/formatters/markup.cljs","^:",17,"^7F",["^M",[["^>N"]]],"^7G",null,"^7H",["^M",[null,null]],"^8",1,"^7I",["^ ","^7J","^7K","^7L",["^M",["^7M","^:Q",["^>N"],["^ ","^>P",[["^M",["^=A","^>N"]]]],["^M",["^7N",[["^1N","^9J"],["^M",["~$munging/parse-fn-info","^>N"]],"~$lambda?",["^M",["^9[","^9J"]],"~$spacer-symbol",["^M",["^1>","~:spacer"]],"~$rest-symbol",["^M",["^1>","~:rest-symbol"]],"~$multi-arity-symbol",["^M",["^1>","~:multi-arity-symbol"]],"^<4",["^M",["~$munging/extract-arities","^>N",true,"^>Z","^?2","^?0"]],"~$arities-markup",["^M",["~$<arities>","^<4"]],"^<R",["^M",["^:1","^>Y",["~:fn-name-tag","^9J"]]],"~$icon-markup",["^M",["^7R","^>Y","~:lambda-icon","~:fn-icon"]],"^=S",["~:fn-prefix-tag","^?8","^<R"],"^8Y",["~:fn-header-tag","^=S","^?5"],"~$details-fn",["^M",["^95","^>M","^>N","^1N","^9J","^<4","^=S"]]],["^M",["^8;","^>N","^8Y","^?="]]]]]]],"^7Y",false,"^7",245,"^7Z","^8C","^9",245,"^80",1,"^81",true,"^L",["^M",["^7D",["^M",[["^>N"]]]]]],"^?6",["^ ","^7C",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",239,"^8",7,"^9",239,"^:",16,"^L",["^M",["^7D",["^M",[["^<4"]]]]]],"^N","^2N","^6","devtools/formatters/markup.cljs","^:",16,"^7F",["^M",[["^<4"]]],"^7G",null,"^7H",["^M",[null,null]],"^8",1,"^7I",["^ ","^7J","^7K","^7L",["^M",["^7M","^?6",["^<4"],["^M",["^7N",["~$multi-arity?",["^M",["~$>",["^M",["^8T","^<4"]],1]]],["^>T",["^M",["^1?",["^M",["^7R","^?>",["^M",["^1>","^?3"]],["^M",["~$first","^<4"]]]]]]]]]]]],"^7Y",false,"^7",239,"^7Z","^7[","^9",239,"^80",1,"^81",true,"^L",["^M",["^7D",["^M",[["^<4"]]]]]],"~$<header-expander>",["^ ","^7C",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",60,"^8",7,"^9",60,"^:",24,"^L",["^M",["^7D",["^M",[["^83"]]]]]],"^N","^2G","^6","devtools/formatters/markup.cljs","^:",24,"^7F",["^M",[["^83"]]],"^7G",null,"^7H",["^M",[null,null]],"^8",1,"^7I",["^ ","^7J","^7K","^7L",["^M",["^7M","^?@",["^83"],["^M",["^85",["^M",["^<[","^83","~:header-expander-symbol","^<I"]],"^1F"]]]]],"^7Y",false,"^7",60,"^7Z","^8C","^9",60,"^80",1,"^81",true,"^L",["^M",["^7D",["^M",[["^83"]]]]]],"^=I",["^ ","^7C",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",191,"^8",7,"^9",191,"^:",21,"^L",["^M",["^7D",["^M",[["^=8","~$_opts"]]]]]],"^N","^4P","^6","devtools/formatters/markup.cljs","^:",21,"^7F",["^M",[["^=8","^?B"]]],"^7G",null,"^7H",["^M",[null,null]],"^8",1,"^7I",["^ ","^7J","^7K","^7L",["^M",["^7M","^=I",["^=8","^?B"],["^M",["^7B",["^M",["^8V","~$list","^=8"]]]]]]],"^7Y",false,"^7",191,"^7Z","^7[","^9",191,"^80",2,"^81",true,"^L",["^M",["^7D",["^M",[["^=8","^?B"]]]]]],"~$<circular-reference>",["^ ","^7C",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",53,"^8",7,"^9",53,"^:",27,"^L",["^M",["^7D",["^M",[["~$&","^<8"]]]]],"^8=",["^ ","^7Y",true,"^8>",0,"^80",0,"^7F",[["^M",["^<8"]]],"^L",["^M",[["~$&","^<8"]]],"^7H",["^M",[null]]]],"^N","^45","^6","devtools/formatters/markup.cljs","^:",27,"^8=",["^ ","^7Y",true,"^8>",0,"^80",0,"^7F",[["^M",["^<8"]]],"^L",["^M",[["~$&","^<8"]]],"^7H",["^M",[null]]],"^7F",[["^M",["^<8"]]],"^7G",null,"^8>",0,"^7H",["^M",[null]],"^8",1,"^7I",["^ ","^7J","^7K","^7L",["^M",["^7M","^?D",["~$&","^<8"],["^M",["^8;",null,["~:circular-reference-tag","~:circular-ref-icon"],["^M",["^7S",["~:circular-reference-body-tag"],"^<8"]]]]]]],"^7Y",true,"^8A",[["^ ","^8>",0,"^7Y",true,"^8B","^8C"]],"^7",53,"^7Z","^8D","^9",53,"^80",0,"^81",true,"^L",["^M",[["~$&","^<8"]]]],"^<J",["^ ","^7C",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",420,"^8",7,"^9",420,"^:",25,"^L",["^M",["^7D",["^M",[["^98"]]]]]],"^N","^4>","^6","devtools/formatters/markup.cljs","^:",25,"^7F",["^M",[["^98"]]],"^7G",null,"^7H",["^M",[null,null]],"^8",1,"^7I",["^ ","^7J","^7K","^7L",["^M",["^7M","^<J",["^98"],["^M",["^7N",["~$target",["^M",["^1G","^98"]]],["^M",["^7R",["^M",["~$seqable?","^?H"]],["^M",["^7N",["^9;",["^M",["^1I","^98"]]],["^M",["^9:","^?H","^9;"]]]],["^M",["^<E","^?H"]]]]]]]]],"^7Y",false,"^7",420,"^7Z","^9C","^9",420,"^80",1,"^81",true,"^L",["^M",["^7D",["^M",[["^98"]]]]]],"~$body-line",["^ ","^7C",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",145,"^8",8,"^9",145,"^:",17,"~:private",true,"^L",["^M",["^7D",["^M",[["~$index","^8J"]]]]]],"^?K",true,"^N","^2D","^6","devtools/formatters/markup.cljs","^:",17,"^7F",["^M",[["^?L","^8J"]]],"^7G",null,"^7H",["^M",[null,null]],"^8",1,"^7I",["^ ","^7J","^7K","^7L",["^M",["~$defn-","^?J",["^?L","^8J"],["^M",["^7N",["~$index-markup",["^M",["^=Y","^?L"]],"~$value-markup",["^M",["^8I","^8J","~:item-tag",["^M",["^1>","~:body-line-max-print-level"]]]]],["^?N","^?O"]]]]]],"^7Y",false,"^7",145,"^7Z","^7[","^9",145,"^80",2,"^81",true,"^L",["^M",["^7D",["^M",[["^?L","^8J"]]]]]],"^9B",["^ ","^7C",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",159,"^8",8,"^9",159,"^:",18,"^?K",true,"^L",["^M",["^7D",["^M",[["^8J","^9;"]]]]]],"^?K",true,"^N","^2B","^6","devtools/formatters/markup.cljs","^:",18,"^7F",["^M",[["^8J","^9;"]]],"^7G",null,"^7H",["^M",[null,null]],"^8",1,"^7I",["^ ","^7J","^7K","^7L",["^M",["^?M","^9B",["^8J","^9;"],["^M",["^7N",["~$seq",["^M",["^?R","^8J"]],"~$max-number-body-items",["^M",["^1>","~:max-number-body-items"]],"~$chunk",["^M",["^8X","^?S","^?R"]],"~$rest",["^M",["~$drop","^?S","^?R"]],"~$lines",["^M",["~$prepare-body-lines","^?U","^9;"]],"~$continue?",["^M",["^9Z",["^M",["^9[",["^M",["^8X",1,"^?V"]]]]]]],["^M",["^:1","^?Z","^?X",["^M",["^7N",["~$more-label-markup",["~:body-items-more-tag","~:body-items-more-label"],"^>1",["^M",["~$+","^9;","^?S"]],"~$more-markup",["^M",["^8;","^?V","^?[","^<I","^>1"]]],["^M",["^=X","^?X",["^@2"]]]]]]]]]]]],"^7Y",false,"^7",159,"^7Z",["^J",["^9C","^7["]],"^9",159,"^80",2,"^81",true,"^L",["^M",["^7D",["^M",[["^8J","^9;"]]]]]],"^>C",["^ ","^7C",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",369,"^8",7,"^9",369,"^:",15,"^L",["^M",["^7D",["^M",[["^9U","~$&",["~$max-fields"]]]]]],"^8=",["^ ","^7Y",true,"^8>",1,"^80",1,"^7F",[["^M",["^9U",["^@3"]]]],"^L",["^M",[["^9U","~$&",["^@3"]]]],"^7H",["^M",[null]]]],"^N","^4;","^6","devtools/formatters/markup.cljs","^:",15,"^8=",["^ ","^7Y",true,"^8>",1,"^80",1,"^7F",[["^M",["^9U",["^@3"]]]],"^L",["^M",[["^9U","~$&",["^@3"]]]],"^7H",["^M",[null]]],"^7F",[["^M",["^9U",["^@3"]]]],"^7G",null,"^8>",1,"^7H",["^M",[null]],"^8",1,"^7I",["^ ","^7J","^7K","^7L",["^M",["^7M","^>C",["^9U","~$&",["^@3"]],["^M",["^7R",["^M",["^:2",["^M",["^8T","^9U"]]]],["~:fields-header-tag","~:fields-header-no-fields-symbol"],["^M",["^7N",["^@3",["^M",["^8Q","^@3",["^M",["^1>","~:max-instance-header-fields"]]]],"^8S",["^M",["~$>",["^M",["^8T","^9U"]],"^@3"]],"~$fields-markups",["^M",["^8V",["^M",["^7P",[["^9J","^8J"]],["^M",["^9I","^9J","^8J"]]]],["^M",["^8X","^@3","^9U"]]]]],["^M",["^7S",["^@4","~:fields-header-open-symbol"],"^@7",[["^M",["^7R","^8S","~:more-fields-symbol"]],"~:fields-header-close-symbol"]]]]]]]]]],"^7Y",true,"^8A",[["^ ","^8>",1,"^7Y",true,"^8B","^9C"]],"^7",369,"^7Z","^8D","^9",369,"^80",1,"^81",true,"^L",["^M",[["^9U","~$&",["^@3"]]]]],"^:?",["^ ","^7C",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",68,"^8",7,"^9",68,"^:",12,"^L",["^M",["^7D",["^M",[[]]]]]],"^N","^44","^6","devtools/formatters/markup.cljs","^:",12,"^7F",["^M",[[]]],"^7G",null,"^7H",["^M",[null,null]],"^8",1,"^7I",["^ ","^7J","^7K","^7L",["^M",["^7M","^:?",[],["~:nil-tag","~:nil-label"]]]],"^7Y",false,"^7",68,"^7Z","^7[","^9",68,"^80",0,"^81",true,"^L",["^M",["^7D",["^M",[[]]]]]],"^7W",["^ ","^7C",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",118,"^8",7,"^9",118,"^:",13,"^L",["^M",["^7D",["^M",[["~$markup"]]]]]],"^N","^4:","^6","devtools/formatters/markup.cljs","^:",13,"^7F",["^M",[["^@="]]],"^7G",null,"^7H",["^M",[null,null]],"^8",1,"^7I",["^ ","^7J","^7K","^7L",["^M",["^7M","^7W",["^@="],["~:body-tag","^@="]]]],"^7Y",false,"^7",118,"^7Z","^7[","^9",118,"^80",1,"^81",true,"^L",["^M",["^7D",["^M",[["^@="]]]]]],"^:G",["^ ","^7C",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",81,"^8",7,"^9",81,"^:",15,"^L",["^M",["^7D",["^M",[["~$number"]]]]]],"^N","^4H","^6","devtools/formatters/markup.cljs","^:",15,"^7F",["^M",[["^@?"]]],"^7G",null,"^7H",["^M",[null,null]],"^8",1,"^7I",["^ ","^7J","^7K","^7L",["^M",["^7M","^:G",["^@?"],["^M",["^7R",["^M",["^31","^@?"]],["^M",["^7R",["^M",["~$integer?","^@?"]],["~:integer-tag","^@?"],["~:float-tag","^@?"]]],["^M",["^7R",["^M",["^3W","^@?"]],["~:float-nan-tag",["^M",["~$pr-str","^@?"]]],["~:float-infinity-tag",["^M",["^@D","^@?"]]]]]]]]]],"^7Y",false,"^7",81,"^7Z","^7[","^9",81,"^80",1,"^81",true,"^L",["^M",["^7D",["^M",[["^@?"]]]]]],"^=W",["^ ","^7C",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",318,"^8",7,"^9",318,"^:",25,"^L",["^M",["^7D",["^M",[["^9V","^1N","^=0","^=P","~$_fast?"]]]]]],"^N","^4E","^6","devtools/formatters/markup.cljs","^:",25,"^7F",["^M",[["^9V","^1N","^=0","^=P","^@F"]]],"^7G",null,"^7H",["^M",[null,null]],"^8",1,"^7I",["^ ","^7J","^7K","^7L",["^M",["^7M","^=W",["^9V","^1N","^=0","^=P","^@F"],["^M",["^7N",["~$protocol-obj",["^M",["~$munging/get-protocol-object","^=P"]],"^>V",["^M",["^:1",["^M",["^9[","^1N"]],["^=2",["~:protocol-ns-name-tag","^1N"]]]],"^>W",["^M",["^7R",["^M",["^;Q","^@G"]],["^::",["^M",["^82","^@G"]]]]],"~$methods",["^M",["~$munging/collect-protocol-methods","^9V","^=P"]],"~$methods-markups",["^M",["^8V",["^M",["^7P",[["^9J","^<4"]],["^M",["^<3","^9J","^<4"]]]],"^@J"]],"~$methods-markups-lists",["^M",["^8V","^?C","^@L"]]],["^M",["^7B",["^M",["^7S","^@M",["^>V","^>W"]]]]]]]]]],"^7Y",false,"^7",318,"^7Z","^7[","^9",318,"^80",5,"^81",true,"^L",["^M",["^7D",["^M",[["^9V","^1N","^=0","^=P","^@F"]]]]]],"^?Y",["^ ","^7C",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",151,"^8",8,"^9",151,"^:",26,"^?K",true,"^L",["^M",["^7D",["^M",[["~$data","^9;"]]]]]],"^?K",true,"^N","^4A","^6","devtools/formatters/markup.cljs","^:",26,"^7F",["^M",[["^@N","^9;"]]],"^7G",null,"^7H",["^M",[null,null]],"^8",1,"^7I",["^ ","^7J","^7K","^7L",["^M",["^?M","^?Y",["^@N","^9;"],["^M",["~$loop",["~$work","^@N","^?L","^9;","^?X",[]],["^M",["^7R",["^M",["^9[","^@P"]],"^?X",["^M",["~$recur",["^M",["^?V","^@P"]],["^M",["^;T","^?L"]],["^M",["^=X","^?X",["^M",["^?J","^?L",["^M",["^??","^@P"]]]]]]]]]]]]]]],"^7Y",false,"^7",151,"^7Z",["^J",["^9C","^7["]],"^9",151,"^80",2,"^81",true,"^L",["^M",["^7D",["^M",[["^@N","^9;"]]]]]]],"^14",["^ ","^H","^H","^10","^10","^Z","^Z","^[","^Z"],"~:cljs.analyzer/constants",["^ ","^12",["^J",["^93","~:protocol-details","^?T","^><","^>J","^<X","^<?","^@0","^=[","^:Y","~:selector","^@9","^<B","~:standard-body","^=V","^:7","~:standalone-type","^7X","^9S","^:H","^?<","^8G","~:protocol-method-arities","~:surrogate","^@4","^5","~:aligned-body","^@1","^@;","^9=","~:instance","^@B","^@I","~:protocol-method","~:protocol-method-arities-details","^92","~:number","^=Z","^?1","~:protocol","^>7","^=R","~:protocol-method-arity","^@E","~:more-protocols","^>L","^@>","^<9","^>3","^;6","^::","^:4","^:J","^P","~:symbol","~:fields-details-row","^N","^<S","^=>","^9M","^=T","^:B","^;Y","^<T","^?9","^:P","^@8","~:fields","~:type-details","^?7","~:protocols-list","^9N","^:3","^<W","~:field","~:type","^;A","~:type-basis-item","^:@","^:U","^@5","^@<","~:meta-wrapper","^>6","^=D","~:raw-surrogate","^9P","~:function-details","^<C","~:string","~:surrogate-header","^=@","~:native-reference","~:header","^;8","^=L","^<6","~:function","^8R","~:reference-surrogate","^>8","^=6","~:surrogate-body","^>T","^;V","^<N","^?;","^<;","^=3","^;[","^<@","^=C","^8[","^;;","^9H","~:reference","^>:","^>I","~:preview","~:fast?","^89","^=G","^@C","^>B","~:list","~:keyword","^>[","^<=","~:surrogate-target","^9L","^;@","^=B","^<>","~:nil","^:N","^;2","^91","^<5","~:fields-details","^=F","^:E","~:circular-reference","~:expandable","^<D","^=5","~:list-details","^?:","^@A","^;H","^>5","^<7","^?P","^>F","^?F","^;>","~:standard-body-reference","^8B","^?G","~:bool","^8:","^<I","~:type-basis","^7T","^:L","^<P","^>S","^<O","^8Z","^@6","~:arities","^<Y","^<0","^?3","^:=","^>;","~:body","^==","^=U","^9K","^88","^@:","^;1","^>H","^<A","~:atomic","^;I","^=E","^<U","^>K","~:header-expander","^=2","^?Q","^?E","^?A","~:cljs-land"]],"~:order",["^<N","^<O","^<P","^?E","^?F","^?G","^88","^89","^8:","^?A","^<I","^<9","^@;","^@<","^;V","^8G","^9S","^@A","^@B","^@C","^@E","^:U","^:Y","^;1","^;2","^;6","^;8","^;;","^;[","^<0","^@>","^7T","^7X","^;>","^;@","^;A","^=Z","^=[","^?P","^?Q","^?T","^@0","^@1","^9=","^==","^=>","^=@","^8B","^=B","^=C","^=D","^=E","^=F","^=G","^>:","^>;","^><","^=L","^>S","^>T","^=2","^=3","^::","^?3","^>[","^?1","^?7","^?9","^?:","^?;","^?<","^<;","^;H","^;I","^=5","^=6","^<S","^<T","^<U","^<W","^<X","^<Y","^;Y","^8R","^8Z","^8[","^91","^92","^93","^<5","^<6","^<7","^@I","^P","^N","^@T","^AI","^=R","^=T","^=U","^=V","^9H","^>3","^>5","^>6","^>7","^>8","^9K","^9L","^9M","^9N","^9P","^<=","^<>","^<?","^<@","^<A","^<B","^<C","^<D","^@4","^@5","^@6","^@8","^@9","^@:","^:3","^:4","^:7","^>B","^>F","^>H","^>I","^>J","^>K","^>L","^:=","^:@","^:B","^:E","^:H","^:J","^:L","^:N","^:P","^@Y","^AB","^AE","^AK","^@W","^AA","^A4","^A:","^A5","^AN","^AW","^A@","^@U","^AT","^AS","^@V","^AH","^AC","^@[","^AY","^A<","^A0","^A6","^AR","^AF","^AP","^A;","^A3","^A>","^A8","^AJ","^A=","^A2","^@X","^A9","^5","^@Z","^AG","^A?","^AD","^AU","^AX","^AQ","^AO","^AL","^A7","^AM","^AV","^A1","^@S"]],"^1Q",["^ ","^14",["^J",[]],"^13",["^J",[]]],"^1R",["^ "],"^1S",["^11","^10","^V","^W","^X","^Y","^Z"]],"^P","^H","~:ns-specs",["^ "],"~:ns-spec-vars",["^J",[]],"~:compiler-options",["^51",[["^B1","~:static-fns"],true,["~:js-options","~:use-babel"],null,["^B1","~:shadow-tweaks"],null,["^B1","~:source-map-inline"],null,["^B1","~:elide-asserts"],false,["^B1","~:optimize-constants"],null,["^B1","^1X"],null,["^B1","~:external-config"],null,["^B1","~:tooling-config"],null,["^B1","~:emit-constants"],null,["^B1","~:load-tests"],null,["^B1","~:form-size-threshold"],null,["^B1","~:global-goog-object&array"],null,["^B1","~:data-readers"],null,["^B1","~:infer-externs"],"~:auto",["^B1","^1Z"],null,["^B3","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^B1","~:fn-invoke-direct"],null,["^B1","~:source-map"],"/dev/null"]]]